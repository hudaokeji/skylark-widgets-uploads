{"version":3,"sources":["skylark-widgets-uploads-all.js"],"names":["define","obj1","path","obj2","split","length","ns","i","name","_attach","skylark","attach","obj","main","class2type","nativeIsArray","Array","isArray","toString","type","forEach","toLowerCase","String","call","object","constructor","isEmptyObject","isFunction","value","isHtmlNode","nodeType","isNumber","isObject","isString","isWindow","window","isArrayLike","isBoolean","isDefined","isDocument","DOCUMENT_NODE","isElement","isEmpty","isNull","isNumeric","isPlainObject","Object","getPrototypeOf","prototype","isSameOrigin","href","origin","location","protocol","hostname","port","startsWith","isSymbol","isObjectLike","objectToString","symbolTag","isUndefined","types","INFINITY","MAX_INTEGER","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toFinite","toNumber","sign","other","valueOf","replace","isBinary","test","slice","toInteger","result","remainder","numbers","eq","deepEq","hasOwnProperty","keysFunc","defaults","SymbolProto","Symbol","allKeys","keys","key","push","has","_mixin","target","source","deep","safe","undefined","_parseMixinArgs","args","params","arguments","shift","pop","sources","mixin","apply","this","values","a","b","aStack","bStack","className","areArrays","aCtor","bCtor","clone","src","checkCloneMethod","copy","index","l","each","callback","undef","extend","arg","isEqual","includes","collection","fromIndex","guard","nativeMax","indexOf","baseIndexOf","isMatch","attrs","omit","prop1","prop2","pn","pick","removeItem","items","item","idx","splice","fallback","prop","safeMixin","objects","filter","find","baseFindIndex","array","predicate","fromRight","baseIsNaN","flatten","j","compact","first","n","func","grep","out","inArray","makeArray","offset","startWith","concat","merge","second","arr","fn","map","elements","reduce","initialValue","uniq","arrays","createClass","_constructor","_construct","init","props","parent","mixins","options","innerParent","ctor","Error","clss","unshift","superclass","cls","clsMixines","serialMixins","newCtor","xtor","Function","create","__proto__","__mixin__","mergeMixins","klassName","__mixins__","partial","proto","_super","noOverrided","overrides","superFn","tmp","overrided","ret","defineProperty","extendClass","inherit","f1","klass","QueryResults","results","isPromise","then","addIterativeMethod","method","Deferred","when","delegate","total","ArrayStore","queryEngine","query","queryObject","required","execute","thisObject","cache","buildFn","sortSet","sort","aValue","attribute","bValue","descending","start","count","Infinity","matches","idProperty","get","id","data","getIdentity","put","Math","random","overwrite","add","remove","setData","identifier","nextId","aspect","methodName","advice","receiveArguments","dispatcher","existing","executionId","before","next","around","after","newResults","signal","previous","advised","advise","proxy","context","TypeError","TMP","templateSettings","evaluate","interpolate","escape","noMatch","escapes","'","\\","\r","\n","\t"," "," ","escaper","bind","debounce","wait","timeout","clearTimeout","setTimeout","defer","requestAnimationFrame","setTimeoutout","negate","noop","returnTrue","returnFalse","template","text","settings","render","matcher","RegExp","join","match","variable","e","argument","funcs","Promise","always","handler","done","fail","catch","self","promise","makePromise2","resolve","reject","_resolve","_reject","isResolved","isPending","isRejected","v","state","notified","listeners","onResolved","onRejected","onProgress","progress","__ctx__","pipe","notify","listener","error","resolveWith","_resolved","p","reason","rejectWith","_rejected","errback","progback","all","d","race","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","err","immediate","async","parallel","ctx","rets","series","waterful","parseMilliSeconds","str","strs","number","isNaN","trim","datetimes","parse","event","segs","Emitter","on","events","selector","one","_hub","parsed","emit","CustomEvent","eventName","len","reCompact","listened","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","_","unlistenTo","trigger","createEvent","Evented","hoster","isBrowser","isNode","global","browser","node","process","versions","v8","_document","w","require","document","matched","ua","exec","version","uaMatch","navigator","userAgent","chrome","webkit","safari","escapeCharMap","freeze","&","<",">","\"","`","=","replaceChar","c","escapeChars","idCounter","string","line","body","escapeHTML","me","callee","stash","getElementById","innerHTML","camelCase","toUpperCase","dasherize","deserializeValue","JSON","generateUUID","r","lowerFirst","charAt","rtrim","serializeValue","stringify","substitute","transform","getObject","retVal","getValue","_k","reverse","format","slugify","from","uniqueId","prefix","upperFirst","strings","Stateful","attributes","cid","cidPrefix","set","changed","validationError","idAttribute","toJSON","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","hub","publish","arg1","argn","subscribe","topic","_uid","langx","funcArg","payload","getQueryParams","url","queryParam","nv","toPixel","parseFloat","uid","URL","webkitURL","vendorPrefix","vendorPrefixRE","transEndEventNames","WebkitTransition","MozTransition","OTransition","transition","transEndEventName","css3PropPrefix","css3EventPrefix","cssStyles","cssProps","vendorPrefixesRE","testEl","createElement","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","requestFullScreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","testStyle","exitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","style","cssPropName","isIE","normalizeStyleProperty","normalizeCssProperty","normalizeCssEvent","support","end","fragmentRE","singleTagRE","div","table","tableBody","tableRow","containers","tr","tbody","thead","tfoot","td","th","*","rootNodeRE","ensureNodes","nodes","copyByClone","cloneNode","nodeName","elm","chkName","enhancePlaceContent","placing","neddsFlattern","append","parentNode","appendChild","tag","createElementNS","setAttribute","rxhtmlTag","isChildOf","directly","documentElement","contains","ownerDoc","ownerDocument","noder","active","doc","el","activeElement","blur","getAttribs","setAttrib","getAttrib","contents","contentDocument","childNodes","createFragment","html","$1","container","xml","newXml","edsplit","removeSelfClosingTags","dom","removeChild","child","createTextNode","empty","hasChildNodes","firstChild","fullScreen","exitFullScreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","focusable","element","hasTabindex","mapName","img","focusableIfVisible","fieldset","$","is","disabled","closest","visible","isInDocument","offsetParent","defaultView","getComputedStyle","position","ownerWindow","parentWindow","refNode","nextSibling","insertBefore","prepend","reflow","offsetHeight","console","warn","children","oldNode","replaceChild","traverse","wrapper","wrapperNode","wrapperInner","unwrap","isDoc","local","nativeMatchesSelector","separatorIndex","combinatorIndex","reversed","reverseCache","reUnescape","expression","isReversed","Slick","currentCache","expressions","raw","regexp","parser","reverseCombinator","combinator","exp","last","parts","cexp","escapeRegExp","rawMatch","separator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","currentSeparator","currentParsed","classList","classes","pseudos","operator","rinputs","rheader","parseSelector","button","elem","checked","enabled","even","focus","tabindex","gt","sel","header","hidden","input","lt","not","odd","selected","tabbable","tabIndex","offsetWidth","createInputPseudo","createButtonPseudo","isArrayFilter","radio","checkbox","file","password","image","submit","reset","ancestors","root","rootIsSelector","descendants","querySelectorAll","matchError","descendant","querySelector","lastChild","previousSibling","check","adjacent","nextSiblings","previousSiblings","siblings","divide","cond","nativeSelector","customPseudos","part","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","combine","bit","node1","op","divided","single","currentBit","founds","found","currentItems","finder","ancestor","byId","findAll","isQ","some","every","rquickExpr","wrapper_node_operation","oldValueFunc","argType","wrapper_map","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_value","newValue","NodeList","ready","rootQuery","toArray","size","excludes","parents","parentsUntil","pluck","property","pushStack","elms","prevObject","replaceWith","newContent","wrap","htmlIsFunction","wrapAll","firstElementChild","wrapInner","toggle","setting","css","show","hide","prevAll","nextAll","detach","hover","fnOver","fnOut","mouseenter","mouseleave","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","scrollParent","includeHidden","excludeStaticParent","overflowRegex","andSelf","addBack","eventType","place","addContent","content","disableSelection","preventDefault","enableSelection","flow","isBlockNode","plugin","returnValue","plugins","instantiate","wraps","wrapper_some_chk","wrapper_every_act_firstArgFunc","newArg1","wrapper_name_value","http","getAbsoluteUrl","Xhr","jsonpID","rscript","scriptTypeRE","xmlTypeRE","jsonType","htmlType","blankRE","XhrDefaultOptions","beforeSend","success","complete","accepts","script","json","crossDomain","processData","traditional","xhrFields","withCredentials","mimeToDataType","mime","appendQuery","serializeData","param","serialize","scope","t","hash","encodeURIComponent","_request","xhr","XMLHttpRequest","dataType","handleAs","mimeType","headers","isFormData","FormData","basicAuthorizationToken","user","contentType","overrideMimeType","finish","onloadend","onabort","onprogress","ontimeout","status","getResponseHeader","responseText","eval","responseXML","Blob","xhrObj","response","reponse","statusText","evt","open","setRequestHeader","send","abort","request","post","patch","del","defaultOptions","blobSlice","webkitSlice","mozSlice","Upload","_options","debug","maxConnections","maxChunkSize","fileName","loaded","onComplete","onCancel","onFailure","_queue","_params","_files","_xhrs","_loaded","_send","sendAll","_cancel","_dequeue","cancelAll","getName","getSize","fileSize","getLoaded","curUploadingSize","chunkSize","curLoadedSize","formParamName","formData","lengthComputable","getQueue","max","capitalRE","propMap","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","valHooks","option","select","selectedIndex","optionSet","attrName","_store","confirm","store","_attributeData","_setData","dataAttrName","camelName","_getData","cleanData","txt","textContent","hooks","value1","datax","dataName","aria","removeAttr","removeAttribute","removeData","names","removeProp","VisualElement","_elm","velm","batch","action","HTMLElement","_delegator","ignoreProperties","eventMethods","stopImmediatePropagation","stopPropagation","readyRE","compatible","isDefaultPrevented","sourceMethod","NativeEventCtors","NativeEvents","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","change","selectionchange","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","textInput","touchstart","touchmove","touchend","load","resize","scroll","unload","wheel","bubbles","cancelable","namespace","getEventCtor","createProxy","originalEvent","specialEvents","focusinSupported","realEvent","handlers","EventBindings","_target","_event","_bindings","bindings","binding","_listener","domEvt","_args","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","addEventListener","removing","removeEventListener","EventsHandler","_handler","register","specialEvent","bindingEvent","bindType","bindEventName","unregister","findHandler","readyState","keyCodeLookup","backspace","comma","delete","down","enter","home","left","page_down","page_up","period","right","space","tab","up","eventer","transitionEnd","delegateType","shortcuts","registry","run","shortcut","metaKey","ctrlKey","ctrl","alt","altKey","shiftKey","keyCode","charCode","pattern","shortcutKey","charCodeAt","regKey","special","stop","evented","Event","dispatchEvent","delegateMethodNames","files","maybeAddPx","cssNumber","column-count","columns","font-weight","line-height","opacity","z-index","zoom","classReCache","classRE","svg","baseVal","elementDisplay","getStyles","view","opener","styler","autocssfix","cssHooks","addClass","re","computedStyle","getPropertyValue","removeProperty","cssText","hasClass","isInvisible","removeClass","display","defaultDisplay","toggleClass","replaceClass","newClass","oldClass","diskfs","webentry","entry","onError","isFile","relativePath","isDirectory","dirReader","createReader","readEntries","entries","dropzone","hoverClass","droppedCallback","dropped","enterdCount","dataTransfer","webkitGetAsEntry","getAsEntry","pastezone","pastedCallback","pasted","clipboardData","getAsFile","fileInput","maxFileSize","directory","multiple","accept","title","fileSelected","picked","selectFiles","pickedFiles","top","onchange","webkitEntries","webkitdirectory","picker","cachedScrollbarWidth","px","scrollbarWidth","w1","w2","innerDiv","clientWidth","borderExtents","bottom","s","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","clientSize","dimension","width","height","clientHeight","isBorderBox","bex","pex","paddingExtents","getDocumentSize","scrollWidth","scrollHeight","marginLeft","marginTop","marginRight","marginBottom","marginSize","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","relativeRect","scrollLeft","hasScrollLeft","scrollTo","scrollY","scrollTop","hasScrollTop","scrollX","innerWidth","innerHeight","geom","contentRect","cs","marginRect","pageRect","round","scrollIntoView","align","x","y","parentWidth","parentHeight","parentElm","pos","rootElm","offsetLeft","offsetTop","getOffset","abs","rhorizontal","rvertical","roffset","rposition","rpercent","getOffsets","offsets","parseCss","positions","fit","newOverRight","within","withinOffset","outerWidth","collisionPosLeft","collisionPosition","overLeft","overRight","collisionWidth","newOverBottom","outerHeight","collisionPosTop","overTop","overBottom","collisionHeight","flip","newOverLeft","myOffset","my","elemWidth","atOffset","at","targetWidth","newOverTop","elemHeight","targetHeight","flipfit","posit","targetOffset","basePosition","dimensions","of","withinElement","hasOffset","msize","scrollInfo","overflowX","overflowY","hasOverflowX","getScrollInfo","collision","pageY","pageX","horizontalOffset","verticalOffset","using","dir","feedback","horizontal","vertical","important","Dimension","m","margin","cb","mb","animationName","animationDuration","animationTiming","transitionProperty","transitionDuration","transitionTiming","transitionDelay","animationEnd","supportedTransforms","cssReset","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","fx","speeds","normal","eace","clientLeft","scrollToTop","speed","scale","scrollFrom","freq","interval","setInterval","clearInterval","fadeTo","fadeIn","fadeOut","slideDown","visibility","overflow","slideUp","queue","fast","slow","emulateTransitionEnd","called","fadeToggle","ceasing","allback","slideToggle","throb","timer","time","throbber","overlayDiv","zIndex","overlay","textNode","update","nodeValue","toogle","elmx","pluginKlasses","pluginName","pair","instanceDataName","pluginInstance","destroy","pluginKlass","Plugin","_initOptions","ctors","_destroy","_delay","instance","curOption","_setOptions","_setOption","getUID","domNode","shortcutName","extfn","shortcutter","args2","collections","Collection","_clear","it","iterator","hasNext","thisArg","Map","_getInnerItems","_items","_findKeyByRegExp","regExp","strKey","oldValue","updated","findByRegExp","removeByRegExp","toPlain","plain","delim","_Map","HashMap","base","Widget","_elmx","_parse","_velm","_create","_init","addonCategoryOptions","addons","widgetCtor","categoryName","addonOption","addonName","addonSetting","addonCtor","addon","parentElement","_startup","optionsAttr","options1","widgetClass","_refresh","updates","mapping","attributs","styles","_addons","category","getEnclosing","getEnclosed","ArrayList","ex","enable","disable","getEl","ariaTarget","_aria","meta","addStatePropMethod","widgetName","FileUpload","uploads","MultiUploader","uploadUrl","allowedExtensions","sizeLimit","minSizeLimit","autoUpload","selectors","fileList","fileItem","nodata","startUploads","cancelUploads","_initEventHandler","_initFileHandlers","_initUpoadHandler","_updateFileList","dzSelector","pzSelector","pkSelector","_addFiles","_onProgress","_onComplete","_onCancel","_onFailure","itemSelectors","_listElement","$fileItem","fileId","$files","$item","_getItemByFileId","percent","progressHTML","_formatSize","_updateFile","_filesInProgress","doneMsg","_addToList","_formatFileName","with_files_elements","without_files_elements","when_pending","when_running","when_done","item2","_validateFile","_addFile","_isAllowedExtension","_error","code","messages","replacement","showMessage","ext","allowed","bytes","toFixed"],"mappings":"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","file":"../skylark-widgets-uploads-all.js","sourcesContent":["define('skylark-langx-ns/_attach',[],function(){\r\n    return  function attach(obj1,path,obj2) {\r\n        if (typeof path == \"string\") {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length,\r\n            ns=obj1,\r\n            i=0,\r\n            name = path[i++];\r\n\r\n        while (i < length) {\r\n            ns = ns[name] = ns[name] || {};\r\n            name = path[i++];\r\n        }\r\n\r\n        return ns[name] = obj2;\r\n    }\r\n});\ndefine('skylark-langx-ns/ns',[\r\n    \"./_attach\"\r\n], function(_attach) {\r\n    var skylark = {\r\n    \tattach : function(path,obj) {\r\n    \t\treturn _attach(skylark,path,obj);\r\n    \t}\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx-ns/main',[\r\n\t\"./ns\"\r\n],function(skylark){\r\n\treturn skylark;\r\n});\ndefine('skylark-langx-ns', ['skylark-langx-ns/main'], function (main) { return main; });\n\ndefine('skylark-langx/skylark',[\r\n    \"skylark-langx-ns\"\r\n], function(ns) {\r\n\treturn ns;\r\n});\r\n\ndefine('skylark-widgets-uploads/uploads',[\r\n  \"skylark-langx/skylark\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"widgets.updates\",{});\r\n});\ndefine('skylark-langx-types/types',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n    var nativeIsArray = Array.isArray, \r\n        toString = {}.toString;\r\n    \r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \").forEach(function(name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n \r\n    var  isArray = nativeIsArray || function(obj) {\r\n        return object && object.constructor === Array;\r\n    };\r\n\r\n\r\n    /**\r\n     * Checks if `value` is array-like. A value is considered array-like if it's\r\n     * not a function/string/element and has a `value.length` that's an integer greater than or\r\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\r\n     *\r\n     * @category Lang\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\r\n     * @example\r\n     *\r\n     * isArrayLike([1, 2, 3])\r\n     * // => true\r\n     *\r\n     * isArrayLike(document.body.children)\r\n     * // => false\r\n     *\r\n     * isArrayLike('abc')\r\n     * // => true\r\n     *\r\n     * isArrayLike(Function)\r\n     * // => false\r\n     */    \r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number' && !isFunction(obj);\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a boolean primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\r\n     * @example\r\n     *\r\n     * isBoolean(false)\r\n     * // => true\r\n     *\r\n     * isBoolean(null)\r\n     * // => false\r\n     */\r\n    function isBoolean(obj) {\r\n       return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\r\n       //return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n   // Is a given value a DOM element?\r\n    function isElement(obj) {\r\n        return !!(obj && obj.nodeType === 1);\r\n    }   \r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Function` object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\r\n     * @example\r\n     *\r\n     * isFunction(parseInt)\r\n     * // => true\r\n     *\r\n     * isFunction(/abc/)\r\n     * // => false\r\n     */\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && obj.nodeType; // obj instanceof Node; //Consider the elements in IFRAME\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n\r\n    function isNull(obj) {\r\n        return obj === null;\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isObject(obj) {\r\n        var type = typeof obj;\r\n        return type === 'function' || type === 'object' && !!obj;        \r\n        //return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Symbol` primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\r\n     * @example\r\n     *\r\n     * _.isSymbol(Symbol.iterator);\r\n     * // => true\r\n     *\r\n     * _.isSymbol('abc');\r\n     * // => false\r\n     */\r\n    function isSymbol(value) {\r\n      return typeof value == 'symbol' ||\r\n        (isObjectLike(value) && objectToString.call(value) == symbolTag);\r\n    }\r\n\r\n    // Is a given variable undefined?\r\n    function isUndefined(obj) {\r\n        return obj === void 0;\r\n    }\r\n\r\n    return skylark.attach(\"langx.types\",{\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: isDefined,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isElement,\r\n\r\n        isEmpty : isEmptyObject,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isNull: isNull,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isNumeric: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isSymbol : isSymbol,\r\n\r\n        isUndefined: isUndefined,\r\n\r\n        isWindow: isWindow,\r\n\r\n        type: type\r\n    });\r\n\r\n});\ndefine('skylark-langx-types/main',[\r\n\t\"./types\"\r\n],function(types){\r\n\treturn types;\r\n});\ndefine('skylark-langx-types', ['skylark-langx-types/main'], function (main) { return main; });\n\ndefine('skylark-langx-numbers/numbers',[\r\n    \"skylark-langx-ns\",\r\n    \"skylark-langx-types\"\r\n],function(skylark,types){\r\n\tvar isObject = types.isObject,\r\n\t\tisSymbol = types.isSymbol;\r\n\r\n\tvar INFINITY = 1 / 0,\r\n\t    MAX_SAFE_INTEGER = 9007199254740991,\r\n\t    MAX_INTEGER = 1.7976931348623157e+308,\r\n\t    NAN = 0 / 0;\r\n\r\n\t/** Used to match leading and trailing whitespace. */\r\n\tvar reTrim = /^\\s+|\\s+$/g;\r\n\r\n\t/** Used to detect bad signed hexadecimal string values. */\r\n\tvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\r\n\r\n\t/** Used to detect binary string values. */\r\n\tvar reIsBinary = /^0b[01]+$/i;\r\n\r\n\t/** Used to detect octal string values. */\r\n\tvar reIsOctal = /^0o[0-7]+$/i;\r\n\r\n\t/** Used to detect unsigned integer values. */\r\n\tvar reIsUint = /^(?:0|[1-9]\\d*)$/;\r\n\r\n\t/** Built-in method references without a dependency on `root`. */\r\n\tvar freeParseInt = parseInt;\r\n\r\n\t/**\r\n\t * Converts `value` to a finite number.\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @since 4.12.0\r\n\t * @category Lang\r\n\t * @param {*} value The value to convert.\r\n\t * @returns {number} Returns the converted number.\r\n\t * @example\r\n\t *\r\n\t * _.toFinite(3.2);\r\n\t * // => 3.2\r\n\t *\r\n\t * _.toFinite(Number.MIN_VALUE);\r\n\t * // => 5e-324\r\n\t *\r\n\t * _.toFinite(Infinity);\r\n\t * // => 1.7976931348623157e+308\r\n\t *\r\n\t * _.toFinite('3.2');\r\n\t * // => 3.2\r\n\t */\r\n\tfunction toFinite(value) {\r\n\t  if (!value) {\r\n\t    return value === 0 ? value : 0;\r\n\t  }\r\n\t  value = toNumber(value);\r\n\t  if (value === INFINITY || value === -INFINITY) {\r\n\t    var sign = (value < 0 ? -1 : 1);\r\n\t    return sign * MAX_INTEGER;\r\n\t  }\r\n\t  return value === value ? value : 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts `value` to an integer.\r\n\t *\r\n\t * **Note:** This method is loosely based on\r\n\t * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @param {*} value The value to convert.\r\n\t * @returns {number} Returns the converted integer.\r\n\t * @example\r\n\t *\r\n\t * _.toInteger(3.2);\r\n\t * // => 3\r\n\t *\r\n\t * _.toInteger(Number.MIN_VALUE);\r\n\t * // => 0\r\n\t *\r\n\t * _.toInteger(Infinity);\r\n\t * // => 1.7976931348623157e+308\r\n\t *\r\n\t * _.toInteger('3.2');\r\n\t * // => 3\r\n\t */\r\n\tfunction toInteger(value) {\r\n\t  var result = toFinite(value),\r\n\t      remainder = result % 1;\r\n\r\n\t  return result === result ? (remainder ? result - remainder : result) : 0;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Converts `value` to a number.\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @since 4.0.0\r\n\t * @category Lang\r\n\t * @param {*} value The value to process.\r\n\t * @returns {number} Returns the number.\r\n\t * @example\r\n\t *\r\n\t * _.toNumber(3.2);\r\n\t * // => 3.2\r\n\t *\r\n\t * _.toNumber(Number.MIN_VALUE);\r\n\t * // => 5e-324\r\n\t *\r\n\t * _.toNumber(Infinity);\r\n\t * // => Infinity\r\n\t *\r\n\t * _.toNumber('3.2');\r\n\t * // => 3.2\r\n\t */\r\n\tfunction toNumber(value) {\r\n\t  if (typeof value == 'number') {\r\n\t    return value;\r\n\t  }\r\n\t  if (isSymbol(value)) {\r\n\t    return NAN;\r\n\t  }\r\n\t  if (isObject(value)) {\r\n\t    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\r\n\t    value = isObject(other) ? (other + '') : other;\r\n\t  }\r\n\t  if (typeof value != 'string') {\r\n\t    return value === 0 ? value : +value;\r\n\t  }\r\n\t  value = value.replace(reTrim, '');\r\n\t  var isBinary = reIsBinary.test(value);\r\n\t  return (isBinary || reIsOctal.test(value))\r\n\t    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\r\n\t    : (reIsBadHex.test(value) ? NAN : +value);\r\n\t}\r\n\r\n\treturn  skylark.attach(\"langx.numbers\",{\r\n\t\ttoFinite : toFinite,\r\n\t\ttoNumber : toNumber,\r\n\t\ttoInteger : toInteger\r\n\t});\r\n});\ndefine('skylark-langx-numbers/main',[\r\n\t\"./numbers\"\r\n],function(numbers){\r\n\treturn numbers;\r\n});\ndefine('skylark-langx-numbers', ['skylark-langx-numbers/main'], function (main) { return main; });\n\ndefine('skylark-langx-objects/objects',[\r\n    \"skylark-langx-ns/ns\",\r\n    \"skylark-langx-ns/_attach\",\r\n\t\"skylark-langx-types\",\r\n    \"skylark-langx-numbers\"\r\n],function(skylark,_attach,types,numbers){\r\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty,\r\n        slice = Array.prototype.slice,\r\n        isBoolean = types.isBoolean,\r\n        isFunction = types.isFunction,\r\n\t\tisObject = types.isObject,\r\n\t\tisPlainObject = types.isPlainObject,\r\n\t\tisArray = types.isArray,\r\n        isArrayLike = types.isArrayLike,\r\n        isString = types.isString,\r\n        toInteger = numbers.toInteger;\r\n\r\n     // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);  \r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function extend(target) {\r\n        var deep, args = slice.call(arguments, 1);\r\n        if (typeof target == 'boolean') {\r\n            deep = target\r\n            target = args.shift()\r\n        }\r\n        if (args.length == 0) {\r\n            args = [target];\r\n            target = this;\r\n        }\r\n        args.forEach(function(arg) {\r\n            mixin(target, arg, deep);\r\n        });\r\n        return target;\r\n    }\r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\r\n     * checked for a substring of `value`, otherwise\r\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\r\n     * the offset from the end of `collection`.\r\n     *\r\n     * @static\r\n     * @memberOf _\r\n     * @since 0.1.0\r\n     * @category Collection\r\n     * @param {Array|Object|string} collection The collection to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} [fromIndex=0] The index to search from.\r\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\r\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\r\n     * @example\r\n     *\r\n     * _.includes([1, 2, 3], 1);\r\n     * // => true\r\n     *\r\n     * _.includes([1, 2, 3], 1, 2);\r\n     * // => false\r\n     *\r\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\r\n     * // => true\r\n     *\r\n     * _.includes('abcd', 'bc');\r\n     * // => true\r\n     */\r\n    function includes(collection, value, fromIndex, guard) {\r\n      collection = isArrayLike(collection) ? collection : values(collection);\r\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\r\n\r\n      var length = collection.length;\r\n      if (fromIndex < 0) {\r\n        fromIndex = nativeMax(length + fromIndex, 0);\r\n      }\r\n      return isString(collection)\r\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\r\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\r\n    }\r\n\r\n\r\n   // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            //if (!source.hasOwnProperty(key)) {\r\n            //    continue;\r\n            //}\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0),\r\n            target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n   // Return a copy of the object without the blacklisted properties.\r\n    function omit(obj, prop1,prop2) {\r\n        if (!obj) {\r\n            return null;\r\n        }\r\n        var result = mixin({},obj);\r\n        for(var i=1;i<arguments.length;i++) {\r\n            var pn = arguments[i];\r\n            if (pn in obj) {\r\n                delete result[pn];\r\n            }\r\n        }\r\n        return result;\r\n\r\n    }\r\n\r\n   // Return a copy of the object only containing the whitelisted properties.\r\n    function pick(obj,prop1,prop2) {\r\n        if (!obj) {\r\n            return null;\r\n        }\r\n        var result = {};\r\n        for(var i=1;i<arguments.length;i++) {\r\n            var pn = arguments[i];\r\n            if (pn in obj) {\r\n                result[pn] = obj[pn];\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = allKeys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n\r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    return skylark.attach(\"langx.objects\",{\r\n        allKeys: allKeys,\r\n\r\n        attach : _attach,\r\n\r\n        clone: clone,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        each : each,\r\n\r\n        extend : extend,\r\n\r\n        has: has,\r\n\r\n        isEqual: isEqual,   \r\n\r\n        includes: includes,\r\n\r\n        isMatch: isMatch,\r\n\r\n        keys: keys,\r\n\r\n        mixin: mixin,\r\n\r\n        omit: omit,\r\n\r\n        pick: pick,\r\n\r\n        removeItem: removeItem,\r\n\r\n        result : result,\r\n        \r\n        safeMixin: safeMixin,\r\n\r\n        values: values\r\n    });\r\n\r\n\r\n});\ndefine('skylark-langx-objects/main',[\r\n\t\"./objects\"\r\n],function(objects){\r\n\treturn objects;\r\n});\ndefine('skylark-langx-objects', ['skylark-langx-objects/main'], function (main) { return main; });\n\ndefine('skylark-langx-arrays/arrays',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\"\r\n],function(skylark,types,objects){\r\n  var filter = Array.prototype.filter,\r\n      find = Array.prototype.find,\r\n    isArrayLike = types.isArrayLike;\r\n\r\n    /**\r\n     * The base implementation of `_.findIndex` and `_.findLastIndex` without\r\n     * support for iteratee shorthands.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {Function} predicate The function invoked per iteration.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @param {boolean} [fromRight] Specify iterating from right to left.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseFindIndex(array, predicate, fromIndex, fromRight) {\r\n      var length = array.length,\r\n          index = fromIndex + (fromRight ? 1 : -1);\r\n\r\n      while ((fromRight ? index-- : ++index < length)) {\r\n        if (predicate(array[index], index, array)) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseIndexOf(array, value, fromIndex) {\r\n      if (value !== value) {\r\n        return baseFindIndex(array, baseIsNaN, fromIndex);\r\n      }\r\n      var index = fromIndex - 1,\r\n          length = array.length;\r\n\r\n      while (++index < length) {\r\n        if (array[index] === value) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `isNaN` without support for number objects.\r\n     *\r\n     * @private\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\r\n     */\r\n    function baseIsNaN(value) {\r\n      return value !== value;\r\n    }\r\n\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function filter2(array,func) {\r\n      return filter.call(array,func);\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        objects.each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n\r\n    function forEach (arr, fn) {\r\n      if (arr.forEach) return arr.forEach(fn)\r\n      for (var i = 0; i < arr.length; i++) fn(arr[i], i);\r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n\r\n    function merge( first, second ) {\r\n      var l = second.length,\r\n          i = first.length,\r\n          j = 0;\r\n\r\n      if ( typeof l === \"number\" ) {\r\n        for ( ; j < l; j++ ) {\r\n          first[ i++ ] = second[ j ];\r\n        }\r\n      } else {\r\n        while ( second[j] !== undefined ) {\r\n          first[ i++ ] = second[ j++ ];\r\n        }\r\n      }\r\n\r\n      first.length = i;\r\n\r\n      return first;\r\n    }\r\n\r\n    function reduce(array,callback,initialValue) {\r\n        return Array.prototype.reduce.call(array,callback,initialValue);\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    function find2(array,func) {\r\n      return find.call(array,func);\r\n    }\r\n\r\n    return skylark.attach(\"langx.arrays\",{\r\n        baseFindIndex: baseFindIndex,\r\n\r\n        baseIndexOf : baseIndexOf,\r\n        \r\n        compact: compact,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n        filter : filter2,\r\n\r\n        find : find2,\r\n        \r\n        flatten: flatten,\r\n\r\n        grep: grep,\r\n\r\n        inArray: inArray,\r\n\r\n        makeArray: makeArray,\r\n\r\n        merge : merge,\r\n\r\n        forEach : forEach,\r\n\r\n        map : map,\r\n        \r\n        reduce : reduce,\r\n\r\n        uniq : uniq\r\n\r\n    });\r\n});\ndefine('skylark-langx-arrays/main',[\r\n\t\"./arrays\"\r\n],function(arrays){\r\n\treturn arrays;\r\n});\ndefine('skylark-langx-arrays', ['skylark-langx-arrays/main'], function (main) { return main; });\n\ndefine('skylark-langx/arrays',[\r\n\t\"skylark-langx-arrays\"\r\n],function(arrays){\r\n  return arrays;\r\n});\ndefine('skylark-langx-klass/klass',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n],function(skylark,types,objects,arrays){\r\n    var uniq = arrays.uniq,\r\n        has = objects.has,\r\n        mixin = objects.mixin,\r\n        isArray = types.isArray,\r\n        isDefined = types.isDefined;\r\n\r\n/* for reference \r\n function klass(props,parent) {\r\n    var ctor = function(){\r\n        this._construct();\r\n    };\r\n    ctor.prototype = props;\r\n    if (parent) {\r\n        ctor._proto_ = parent;\r\n        props.__proto__ = parent.prototype;\r\n    }\r\n    return ctor;\r\n}\r\n\r\n// Type some JavaScript code here.\r\nlet animal = klass({\r\n  _construct(){\r\n      this.name = this.name + \",hi\";\r\n  },\r\n    \r\n  name: \"Animal\",\r\n  eat() {         // [[HomeObject]] == animal\r\n    alert(`${this.name} eats.`);\r\n  }\r\n    \r\n    \r\n});\r\n\r\n\r\nlet rabbit = klass({\r\n  name: \"Rabbit\",\r\n  _construct(){\r\n      super._construct();\r\n  },\r\n  eat() {         // [[HomeObject]] == rabbit\r\n    super.eat();\r\n  }\r\n},animal);\r\n\r\nlet longEar = klass({\r\n  name: \"Long Ear\",\r\n  eat() {         // [[HomeObject]] == longEar\r\n    super.eat();\r\n  }\r\n},rabbit);\r\n*/\r\n    \r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    var f1 = function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided,\r\n                overrides = options && options.overrides || {};\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                var prop = props[name];\r\n                if (typeof props[name] == \"function\") {\r\n                    proto[name] =  !prop._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                          (function(name, fn, superFn) {\r\n                            return function() {\r\n                                var tmp = this.overrided;\r\n\r\n                                // Add a new ._super() method that is the same method\r\n                                // but on the super-class\r\n                                this.overrided = superFn;\r\n\r\n                                // The method only need to be bound temporarily, so we\r\n                                // remove it when we're done executing\r\n                                var ret = fn.apply(this, arguments);\r\n\r\n                                this.overrided = tmp;\r\n\r\n                                return ret;\r\n                            };\r\n                        })(name, prop, _super[name]) :\r\n                        prop;\r\n                } else if (types.isPlainObject(prop) && prop!==null && (prop.get)) {\r\n                    Object.defineProperty(proto,name,prop);\r\n                } else {\r\n                    proto[name] = prop;\r\n                }\r\n            }\r\n            return ctor;\r\n        }\r\n\r\n        function serialMixins(ctor,mixins) {\r\n            var result = [];\r\n\r\n            mixins.forEach(function(mixin){\r\n                if (has(mixin,\"__mixins__\")) {\r\n                     throw new Error(\"nested mixins\");\r\n                }\r\n                var clss = [];\r\n                while (mixin) {\r\n                    clss.unshift(mixin);\r\n                    mixin = mixin.superclass;\r\n                }\r\n                result = result.concat(clss);\r\n            });\r\n\r\n            result = uniq(result);\r\n\r\n            result = result.filter(function(mixin){\r\n                var cls = ctor;\r\n                while (cls) {\r\n                    if (mixin === cls) {\r\n                        return false;\r\n                    }\r\n                    if (has(cls,\"__mixins__\")) {\r\n                        var clsMixines = cls[\"__mixins__\"];\r\n                        for (var i=0; i<clsMixines.length;i++) {\r\n                            if (clsMixines[i]===mixin) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                    cls = cls.superclass;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if (result.length>0) {\r\n                return result;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function mergeMixins(ctor,mixins) {\r\n            var newCtor =ctor;\r\n            for (var i=0;i<mixins.length;i++) {\r\n                var xtor = new Function();\r\n                xtor.prototype = Object.create(newCtor.prototype);\r\n                xtor.__proto__ = newCtor;\r\n                xtor.superclass = null;\r\n                mixin(xtor.prototype,mixins[i].prototype);\r\n                xtor.prototype.__mixin__ = mixins[i];\r\n                newCtor = xtor;\r\n            }\r\n\r\n            return newCtor;\r\n        }\r\n\r\n        function _constructor ()  {\r\n            if (this._construct) {\r\n                return this._construct.apply(this, arguments);\r\n            } else  if (this.init) {\r\n                return this.init.apply(this, arguments);\r\n            }\r\n        }\r\n\r\n        return function createClass(props, parent, mixins,options) {\r\n            if (isArray(parent)) {\r\n                options = mixins;\r\n                mixins = parent;\r\n                parent = null;\r\n            }\r\n            parent = parent || Object;\r\n\r\n            if (isDefined(mixins) && !isArray(mixins)) {\r\n                options = mixins;\r\n                mixins = false;\r\n            }\r\n\r\n            var innerParent = parent;\r\n\r\n            if (mixins) {\r\n                mixins = serialMixins(innerParent,mixins);\r\n            }\r\n\r\n            if (mixins) {\r\n                innerParent = mergeMixins(innerParent,mixins);\r\n            }\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n\r\n\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(innerParent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = innerParent;\r\n\r\n\r\n            if (!ctor._constructor) {\r\n                ctor._constructor = _constructor;\r\n            } \r\n\r\n            if (mixins) {\r\n                ctor.__mixins__ = mixins;\r\n            }\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, mixins,options) {\r\n                    return createClass(props, this, mixins,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        };\r\n    }\r\n\r\n    var createClass = f1();\r\n\r\n    return skylark.attach(\"langx.klass\",createClass);\r\n});\ndefine('skylark-langx-klass/main',[\r\n\t\"./klass\"\r\n],function(klass){\r\n\treturn klass;\r\n});\ndefine('skylark-langx-klass', ['skylark-langx-klass/main'], function (main) { return main; });\n\ndefine('skylark-langx/klass',[\r\n    \"skylark-langx-klass\"\r\n],function(klass){\r\n    return klass;\r\n});\ndefine('skylark-langx/ArrayStore',[\r\n    \"./klass\"\r\n],function(klass){\r\n    var SimpleQueryEngine = function(query, options){\r\n        // summary:\r\n        //      Simple query engine that matches using filter functions, named filter\r\n        //      functions or objects by name-value on a query object hash\r\n        //\r\n        // description:\r\n        //      The SimpleQueryEngine provides a way of getting a QueryResults through\r\n        //      the use of a simple object hash as a filter.  The hash will be used to\r\n        //      match properties on data objects with the corresponding value given. In\r\n        //      other words, only exact matches will be returned.\r\n        //\r\n        //      This function can be used as a template for more complex query engines;\r\n        //      for example, an engine can be created that accepts an object hash that\r\n        //      contains filtering functions, or a string that gets evaluated, etc.\r\n        //\r\n        //      When creating a new dojo.store, simply set the store's queryEngine\r\n        //      field as a reference to this function.\r\n        //\r\n        // query: Object\r\n        //      An object hash with fields that may match fields of items in the store.\r\n        //      Values in the hash will be compared by normal == operator, but regular expressions\r\n        //      or any object that provides a test() method are also supported and can be\r\n        //      used to match strings by more complex expressions\r\n        //      (and then the regex's or object's test() method will be used to match values).\r\n        //\r\n        // options: dojo/store/api/Store.QueryOptions?\r\n        //      An object that contains optional information such as sort, start, and count.\r\n        //\r\n        // returns: Function\r\n        //      A function that caches the passed query under the field \"matches\".  See any\r\n        //      of the \"query\" methods on dojo.stores.\r\n        //\r\n        // example:\r\n        //      Define a store with a reference to this engine, and set up a query method.\r\n        //\r\n        //  |   var myStore = function(options){\r\n        //  |       //  ...more properties here\r\n        //  |       this.queryEngine = SimpleQueryEngine;\r\n        //  |       //  define our query method\r\n        //  |       this.query = function(query, options){\r\n        //  |           return QueryResults(this.queryEngine(query, options)(this.data));\r\n        //  |       };\r\n        //  |   };\r\n\r\n        // create our matching query function\r\n        switch(typeof query){\r\n            default:\r\n                throw new Error(\"Can not query with a \" + typeof query);\r\n            case \"object\": case \"undefined\":\r\n                var queryObject = query;\r\n                query = function(object){\r\n                    for(var key in queryObject){\r\n                        var required = queryObject[key];\r\n                        if(required && required.test){\r\n                            // an object can provide a test method, which makes it work with regex\r\n                            if(!required.test(object[key], object)){\r\n                                return false;\r\n                            }\r\n                        }else if(required != object[key]){\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                break;\r\n            case \"string\":\r\n                // named query\r\n                if(!this[query]){\r\n                    throw new Error(\"No filter function \" + query + \" was found in store\");\r\n                }\r\n                query = this[query];\r\n                // fall through\r\n            case \"function\":\r\n                // fall through\r\n        }\r\n        \r\n        function filter(arr, callback, thisObject){\r\n            // summary:\r\n            //      Returns a new Array with those items from arr that match the\r\n            //      condition implemented by callback.\r\n            // arr: Array\r\n            //      the array to iterate over.\r\n            // callback: Function|String\r\n            //      a function that is invoked with three arguments (item,\r\n            //      index, array). The return of this function is expected to\r\n            //      be a boolean which determines whether the passed-in item\r\n            //      will be included in the returned array.\r\n            // thisObject: Object?\r\n            //      may be used to scope the call to callback\r\n            // returns: Array\r\n            // description:\r\n            //      This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when\r\n            //      run over sparse arrays, this implementation passes the \"holes\" in the sparse array to\r\n            //      the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array.\r\n            //      For more details, see:\r\n            //      https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\r\n            // example:\r\n            //  | // returns [2, 3, 4]\r\n            //  | array.filter([1, 2, 3, 4], function(item){ return item>1; });\r\n\r\n            // TODO: do we need \"Ctr\" here like in map()?\r\n            var i = 0, l = arr && arr.length || 0, out = [], value;\r\n            if(l && typeof arr == \"string\") arr = arr.split(\"\");\r\n            if(typeof callback == \"string\") callback = cache[callback] || buildFn(callback);\r\n            if(thisObject){\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback.call(thisObject, value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }else{\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback(value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return out; // Array\r\n        }\r\n\r\n        function execute(array){\r\n            // execute the whole query, first we filter\r\n            var results = filter(array, query);\r\n            // next we sort\r\n            var sortSet = options && options.sort;\r\n            if(sortSet){\r\n                results.sort(typeof sortSet == \"function\" ? sortSet : function(a, b){\r\n                    for(var sort, i=0; sort = sortSet[i]; i++){\r\n                        var aValue = a[sort.attribute];\r\n                        var bValue = b[sort.attribute];\r\n                        // valueOf enables proper comparison of dates\r\n                        aValue = aValue != null ? aValue.valueOf() : aValue;\r\n                        bValue = bValue != null ? bValue.valueOf() : bValue;\r\n                        if (aValue != bValue){\r\n                            // modified by lwf 2016/07/09\r\n                            //return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                            return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n            // now we paginate\r\n            if(options && (options.start || options.count)){\r\n                var total = results.length;\r\n                results = results.slice(options.start || 0, (options.start || 0) + (options.count || Infinity));\r\n                results.total = total;\r\n            }\r\n            return results;\r\n        }\r\n        execute.matches = query;\r\n        return execute;\r\n    };\r\n\r\n    var QueryResults = function(results){\r\n        // summary:\r\n        //      A function that wraps the results of a store query with additional\r\n        //      methods.\r\n        // description:\r\n        //      QueryResults is a basic wrapper that allows for array-like iteration\r\n        //      over any kind of returned data from a query.  While the simplest store\r\n        //      will return a plain array of data, other stores may return deferreds or\r\n        //      promises; this wrapper makes sure that *all* results can be treated\r\n        //      the same.\r\n        //\r\n        //      Additional methods include `forEach`, `filter` and `map`.\r\n        // results: Array|dojo/promise/Promise\r\n        //      The result set as an array, or a promise for an array.\r\n        // returns:\r\n        //      An array-like object that can be used for iterating over.\r\n        // example:\r\n        //      Query a store and iterate over the results.\r\n        //\r\n        //  |   store.query({ prime: true }).forEach(function(item){\r\n        //  |       //  do something\r\n        //  |   });\r\n\r\n        if(!results){\r\n            return results;\r\n        }\r\n\r\n        var isPromise = !!results.then;\r\n        // if it is a promise it may be frozen\r\n        if(isPromise){\r\n            results = Object.delegate(results);\r\n        }\r\n        function addIterativeMethod(method){\r\n            // Always add the iterative methods so a QueryResults is\r\n            // returned whether the environment is ES3 or ES5\r\n            results[method] = function(){\r\n                var args = arguments;\r\n                var result = Deferred.when(results, function(results){\r\n                    //Array.prototype.unshift.call(args, results);\r\n                    return QueryResults(Array.prototype[method].apply(results, args));\r\n                });\r\n                // forEach should only return the result of when()\r\n                // when we're wrapping a promise\r\n                if(method !== \"forEach\" || isPromise){\r\n                    return result;\r\n                }\r\n            };\r\n        }\r\n\r\n        addIterativeMethod(\"forEach\");\r\n        addIterativeMethod(\"filter\");\r\n        addIterativeMethod(\"map\");\r\n        if(results.total == null){\r\n            results.total = Deferred.when(results, function(results){\r\n                return results.length;\r\n            });\r\n        }\r\n        return results; // Object\r\n    };\r\n\r\n    var ArrayStore = klass({\r\n        \"klassName\": \"ArrayStore\",\r\n\r\n        \"queryEngine\": SimpleQueryEngine,\r\n        \r\n        \"idProperty\": \"id\",\r\n\r\n\r\n        get: function(id){\r\n            // summary:\r\n            //      Retrieves an object by its identity\r\n            // id: Number\r\n            //      The identity to use to lookup the object\r\n            // returns: Object\r\n            //      The object in the store that matches the given id.\r\n            return this.data[this.index[id]];\r\n        },\r\n\r\n        getIdentity: function(object){\r\n            return object[this.idProperty];\r\n        },\r\n\r\n        put: function(object, options){\r\n            var data = this.data,\r\n                index = this.index,\r\n                idProperty = this.idProperty;\r\n            var id = object[idProperty] = (options && \"id\" in options) ? options.id : idProperty in object ? object[idProperty] : Math.random();\r\n            if(id in index){\r\n                // object exists\r\n                if(options && options.overwrite === false){\r\n                    throw new Error(\"Object already exists\");\r\n                }\r\n                // replace the entry in data\r\n                data[index[id]] = object;\r\n            }else{\r\n                // add the new object\r\n                index[id] = data.push(object) - 1;\r\n            }\r\n            return id;\r\n        },\r\n\r\n        add: function(object, options){\r\n            (options = options || {}).overwrite = false;\r\n            // call put with overwrite being false\r\n            return this.put(object, options);\r\n        },\r\n\r\n        remove: function(id){\r\n            // summary:\r\n            //      Deletes an object by its identity\r\n            // id: Number\r\n            //      The identity to use to delete the object\r\n            // returns: Boolean\r\n            //      Returns true if an object was removed, falsy (undefined) if no object matched the id\r\n            var index = this.index;\r\n            var data = this.data;\r\n            if(id in index){\r\n                data.splice(index[id], 1);\r\n                // now we have to reindex\r\n                this.setData(data);\r\n                return true;\r\n            }\r\n        },\r\n        query: function(query, options){\r\n            // summary:\r\n            //      Queries the store for objects.\r\n            // query: Object\r\n            //      The query to use for retrieving objects from the store.\r\n            // options: dojo/store/api/Store.QueryOptions?\r\n            //      The optional arguments to apply to the resultset.\r\n            // returns: dojo/store/api/Store.QueryResults\r\n            //      The results of the query, extended with iterative methods.\r\n            //\r\n            // example:\r\n            //      Given the following store:\r\n            //\r\n            //  |   var store = new Memory({\r\n            //  |       data: [\r\n            //  |           {id: 1, name: \"one\", prime: false },\r\n            //  |           {id: 2, name: \"two\", even: true, prime: true},\r\n            //  |           {id: 3, name: \"three\", prime: true},\r\n            //  |           {id: 4, name: \"four\", even: true, prime: false},\r\n            //  |           {id: 5, name: \"five\", prime: true}\r\n            //  |       ]\r\n            //  |   });\r\n            //\r\n            //  ...find all items where \"prime\" is true:\r\n            //\r\n            //  |   var results = store.query({ prime: true });\r\n            //\r\n            //  ...or find all items where \"even\" is true:\r\n            //\r\n            //  |   var results = store.query({ even: true });\r\n            return QueryResults(this.queryEngine(query, options)(this.data));\r\n        },\r\n\r\n        setData: function(data){\r\n            // summary:\r\n            //      Sets the given data as the source for this store, and indexes it\r\n            // data: Object[]\r\n            //      An array of objects to use as the source of data.\r\n            if(data.items){\r\n                // just for convenience with the data format IFRS expects\r\n                this.idProperty = data.identifier || this.idProperty;\r\n                data = this.data = data.items;\r\n            }else{\r\n                this.data = data;\r\n            }\r\n            this.index = {};\r\n            for(var i = 0, l = data.length; i < l; i++){\r\n                this.index[data[i][this.idProperty]] = i;\r\n            }\r\n        },\r\n\r\n        init: function(options) {\r\n            for(var i in options){\r\n                this[i] = options[i];\r\n            }\r\n            this.setData(this.data || []);\r\n        }\r\n\r\n    });\r\n\r\n\treturn ArrayStore;\r\n});\ndefine('skylark-langx-aspect/aspect',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n\r\n  var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n    return skylark.attach(\"langx.aspect\",{\r\n        after: aspect(\"after\"),\r\n \r\n        around: aspect(\"around\"),\r\n        \r\n        before: aspect(\"before\")\r\n    });\r\n});\ndefine('skylark-langx-aspect/main',[\r\n\t\"./aspect\"\r\n],function(aspect){\r\n\treturn aspect;\r\n});\ndefine('skylark-langx-aspect', ['skylark-langx-aspect/main'], function (main) { return main; });\n\ndefine('skylark-langx/aspect',[\r\n    \"skylark-langx-aspect\"\r\n],function(aspect){\r\n  return aspect;\r\n});\ndefine('skylark-langx-funcs/funcs',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\"\r\n],function(skylark,types,objects){\r\n\tvar mixin = objects.mixin,\r\n        slice = Array.prototype.slice,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString;\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n    function debounce(fn, wait) {\r\n        var timeout;\r\n        return function () {\r\n            var context = this, args = arguments;\r\n            var later = function () {\r\n                timeout = null;\r\n                fn.apply(context, args);\r\n            };\r\n            if (timeout) clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n   \r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n\r\n    // By default, Underscore uses ERB-style template delimiters, change the\r\n    // following template settings to use alternative delimiters.\r\n    var templateSettings = {\r\n        evaluate: /<%([\\s\\S]+?)%>/g,\r\n        interpolate: /<%=([\\s\\S]+?)%>/g,\r\n        escape: /<%-([\\s\\S]+?)%>/g\r\n    };\r\n\r\n    // When customizing `templateSettings`, if you don't want to define an\r\n    // interpolation, evaluation or escaping regex, we need one that is\r\n    // guaranteed not to match.\r\n    var noMatch = /(.)^/;\r\n\r\n\r\n    // Certain characters need to be escaped so that they can be put into a\r\n    // string literal.\r\n    var escapes = {\r\n      \"'\":      \"'\",\r\n      '\\\\':     '\\\\',\r\n      '\\r':     'r',\r\n      '\\n':     'n',\r\n      '\\t':     't',\r\n      '\\u2028': 'u2028',\r\n      '\\u2029': 'u2029'\r\n    };\r\n\r\n    var escaper = /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g;\r\n\r\n\r\n    function template(text, data, settings) {\r\n        var render;\r\n        settings = objects.defaults({}, settings,templateSettings);\r\n\r\n        // Combine delimiters into one regular expression via alternation.\r\n        var matcher = RegExp([\r\n          (settings.escape || noMatch).source,\r\n          (settings.interpolate || noMatch).source,\r\n          (settings.evaluate || noMatch).source\r\n        ].join('|') + '|$', 'g');\r\n\r\n        // Compile the template source, escaping string literals appropriately.\r\n        var index = 0;\r\n        var source = \"__p+='\";\r\n        text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\r\n          source += text.slice(index, offset)\r\n              .replace(escaper, function(match) { return '\\\\' + escapes[match]; });\r\n\r\n          if (escape) {\r\n            source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\r\n          }\r\n          if (interpolate) {\r\n            source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\r\n          }\r\n          if (evaluate) {\r\n            source += \"';\\n\" + evaluate + \"\\n__p+='\";\r\n          }\r\n          index = offset + match.length;\r\n          return match;\r\n        });\r\n        source += \"';\\n\";\r\n\r\n        // If a variable is not specified, place data values in local scope.\r\n        if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\r\n\r\n        source = \"var __t,__p='',__j=Array.prototype.join,\" +\r\n          \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\r\n          source + 'return __p;\\n';\r\n\r\n        try {\r\n          render = new Function(settings.variable || 'obj', '_', source);\r\n        } catch (e) {\r\n          e.source = source;\r\n          throw e;\r\n        }\r\n\r\n        if (data) {\r\n          return render(data,this)\r\n        }\r\n        var template = proxy(function(data) {\r\n          return render.call(this, data,this);\r\n        },this);\r\n\r\n        // Provide the compiled source as a convenience for precompilation.\r\n        var argument = settings.variable || 'obj';\r\n        template.source = 'function(' + argument + '){\\n' + source + '}';\r\n\r\n        return template;\r\n    }\r\n\r\n\r\n    /**\r\n     * Creates a function that negates the result of the predicate `func`. The\r\n     * `func` predicate is invoked with the `this` binding and arguments of the\r\n     * created function.\r\n     * @category Function\r\n     * @param {Function} predicate The predicate to negate.\r\n     * @returns {Function} Returns the new negated function.\r\n     * @example\r\n     *\r\n     * function isEven(n) {\r\n     *   return n % 2 == 0\r\n     * }\r\n     *\r\n     * filter([1, 2, 3, 4, 5, 6], negate(isEven))\r\n     * // => [1, 3, 5]\r\n     */\r\n    function negate(predicate) {\r\n      if (typeof predicate !== 'function') {\r\n        throw new TypeError('Expected a function')\r\n      }\r\n      return function(...args) {\r\n        return !predicate.apply(this, args)\r\n      }\r\n    }\r\n\r\n\r\n    return skylark.attach(\"langx.funcs\",{\r\n        bind : proxy,\r\n        \r\n        debounce: debounce,\r\n\r\n        delegate: delegate,\r\n\r\n        defer: defer,\r\n\r\n        negate: negate,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        templateSettings : templateSettings,\r\n        template : template\r\n    });\r\n});\ndefine('skylark-langx-funcs/main',[\r\n\t\"./funcs\"\r\n],function(funcs){\r\n\treturn funcs;\r\n});\ndefine('skylark-langx-funcs', ['skylark-langx-funcs/main'], function (main) { return main; });\n\ndefine('skylark-langx-async/Deferred',[\r\n    \"skylark-langx-arrays\",\r\n\t\"skylark-langx-funcs\",\r\n    \"skylark-langx-objects\"\r\n],function(arrays,funcs,objects){\r\n    \"use strict\";\r\n\r\n    var slice = Array.prototype.slice,\r\n        proxy = funcs.proxy,\r\n        makeArray = arrays.makeArray,\r\n        result = objects.result,\r\n        mixin = objects.mixin;\r\n\r\n    mixin(Promise.prototype,{\r\n        always: function(handler) {\r\n            //this.done(handler);\r\n            //this.fail(handler);\r\n            this.then(handler,handler);\r\n            return this;\r\n        },\r\n        done : function() {\r\n            for (var i = 0;i<arguments.length;i++) {\r\n                this.then(arguments[i]);\r\n            }\r\n            return this;\r\n        },\r\n        fail : function(handler) { \r\n            //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n            //return this.then(null,handler);\r\n            this.catch(handler);\r\n            return this;\r\n         }\r\n    });\r\n\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = makePromise2(new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            }));\r\n\r\n        //wrapPromise(p,self);\r\n\r\n        //this[PGLISTENERS] = [];\r\n        //this[PGNOTIFIES] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n   \r\n    function makePromise2(promise) {\r\n        // Don't modify any promise that has been already modified.\r\n        if (promise.isResolved) return promise;\r\n\r\n        // Set initial state\r\n        var isPending = true;\r\n        var isRejected = false;\r\n        var isResolved = false;\r\n\r\n        // Observe the promise, saving the fulfillment in a closure scope.\r\n        var result = promise.then(\r\n            function(v) {\r\n                isResolved = true;\r\n                isPending = false;\r\n                return v; \r\n            }, \r\n            function(e) {\r\n                isRejected = true;\r\n                isPending = false;\r\n                throw e; \r\n            }\r\n        );\r\n\r\n        result.isResolved = function() { return isResolved; };\r\n        result.isPending = function() { return isPending; };\r\n        result.isRejected = function() { return isRejected; };\r\n\r\n        result.state = function() {\r\n            if (isResolved) {\r\n                return 'resolved';\r\n            }\r\n            if (isRejected) {\r\n                return 'rejected';\r\n            }\r\n            return 'pending';\r\n        };\r\n\r\n        var notified = [],\r\n            listeners = [];\r\n\r\n          \r\n        result.then = function(onResolved,onRejected,onProgress) {\r\n            if (onProgress) {\r\n                this.progress(onProgress);\r\n            }\r\n            return makePromise2(Promise.prototype.then.call(this,\r\n                onResolved && function(args) {\r\n                    if (args && args.__ctx__ !== undefined) {\r\n                        return onResolved.apply(args.__ctx__,args);\r\n                    } else {\r\n                        return onResolved(args);\r\n                    }\r\n                },\r\n                onRejected && function(args){\r\n                    if (args && args.__ctx__ !== undefined) {\r\n                        return onRejected.apply(args.__ctx__,args);\r\n                    } else {\r\n                        return onRejected(args);\r\n                    }\r\n                }\r\n            ));\r\n        };\r\n\r\n        result.progress = function(handler) {\r\n            notified.forEach(function (value) {\r\n                handler(value);\r\n            });\r\n            listeners.push(handler);\r\n            return this;\r\n        };\r\n\r\n        result.pipe = result.then;\r\n\r\n        result.notify = function(value) {\r\n            try {\r\n                notified.push(value);\r\n\r\n                return listeners.forEach(function (listener) {\r\n                    return listener(value);\r\n                });\r\n            } catch (error) {\r\n            this.reject(error);\r\n            }\r\n            return this;\r\n        };\r\n\r\n        return result;\r\n    }\r\n\r\n \r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.notify = function(value) {\r\n        var p = result(this,\"promise\");\r\n        p.notify(value);\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.isResolved();\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.isRejected();\r\n    };\r\n\r\n    Deferred.prototype.state = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.state();\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.progress = function(progback){\r\n        var p = result(this,\"promise\");\r\n        return p.progress(progback);\r\n    };\r\n   \r\n    Deferred.prototype.catch = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        return p.catch(errback);\r\n    };\r\n\r\n\r\n    Deferred.prototype.always  = function() {\r\n        var p = result(this,\"promise\");\r\n        p.always.apply(p,arguments);\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.done  = function() {\r\n        var p = result(this,\"promise\");\r\n        p.done.apply(p,arguments);\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.fail = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        p.fail(errback);\r\n        return this;\r\n    };\r\n\r\n\r\n    Deferred.all = function(array) {\r\n        //return wrapPromise(Promise.all(array));\r\n        var d = new Deferred();\r\n        Promise.all(array).then(d.resolve.bind(d),d.reject.bind(d));\r\n        return result(d,\"promise\");\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return makePromise2(Promise.race(array));\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(proxy(deferred.resolve,deferred), proxy(deferred.reject,deferred), deferred.notify);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve.apply(d,arguments);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n\r\n    Deferred.promise = function(callback) {\r\n        var d = new Deferred();\r\n\r\n        callback(d.resolve.bind(d),d.reject.bind(d),d.progress.bind(d));\r\n\r\n        return d.promise;\r\n    };\r\n\r\n    return Deferred;\r\n});\ndefine('skylark-langx-async/async',[\r\n    \"skylark-langx-ns\",\r\n    \"skylark-langx-objects\",\r\n    \"./Deferred\"\r\n],function(skylark,objects,Deferred){\r\n    var each = objects.each;\r\n    \r\n    var async = {\r\n        Deferred : Deferred,\r\n\r\n        parallel : function(arr,args,ctx) {\r\n            var rets = [];\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            each(arr,function(i,func){\r\n                rets.push(func.apply(ctx,args));\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        series : function(arr,args,ctx) {\r\n            var rets = [],\r\n                d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolve();\r\n            each(arr,function(i,func){\r\n                p = p.then(function(){\r\n                    return func.apply(ctx,args);\r\n                });\r\n                rets.push(p);\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        waterful : function(arr,args,ctx) {\r\n            var d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolveWith(ctx,args);\r\n\r\n            each(arr,function(i,func){\r\n                p = p.then(func);\r\n            });\r\n            return p;\r\n        }\r\n    };\r\n\r\n\treturn skylark.attach(\"langx.async\",async);\t\r\n});\ndefine('skylark-langx-async/main',[\r\n\t\"./async\"\r\n],function(async){\r\n\treturn async;\r\n});\ndefine('skylark-langx-async', ['skylark-langx-async/main'], function (main) { return main; });\n\ndefine('skylark-langx/async',[\r\n    \"skylark-langx-async\"\r\n],function(async){\r\n    return async;\r\n});\ndefine('skylark-langx-datetimes/datetimes',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n     function parseMilliSeconds(str) {\r\n\r\n        var strs = str.split(' ');\r\n        var number = parseInt(strs[0]);\r\n\r\n        if (isNaN(number)){\r\n            return 0;\r\n        }\r\n\r\n        var min = 60000 * 60;\r\n\r\n        switch (strs[1].trim().replace(/\\./g, '')) {\r\n            case 'minutes':\r\n            case 'minute':\r\n            case 'min':\r\n            case 'mm':\r\n            case 'm':\r\n                return 60000 * number;\r\n            case 'hours':\r\n            case 'hour':\r\n            case 'HH':\r\n            case 'hh':\r\n            case 'h':\r\n            case 'H':\r\n                return min * number;\r\n            case 'seconds':\r\n            case 'second':\r\n            case 'sec':\r\n            case 'ss':\r\n            case 's':\r\n                return 1000 * number;\r\n            case 'days':\r\n            case 'day':\r\n            case 'DD':\r\n            case 'dd':\r\n            case 'd':\r\n                return (min * 24) * number;\r\n            case 'months':\r\n            case 'month':\r\n            case 'MM':\r\n            case 'M':\r\n                return (min * 24 * 28) * number;\r\n            case 'weeks':\r\n            case 'week':\r\n            case 'W':\r\n            case 'w':\r\n                return (min * 24 * 7) * number;\r\n            case 'years':\r\n            case 'year':\r\n            case 'yyyy':\r\n            case 'yy':\r\n            case 'y':\r\n                return (min * 24 * 365) * number;\r\n            default:\r\n                return 0;\r\n        }\r\n    };\r\n\t\r\n\treturn skylark.attach(\"langx.datetimes\",{\r\n\t\tparseMilliSeconds\r\n\t});\r\n});\ndefine('skylark-langx-datetimes/main',[\r\n\t\"./datetimes\"\r\n],function(datetimes){\r\n\treturn datetimes;\r\n});\ndefine('skylark-langx-datetimes', ['skylark-langx-datetimes/main'], function (main) { return main; });\n\ndefine('skylark-langx/datetimes',[\r\n    \"skylark-langx-datetimes\"\r\n],function(datetimes){\r\n    return datetimes;\r\n});\ndefine('skylark-langx/Deferred',[\r\n    \"skylark-langx-async/Deferred\"\r\n],function(Deferred){\r\n    return Deferred;\r\n});\ndefine('skylark-langx-emitter/Emitter',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n  \"skylark-langx-klass\"\r\n],function(skylark,types,objects,arrays,klass){\r\n    var slice = Array.prototype.slice,\r\n        compact = arrays.compact,\r\n        isDefined = types.isDefined,\r\n        isPlainObject = types.isPlainObject,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString,\r\n        isEmptyObject = types.isEmptyObject,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin;\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            name: segs[0],\r\n            ns: segs.slice(1).join(\" \")\r\n        };\r\n    }\r\n\r\n    var Emitter = klass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    ns : ns,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        emit: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var parsed = parse(eventName),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var listeners = self._hub[name];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (ns && (!listener.ns ||  !listener.ns.startsWith(ns))) {\r\n                        continue;\r\n                    }\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var evts = _hub[name];\r\n\r\n                if (evts) {\r\n                    var liveEvents = [];\r\n\r\n                    if (callback || ns) {\r\n                        for (var i = 0, len = evts.length; i < len; i++) {\r\n                            \r\n                            if (callback && evts[i].fn !== callback && evts[i].fn._ !== callback) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            } \r\n\r\n                            if (ns && (!evts[i].ns || evts[i].ns.indexOf(ns)!=0)) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (liveEvents.length) {\r\n                        _hub[name] = liveEvents;\r\n                    } else {\r\n                        delete _hub[name];\r\n                    }\r\n\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    var listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        trigger  : function() {\r\n            return this.emit.apply(this,arguments);\r\n        }\r\n    });\r\n\r\n    Emitter.createEvent = function (type,props) {\r\n        var e = new CustomEvent(type,props);\r\n        return safeMixin(e, props);\r\n    };\r\n\r\n    return skylark.attach(\"langx.Emitter\",Emitter);\r\n\r\n});\ndefine('skylark-langx-emitter/Evented',[\r\n  \"skylark-langx-ns/ns\",\r\n\t\"./Emitter\"\r\n],function(skylark,Emitter){\r\n\treturn skylark.attach(\"langx.Evented\",Emitter);\r\n});\ndefine('skylark-langx-emitter/main',[\r\n\t\"./Emitter\",\r\n\t\"./Evented\"\r\n],function(Emitter){\r\n\treturn Emitter;\r\n});\ndefine('skylark-langx-emitter', ['skylark-langx-emitter/main'], function (main) { return main; });\n\ndefine('skylark-langx/Emitter',[\r\n    \"skylark-langx-emitter\"\r\n],function(Evented){\r\n    return Evented;\r\n});\ndefine('skylark-langx/Evented',[\r\n    \"skylark-langx-emitter\"\r\n],function(Evented){\r\n    return Evented;\r\n});\ndefine('skylark-langx/funcs',[\r\n    \"skylark-langx-funcs\"\r\n],function(funcs){\r\n    return funcs;\r\n});\ndefine('skylark-langx-hoster/hoster',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n\t// The javascript host environment, brower and nodejs are supported.\r\n\tvar hoster = {\r\n\t\t\"isBrowser\" : true, // default\r\n\t\t\"isNode\" : null,\r\n\t\t\"global\" : this,\r\n\t\t\"browser\" : null,\r\n\t\t\"node\" : null\r\n\t};\r\n\r\n\tif (typeof process == \"object\" && process.versions && process.versions.node && process.versions.v8) {\r\n\t\thoster.isNode = true;\r\n\t\thoster.isBrowser = false;\r\n\t}\r\n\r\n\thoster.global = (function(){\r\n\t\tif (typeof global !== 'undefined' && typeof global !== 'function') {\r\n\t\t\t// global spec defines a reference to the global object called 'global'\r\n\t\t\t// https://github.com/tc39/proposal-global\r\n\t\t\t// `global` is also defined in NodeJS\r\n\t\t\treturn global;\r\n\t\t} else if (typeof window !== 'undefined') {\r\n\t\t\t// window is defined in browsers\r\n\t\t\treturn window;\r\n\t\t}\r\n\t\telse if (typeof self !== 'undefined') {\r\n\t\t\t// self is defined in WebWorkers\r\n\t\t\treturn self;\r\n\t\t}\r\n\t\treturn this;\r\n\t})();\r\n\r\n\tvar _document = null;\r\n\r\n\tObject.defineProperty(hoster,\"document\",function(){\r\n\t\tif (!_document) {\r\n\t\t\tvar w = typeof window === 'undefined' ? require('html-element') : window;\r\n\t\t\t_document = w.document;\r\n\t\t}\r\n\r\n\t\treturn _document;\r\n\t});\r\n\r\n\tif (hoster.isBrowser) {\r\n\t    function uaMatch( ua ) {\r\n\t\t    ua = ua.toLowerCase();\r\n\r\n\t\t    var match = /(chrome)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(webkit)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(msie) ([\\w.]+)/.exec( ua ) ||\r\n\t\t      ua.indexOf('compatible') < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec( ua ) ||\r\n\t\t      [];\r\n\r\n\t\t    return {\r\n\t\t      browser: match[ 1 ] || '',\r\n\t\t      version: match[ 2 ] || '0'\r\n\t\t    };\r\n\t  \t};\r\n\r\n\t    var matched = uaMatch( navigator.userAgent );\r\n\r\n\t    var browser = hoster.browser = {};\r\n\r\n\t    if ( matched.browser ) {\r\n\t      browser[ matched.browser ] = true;\r\n\t      browser.version = matched.version;\r\n\t    }\r\n\r\n\t    // Chrome is Webkit, but Webkit is also Safari.\r\n\t    if ( browser.chrome ) {\r\n\t      browser.webkit = true;\r\n\t    } else if ( browser.webkit ) {\r\n\t      browser.safari = true;\r\n\t    }\r\n\t}\r\n\r\n\treturn  skylark.attach(\"langx.hoster\",hoster);\r\n});\ndefine('skylark-langx-hoster/main',[\r\n\t\"./hoster\"\r\n],function(hoster){\r\n\treturn hoster;\r\n});\ndefine('skylark-langx-hoster', ['skylark-langx-hoster/main'], function (main) { return main; });\n\ndefine('skylark-langx/hoster',[\r\n\t\"skylark-langx-hoster\"\r\n],function(hoster){\r\n\treturn hoster;\r\n});\ndefine('skylark-langx/numbers',[\r\n\t\"skylark-langx-numbers\"\r\n],function(numbers){\r\n\treturn numbers;\r\n});\ndefine('skylark-langx/objects',[\r\n    \"skylark-langx-objects\"\r\n],function(objects){\r\n    return objects;\r\n});\ndefine('skylark-langx-strings/strings',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n    // add default escape function for escaping HTML entities\r\n    var escapeCharMap = Object.freeze({\r\n        '&': '&amp;',\r\n        '<': '&lt;',\r\n        '>': '&gt;',\r\n        '\"': '&quot;',\r\n        \"'\": '&#x27;',\r\n        '`': '&#x60;',\r\n        '=': '&#x3D;',\r\n    });\r\n    function replaceChar(c) {\r\n        return escapeCharMap[c];\r\n    }\r\n    var escapeChars = /[&<>\"'`=]/g;\r\n\r\n\r\n     /*\r\n     * Converts camel case into dashes.\r\n     * @param {String} str\r\n     * @return {String}\r\n     * @exapmle marginTop -> margin-top\r\n     */\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function escapeHTML(str) {\r\n        if (str == null) {\r\n            return '';\r\n        }\r\n        if (!str) {\r\n            return String(str);\r\n        }\r\n\r\n        return str.toString().replace(escapeChars, replaceChar);\r\n    }\r\n\r\n    function generateUUID() {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = Math.random() * 16 | 0;\r\n            var v = c === 'x' ? r : ((r & 0x3) | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    }\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n\r\n    /**\r\n     * https://github.com/cho45/micro-template.js\r\n     * (c) cho45 http://cho45.github.com/mit-license\r\n     */\r\n    function template (id, data) {\r\n\r\n        function include(name, args) {\r\n            var stash = {};\r\n            for (var key in template.context.stash) if (template.context.stash.hasOwnProperty(key)) {\r\n                stash[key] = template.context.stash[key];\r\n            }\r\n            if (args) for (var key in args) if (args.hasOwnProperty(key)) {\r\n                stash[key] = args[key];\r\n            }\r\n            var context = template.context;\r\n            context.ret += template(name, stash);\r\n            template.context = context;\r\n        }\r\n\r\n        function wrapper(name, fun) {\r\n            var current = template.context.ret;\r\n            template.context.ret = '';\r\n            fun.apply(template.context);\r\n            var content = template.context.ret;\r\n            var orig_content = template.context.stash.content;\r\n            template.context.stash.content = content;\r\n            template.context.ret = current + template(name, template.context.stash);\r\n            template.context.stash.content = orig_content;\r\n        }\r\n\r\n        var me = arguments.callee;\r\n        if (!me.cache[id]) me.cache[id] = (function () {\r\n            var name = id, string = /^[\\w\\-]+$/.test(id) ? me.get(id): (name = 'template(string)', id); // no warnings\r\n            var line = 1, body = (\r\n                \"try { \" +\r\n                    (me.variable ?  \"var \" + me.variable + \" = this.stash;\" : \"with (this.stash) { \") +\r\n                        \"this.ret += '\"  +\r\n                        string.\r\n                            replace(/<%/g, '\\x11').replace(/%>/g, '\\x13'). // if you want other tag, just edit this line\r\n                            replace(/'(?![^\\x11\\x13]+?\\x13)/g, '\\\\x27').\r\n                            replace(/^\\s*|\\s*$/g, '').\r\n                            replace(/\\n|\\r\\n/g, function () { return \"';\\nthis.line = \" + (++line) + \"; this.ret += '\\\\n\" }).\r\n                            replace(/\\x11=raw(.+?)\\x13/g, \"' + ($1) + '\").\r\n                            replace(/\\x11=(.+?)\\x13/g, \"' + this.escapeHTML($1) + '\").\r\n                            replace(/\\x11(.+?)\\x13/g, \"'; $1; this.ret += '\") +\r\n                    \"'; \" + (me.variable ? \"\" : \"}\") + \"return this.ret;\" +\r\n                \"} catch (e) { throw 'TemplateError: ' + e + ' (on \" + name + \"' + ' line ' + this.line + ')'; } \" +\r\n                \"//@ sourceURL=\" + name + \"\\n\" // source map\r\n            ).replace(/this\\.ret \\+= '';/g, '');\r\n            var func = new Function(body);\r\n            var map  = { '&' : '&amp;', '<' : '&lt;', '>' : '&gt;', '\\x22' : '&#x22;', '\\x27' : '&#x27;' };\r\n            var escapeHTML = function (string) { return (''+string).replace(/[&<>\\'\\\"]/g, function (_) { return map[_] }) };\r\n            return function (stash) { return func.call(me.context = { escapeHTML: escapeHTML, line: 1, ret : '', stash: stash }) };\r\n        })();\r\n        return data ? me.cache[id](data) : me.cache[id];\r\n    }\r\n\r\n    template.cache = {};\r\n    \r\n\r\n    template.get = function (id) {\r\n        return document.getElementById(id).innerHTML;\r\n    };\r\n\r\n    function rtrim(str) {\r\n        return str.replace(/\\s+$/g, '');\r\n    }\r\n\r\n    // Slugify a string\r\n    function slugify(str) {\r\n        str = str.replace(/^\\s+|\\s+$/g, '');\r\n\r\n        // Make the string lowercase\r\n        str = str.toLowerCase();\r\n\r\n        // Remove accents, swap ñ for n, etc\r\n        var from = \"ÁÄÂÀÃÅČÇĆĎÉĚËÈÊẼĔȆÍÌÎÏŇÑÓÖÒÔÕØŘŔŠŤÚŮÜÙÛÝŸŽáäâàãåčçćďéěëèêẽĕȇíìîïňñóöòôõøðřŕšťúůüùûýÿžþÞĐđßÆa·/_,:;\";\r\n        var to   = \"AAAAAACCCDEEEEEEEEIIIINNOOOOOORRSTUUUUUYYZaaaaaacccdeeeeeeeeiiiinnooooooorrstuuuuuyyzbBDdBAa------\";\r\n        for (var i=0, l=from.length ; i<l ; i++) {\r\n            str = str.replace(new RegExp(from.charAt(i), 'g'), to.charAt(i));\r\n        }\r\n\r\n        // Remove invalid chars\r\n        //str = str.replace(/[^a-z0-9 -]/g, '') \r\n        // Collapse whitespace and replace by -\r\n        str = str.replace(/\\s+/g, '-') \r\n        // Collapse dashes\r\n        .replace(/-+/g, '-'); \r\n\r\n        return str;\r\n    }    \r\n\r\n    // return boolean if string 'true' or string 'false', or if a parsable string which is a number\r\n    // also supports JSON object and/or arrays parsing\r\n    function toType(str) {\r\n        var type = typeof str;\r\n        if (type !== 'string') {\r\n            return str;\r\n        }\r\n        var nb = parseFloat(str);\r\n        if (!isNaN(nb) && isFinite(str)) {\r\n            return nb;\r\n        }\r\n        if (str === 'false') {\r\n            return false;\r\n        }\r\n        if (str === 'true') {\r\n            return true;\r\n        }\r\n\r\n        try {\r\n            str = JSON.parse(str);\r\n        } catch (e) {}\r\n\r\n        return str;\r\n    }\r\n\r\n\treturn skylark.attach(\"langx.strings\",{\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n        dasherize: dasherize,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        escapeHTML : escapeHTML,\r\n\r\n        generateUUID : generateUUID,\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        rtrim : rtrim,\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n\r\n        substitute: substitute,\r\n\r\n        slugify : slugify,\r\n\r\n        //template : template,\r\n\r\n        trim: trim,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        }\r\n\t}) ; \r\n\r\n});\ndefine('skylark-langx-strings/main',[\r\n\t\"./strings\"\r\n],function(strings){\r\n\treturn strings;\r\n});\ndefine('skylark-langx-strings', ['skylark-langx-strings/main'], function (main) { return main; });\n\ndefine('skylark-langx/strings',[\r\n    \"skylark-langx-strings\"\r\n],function(strings){\r\n    return strings;\r\n});\ndefine('skylark-langx/Stateful',[\r\n\t\"./Evented\",\r\n  \"./strings\",\r\n  \"./objects\"\r\n],function(Evented,strings,objects){\r\n    var isEqual = objects.isEqual,\r\n        mixin = objects.mixin,\r\n        result = objects.result,\r\n        isEmptyObject = objects.isEmptyObject,\r\n        clone = objects.clone,\r\n        uniqueId = strings.uniqueId;\r\n\r\n    var Stateful = Evented.inherit({\r\n        _construct : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n\treturn Stateful;\r\n});\ndefine('skylark-langx-topic/topic',[\r\n\t\"skylark-langx-ns\",\r\n\t\"skylark-langx-emitter/Evented\"\r\n],function(skylark,Evented){\r\n\tvar hub = new Evented();\r\n\r\n\treturn skylark.attach(\"langx.topic\",{\r\n\t    publish: function(name, arg1,argn) {\r\n\t        var data = [].slice.call(arguments, 1);\r\n\r\n\t        return hub.trigger({\r\n\t            type : name,\r\n\t            data : data\r\n\t        });\r\n\t    },\r\n\r\n        subscribe: function(name, listener,ctx) {\r\n        \tvar handler = function(e){\r\n                listener.apply(ctx,e.data);\r\n            };\r\n            hub.on(name, handler);\r\n            return {\r\n            \tremove : function(){\r\n            \t\thub.off(name,handler);\r\n            \t}\r\n            }\r\n\r\n        }\r\n\r\n\t});\r\n});\ndefine('skylark-langx-topic/main',[\r\n\t\"./topic\"\r\n],function(topic){\r\n\treturn topic;\r\n});\ndefine('skylark-langx-topic', ['skylark-langx-topic/main'], function (main) { return main; });\n\ndefine('skylark-langx/topic',[\r\n\t\"skylark-langx-topic\"\r\n],function(topic){\r\n\treturn topic;\r\n});\ndefine('skylark-langx/types',[\r\n    \"skylark-langx-types\"\r\n],function(types){\r\n    return types;\r\n});\ndefine('skylark-langx/langx',[\r\n    \"./skylark\",\r\n    \"./arrays\",\r\n    \"./ArrayStore\",\r\n    \"./aspect\",\r\n    \"./async\",\r\n    \"./datetimes\",\r\n    \"./Deferred\",\r\n    \"./Emitter\",\r\n    \"./Evented\",\r\n    \"./funcs\",\r\n    \"./hoster\",\r\n    \"./klass\",\r\n    \"./numbers\",\r\n    \"./objects\",\r\n    \"./Stateful\",\r\n    \"./strings\",\r\n    \"./topic\",\r\n    \"./types\"\r\n], function(skylark,arrays,ArrayStore,aspect,async,datetimes,Deferred,Emitter,Evented,funcs,hoster,klass,numbers,objects,Stateful,strings,topic,types) {\r\n    \"use strict\";\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin,\r\n        isFunction = types.isFunction;\r\n\r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        createEvent : Emitter.createEvent,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        toPixel: toPixel,\r\n\r\n        uid: uid,\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null\r\n\r\n    });\r\n\r\n\r\n    mixin(langx, arrays,aspect,datetimes,funcs,numbers,objects,strings,types,{\r\n        ArrayStore : ArrayStore,\r\n\r\n        async : async,\r\n        \r\n        Deferred: Deferred,\r\n\r\n        Emitter: Emitter,\r\n\r\n        Evented: Evented,\r\n\r\n        hoster : hoster,\r\n\r\n        klass : klass,\r\n       \r\n        Stateful: Stateful,\r\n\r\n        topic : topic\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\ndefine('skylark-domx-browser/browser',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark,langx) {\r\n    \"use strict\";\r\n\r\n    var browser = langx.hoster.browser;\r\n \r\n    var checkedCssProperties = {\r\n            \"transitionproperty\": \"TransitionProperty\",\r\n        },\r\n        transEndEventNames = {\r\n          WebkitTransition : 'webkitTransitionEnd',\r\n          MozTransition    : 'transitionend',\r\n          OTransition      : 'oTransitionEnd otransitionend',\r\n          transition       : 'transitionend'\r\n        },\r\n        transEndEventName = null;\r\n\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n                          testEl.mozMatchesSelector ||\r\n                          testEl.oMatchesSelector ||\r\n                          testEl.matchesSelector,\r\n\r\n        requestFullScreen = testEl.requestFullscreen || \r\n                            testEl.webkitRequestFullscreen || \r\n                            testEl.mozRequestFullScreen || \r\n                            testEl.msRequestFullscreen,\r\n\r\n        exitFullScreen =  document.exitFullscreen ||\r\n                          document.webkitCancelFullScreen ||\r\n                          document.mozCancelFullScreen ||\r\n                          document.msExitFullscreen,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n            if (transEndEventNames[name]) {\r\n              transEndEventName = transEndEventNames[name];\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!transEndEventName) {\r\n        if (testStyle[\"transition\"] !== undefined) {\r\n            transEndEventName = transEndEventNames[\"transition\"];\r\n        }\r\n    }\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        isIE : !!/msie/i.exec( window.navigator.userAgent ),\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        requestFullScreen : requestFullScreen,\r\n\r\n        exitFullscreen : requestFullScreen,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {\r\n\r\n        }\r\n\r\n    });\r\n\r\n    if  (transEndEventName) {\r\n        browser.support.transition = {\r\n            end : transEndEventName\r\n        };\r\n    }\r\n\r\n    testEl = null;\r\n\r\n    return skylark.attach(\"domx.browser\",browser);\r\n});\r\n\ndefine('skylark-domx-browser/main',[\r\n\t\"./browser\"\r\n],function(browser){\r\n\treturn browser;\r\n});\ndefine('skylark-domx-browser', ['skylark-domx-browser/main'], function (main) { return main; });\n\ndefine('skylark-domx-noder/noder',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\"\r\n], function(skylark, langx, browser) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n\r\n    function activeElement(doc) {\r\n        doc = doc || document;\r\n        var el;\r\n\r\n        // Support: IE 9 only\r\n        // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\r\n        try {\r\n            el = doc.activeElement;\r\n        } catch ( error ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 9 - 11 only\r\n        // IE may return null instead of an element\r\n        // Interestingly, this only seems to occur when NOT in an iframe\r\n        if ( !el ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 11 only\r\n        // IE11 returns a seemingly empty object in some cases when accessing\r\n        // document.activeElement from an <iframe>\r\n        if ( !el.nodeName ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        return el;\r\n    };\r\n\r\n    function enhancePlaceContent(placing,node) {\r\n        if (langx.isFunction(placing)) {\r\n            return placing.apply(node,[]);\r\n        }\r\n        if (langx.isArrayLike(placing)) {\r\n            var neddsFlattern;\r\n            for (var i=0;i<placing.length;i++) {\r\n                if (langx.isFunction(placing[i])) {\r\n                    placing[i] = placing[i].apply(node,[]);\r\n                    if (langx.isArrayLike(placing[i])) {\r\n                        neddsFlattern = true;\r\n                    }\r\n                }\r\n            }\r\n            if (neddsFlattern) {\r\n                placing = langx.flatten(placing);\r\n            }\r\n        }\r\n        return placing;\r\n    }\r\n    function after(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Get the children of the specified node, including text and comment nodes.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    /*   \r\n     * Create a element and set attributes on it.\r\n     * @param {HTMLElement} tag\r\n     * @param {props} props\r\n     * @param } parent\r\n     */\r\n    function createElement(tag, props, parent) {\r\n        var node;\r\n\r\n        if (/svg/i.test(tag)) {\r\n            node = document.createElementNS(\"http://www.w3.org/2000/svg\", tag)\r\n        } else {\r\n            node = document.createElement(tag);\r\n        }\r\n\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent, node);\r\n        }\r\n        return node;\r\n    }\r\n\r\nfunction removeSelfClosingTags(xml) {\r\n    var split = xml.split(\"/>\");\r\n    var newXml = \"\";\r\n    for (var i = 0; i < split.length - 1;i++) {\r\n        var edsplit = split[i].split(\"<\");\r\n        newXml += split[i] + \"></\" + edsplit[edsplit.length - 1].split(\" \")[0] + \">\";\r\n    }\r\n    return newXml + split[split.length-1];\r\n}\r\n\r\n    /*   \r\n     * Create a DocumentFragment from the HTML fragment.\r\n     * @param {String} html\r\n     */\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = removeSelfClosingTags(\"\" + html);\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    /*   \r\n     * Create a deep copy of the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {Boolean} deep\r\n     */\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node .\r\n     * @param {String} node\r\n     * @param {Node} child\r\n     */\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    /*   \r\n     * Create a new Text node.\r\n     * @param {String} text\r\n     * @param {Node} child\r\n     */\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    /*   \r\n     * Get the current document object.\r\n     */\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    /*   \r\n     * Remove all child nodes of the set of matched elements from the DOM.\r\n     * @param {Object} node\r\n     */\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    var fulledEl = null;\r\n\r\n    function fullScreen(el) {\r\n        if (el === false) {\r\n            browser.exitFullScreen.apply(document);\r\n        } else if (el) {\r\n            browser.requestFullScreen.apply(el);\r\n            fulledEl = el;\r\n        } else {\r\n            return (\r\n                document.fullscreenElement ||\r\n                document.webkitFullscreenElement ||\r\n                document.mozFullScreenElement ||\r\n                document.msFullscreenElement\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    // Selectors\r\n    function focusable( element, hasTabindex ) {\r\n        var map, mapName, img, focusableIfVisible, fieldset,\r\n            nodeName = element.nodeName.toLowerCase();\r\n\r\n        if ( \"area\" === nodeName ) {\r\n            map = element.parentNode;\r\n            mapName = map.name;\r\n            if ( !element.href || !mapName || map.nodeName.toLowerCase() !== \"map\" ) {\r\n                return false;\r\n            }\r\n            img = $( \"img[usemap='#\" + mapName + \"']\" );\r\n            return img.length > 0 && img.is( \":visible\" );\r\n        }\r\n\r\n        if ( /^(input|select|textarea|button|object)$/.test( nodeName ) ) {\r\n            focusableIfVisible = !element.disabled;\r\n\r\n            if ( focusableIfVisible ) {\r\n\r\n                // Form controls within a disabled fieldset are disabled.\r\n                // However, controls within the fieldset's legend do not get disabled.\r\n                // Since controls generally aren't placed inside legends, we skip\r\n                // this portion of the check.\r\n                fieldset = $( element ).closest( \"fieldset\" )[ 0 ];\r\n                if ( fieldset ) {\r\n                    focusableIfVisible = !fieldset.disabled;\r\n                }\r\n            }\r\n        } else if ( \"a\" === nodeName ) {\r\n            focusableIfVisible = element.href || hasTabindex;\r\n        } else {\r\n            focusableIfVisible = hasTabindex;\r\n        }\r\n\r\n        return focusableIfVisible && $( element ).is( \":visible\" ) && visible( $( element ) );\r\n    };\r\n\r\n\r\n   var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi;\r\n \r\n    /*   \r\n     * Get the HTML contents of the first element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} html\r\n     */\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html)) {\r\n                html = html.replace( rxhtmlTag, \"<$1></$2>\" );\r\n            }\r\n            if (langx.isString(html) || langx.isNumber(html)) {               \r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isChildOf(node, parent, directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a document.\r\n     * @param {Node} node\r\n     */\r\n    function isDocument(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is in the document\r\n     * @param {Node} node\r\n     */\r\n    function isInDocument(node) {\r\n      return (node === document.body) ? true : document.body.contains(node);\r\n    }        \r\n\r\n    var blockNodes = [\"div\", \"p\", \"ul\", \"ol\", \"li\", \"blockquote\", \"hr\", \"pre\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"table\"];\r\n\r\n    function isBlockNode(node) {\r\n        if (!node || node.nodeType === 3) {\r\n          return false;\r\n        }\r\n        return new RegExp(\"^(\" + (blockNodes.join('|')) + \")$\").test(node.nodeName.toLowerCase());\r\n    }\r\n\r\n\r\n    /*   \r\n     * Get the owner document object for the specified element.\r\n     * @param {Node} elm\r\n     */\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return doc.defaultView || doc.parentWindow;\r\n    }\r\n\r\n    /*   \r\n     * insert one or more nodes as the first children of the specified node.\r\n     * @param {Node} node\r\n     * @param {Node or ArrayLike} placing\r\n     * @param {Boolean Optional} copyByClone\r\n     */\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && document.defaultView.getComputedStyle(parent).position == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    /*   \r\n     * Remove the set of matched elements from the DOM.\r\n     * @param {Node} node\r\n     */\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n                node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\", e);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function removeChild(node,children) {\r\n        if (!langx.isArrayLike(children)) {\r\n            children = [children];\r\n        }\r\n        for (var i=0;i<children.length;i++) {\r\n            node.removeChild(children[i]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollParent( elm, includeHidden ) {\r\n        var position = document.defaultView.getComputedStyle(elm).position,\r\n            excludeStaticParent = position === \"absolute\",\r\n            overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n            scrollParent = this.parents().filter( function() {\r\n                var parent = $( this );\r\n                if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                    return false;\r\n                }\r\n                return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                    parent.css( \"overflow-x\" ) );\r\n            } ).eq( 0 );\r\n\r\n        return position === \"fixed\" || !scrollParent.length ?\r\n            $( this[ 0 ].ownerDocument || document ) :\r\n            scrollParent;\r\n    };\r\n\r\n\r\n    function reflow(elm) {\r\n        if (el == null) {\r\n          elm = document;\r\n        }\r\n        elm.offsetHeight;\r\n\r\n        return this;      \r\n    }\r\n\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {Node} node\r\n     * @param {Node} oldNode\r\n     */\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * traverse the specified node and its descendants, perform the callback function on each\r\n     * @param {Node} node\r\n     * @param {Function} fn\r\n     */\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} node\r\n     */\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around each element in the set of matched elements.\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around the content of each element in the set of matched\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Remove the parents of the set of matched elements from the DOM, leaving the matched\r\n     * @param {Node} node\r\n     */\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        active  : activeElement,\r\n\r\n        blur : function(el) {\r\n            el.blur();\r\n        },\r\n\r\n        body: function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        fullScreen: fullScreen,\r\n\r\n        focusable: focusable,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isInDocument: isInDocument,\r\n\r\n        isWindow: langx.isWindow,\r\n\r\n        nodeName : nodeName,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow: ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        reflow: reflow,\r\n\r\n        remove: remove,\r\n\r\n        removeChild : removeChild,\r\n\r\n        replace: replace,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.attach(\"domx.noder\" , noder);\r\n});\ndefine('skylark-domx-noder/main',[\r\n\t\"./noder\"\r\n],function(noder){\r\n\treturn noder;\r\n});\ndefine('skylark-domx-noder', ['skylark-domx-noder/main'], function (main) { return main; });\n\ndefine('skylark-domx-finder/finder',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-noder\"\r\n], function(skylark, langx, browser, noder) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'focusable': function( elm ) {\r\n            return noder.focusable(elm, elm.tabindex != null );\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function(elem) {\r\n            return rheader.test(elem.nodeName);\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function(elem) {\r\n            return rinputs.test(elem.nodeName);\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        /*   \r\n         * Get the parent of each element in the current set of matched elements.\r\n         * @param {Object} elm\r\n         */\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'tabbable': function(elm) {\r\n            var tabIndex = elm.tabindex,\r\n                hasTabindex = tabIndex != null;\r\n            return ( !hasTabindex || tabIndex >= 0 ) && noder.focusable( element, hasTabindex );\r\n        },\r\n\r\n        'text': function(elm) {\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        },\r\n        'empty': function(elm) {\r\n            return !elm.hasChildNodes();\r\n        }\r\n    };\r\n\r\n    [\"first\", \"eq\", \"last\"].forEach(function(item) {\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for (i in {\r\n        radio: true,\r\n        checkbox: true,\r\n        file: true,\r\n        password: true,\r\n        image: true\r\n    }) {\r\n        pseudos[i] = createInputPseudo(i);\r\n    }\r\n    for (i in {\r\n        submit: true,\r\n        reset: true\r\n    }) {\r\n        pseudos[i] = createButtonPseudo(i);\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value) + \"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            if (tag !== \"*\") {\r\n                nativeSelector = tag.toUpperCase() + nativeSelector;\r\n            }\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes, arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;\r\n        }\r\n\r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node, exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp) {\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes, false);\r\n        });\r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs, true);\r\n        });\r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes, selector);\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes, exp);\r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n\r\n    };\r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, true)\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n    /*\r\n     * Get the nearest ancestor of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the ancestors of the specitied element , optionally filtered by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestors(node, selector, root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (langx.isArrayLike(root)) {\r\n                    if (langx.inArray(node,root)>-1) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n            if (!selector || matches(node, selector)) {\r\n              ret.push(node); \r\n            }\r\n        }\r\n\r\n        //if (selector) {\r\n        //    ret = local.filter(ret, selector);\r\n        //}\r\n        return ret;\r\n    }\r\n\r\n\r\n    /*\r\n     * Returns a element by its ID.\r\n     * @param {string} id\r\n     */\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    /*\r\n     * Get the children of the specified element , optionally filtered by a selector.\r\n     * @param {string} node\r\n     * @param {String optionlly} selector\r\n     */\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    /*\r\n     * Get the decendant of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the nearest decendent of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the descendants of each element in the current set of matched elements, filtered by a selector, jQuery object, or element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function find(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm, selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the findAll of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function findAll(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the first child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String} first\r\n     */\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the last child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String } last\r\n     */\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Check the specified element against a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm, selector) > -1;\r\n        } else if (langx.isPlainObject(selector)) {\r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Get the nearest next sibing of the specitied element , optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional} adjacent\r\n     */\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the next siblings of the specified element , optional filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Get the parent element of the specified element. if a selector is provided, it retrieves the parent element only if it matches that selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get hte nearest previous sibling of the specified element ,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional } adjacent\r\n     */\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get all preceding siblings of each element in the set of matched elements, optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Selects all sibling elements that follow after the “prev” element, have the same parent, and match the filtering “siblings” selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling,\r\n\r\n        previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.attach(\"domx.finder\", finder);\r\n});\ndefine('skylark-domx-finder/main',[\r\n\t\"./finder\"\r\n],function(finder){\r\n\r\n\treturn finder;\r\n});\ndefine('skylark-domx-finder', ['skylark-domx-finder/main'], function (main) { return main; });\n\ndefine('skylark-domx-query/query',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-finder\"\r\n], function(skylark, langx, noder, finder) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        sort = Array.prototype.sort,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_node_operation(func, context, oldValueFunc) {\r\n        return function(html) {\r\n            var argType, nodes = langx.map(arguments, function(arg) {\r\n                argType = type(arg)\r\n                return argType == \"function\" || argType == \"object\" || argType == \"array\" || arg == null ?\r\n                    arg : noder.createFragment(arg)\r\n            });\r\n            if (nodes.length < 1) {\r\n                return this\r\n            }\r\n            this.each(function(idx) {\r\n                func.apply(context, [this, nodes, idx > 0]);\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = langx.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return query(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                } else {\r\n                    return [];\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            //if (selector === undefined) { //TODO : needs confirm?\r\n            //    selector = util;\r\n            //    util = undefined;\r\n            //}\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) { // TODO\r\n                //if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                //} else {\r\n                //    return [];\r\n                //}\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx,node) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, newArg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this;\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem,name,newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (selector !== window && isArrayLike(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                $.ready(function() {\r\n                    selector($);\r\n                });\r\n                return rootQuery;\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        },rootQuery = $(document);\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            sort : function() {\r\n                return sort.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            //remove: wrapper_every_act(noder.remove, noder),\r\n            remove : function(selector) {\r\n                if (selector) {\r\n                    return this.find(selector).remove();\r\n                }\r\n                this.each(function(i,node){\r\n                    noder.remove(node);\r\n                });\r\n                return this;\r\n            },\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector) > -1;\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx,node) {\r\n                        if (!selector.call(this, idx,node)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            html: wrapper_value(noder.html, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(html) {\r\n                /*\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index,node) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index,node) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n                */\r\n                var htmlIsFunction = typeof html === \"function\";\r\n\r\n                return this.each( function( i ) {\r\n                    $( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );\r\n                } );                \r\n            },\r\n\r\n            wrapAll: function(html) {\r\n                /*\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n                */\r\n                var wrap;\r\n\r\n                if ( this[ 0 ] ) {\r\n                    if ( typeof html === \"function\" ) {\r\n                        html = html.call( this[ 0 ] );\r\n                    }\r\n\r\n                    // The elements to wrap the target around\r\n                    wrap = $( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\r\n\r\n                    if ( this[ 0 ].parentNode ) {\r\n                        wrap.insertBefore( this[ 0 ] );\r\n                    }\r\n\r\n                    wrap.map( function() {\r\n                        var elem = this;\r\n\r\n                        while ( elem.firstElementChild ) {\r\n                            elem = elem.firstElementChild;\r\n                        }\r\n\r\n                        return elem;\r\n                    } ).append( this );\r\n                }\r\n\r\n                return this;\r\n\r\n            },\r\n\r\n            wrapInner: function(html) {\r\n                /*\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index,node) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index,node) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n                */\r\n                if ( typeof html === \"function\" ) {\r\n                    return this.each( function( i ) {\r\n                        $( this ).wrapInner( html.call( this, i ) );\r\n                    } );\r\n                }\r\n\r\n                return this.each( function() {\r\n                    var self = $( this ),\r\n                        contents = self.contents();\r\n\r\n                    if ( contents.length ) {\r\n                        contents.wrapAll( html );\r\n\r\n                    } else {\r\n                        self.append( html );\r\n                    }\r\n                } );\r\n\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                /*\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n                */\r\n                this.parent(selector).not(\"body\").each( function() {\r\n                    $(this).replaceWith(this.childNodes);\r\n                });\r\n                return this;\r\n\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSiblings, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            }\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.scrollParent = function( includeHidden ) {\r\n            var position = this.css( \"position\" ),\r\n                excludeStaticParent = position === \"absolute\",\r\n                overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n                scrollParent = this.parents().filter( function() {\r\n                    var parent = $( this );\r\n                    if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                        return false;\r\n                    }\r\n                    return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                        parent.css( \"overflow-x\" ) );\r\n                } ).eq( 0 );\r\n\r\n            return position === \"fixed\" || !scrollParent.length ?\r\n                $( this[ 0 ].ownerDocument || document ) :\r\n                scrollParent;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings,prev,prevAll,next,nextAll'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n\r\n\r\n        $.fn.disableSelection = ( function() {\r\n            var eventType = \"onselectstart\" in document.createElement( \"div\" ) ?\r\n                \"selectstart\" :\r\n                \"mousedown\";\r\n\r\n            return function() {\r\n                return this.on( eventType + \".ui-disableSelection\", function( event ) {\r\n                    event.preventDefault();\r\n                } );\r\n            };\r\n        } )();\r\n\r\n        $.fn.enableSelection = function() {\r\n            return this.off( \".ui-disableSelection\" );\r\n        };\r\n\r\n        $.fn.reflow = function() {\r\n            return noder.flow(this[0]);\r\n        };\r\n\r\n        $.fn.isBlockNode = function() {\r\n            return noder.isBlockNode(this[0]);\r\n        };\r\n       \r\n\r\n    })(query);\r\n\r\n    query.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = plugins.instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n\r\n    query.wraps = {\r\n        wrapper_node_operation,\r\n        wrapper_map,\r\n        wrapper_value,\r\n        wrapper_selector,\r\n        wrapper_some_chk,\r\n        wrapper_selector_until,\r\n        wrapper_every_act_firstArgFunc,\r\n        wrapper_every_act,\r\n        wrapper_name_value\r\n\r\n    };\r\n\r\n    return skylark.attach(\"domx.query\", query);\r\n\r\n});\ndefine('skylark-domx-query/main',[\r\n\t\"./query\"\r\n],function(query){\r\n\treturn query;\r\n});\ndefine('skylark-domx-query', ['skylark-domx-query/main'], function (main) { return main; });\n\ndefine('skylark-net-http/http',[\r\n  \"skylark-langx-ns/ns\",\r\n],function(skylark){\r\n\treturn skylark.attach(\"net.http\",{});\r\n});\ndefine('skylark-net-http/Xhr',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n  \"skylark-langx-funcs\",\r\n  \"skylark-langx-async/Deferred\",\r\n  \"skylark-langx-emitter/Evented\",\r\n  \"./http\"\r\n],function(skylark,types,objects,arrays,funcs,Deferred,Evented,http){\r\n\r\n    var each = objects.each,\r\n        mixin = objects.mixin,\r\n        noop = funcs.noop,\r\n        isArray = types.isArray,\r\n        isFunction = types.isFunction,\r\n        isPlainObject = types.isPlainObject,\r\n        type = types.type;\r\n \r\n     var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n   \r\n    var Xhr = (function(){\r\n        var jsonpID = 0,\r\n            key,\r\n            name,\r\n            rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n            scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n            xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n            jsonType = 'application/json',\r\n            htmlType = 'text/html',\r\n            blankRE = /^\\s*$/;\r\n\r\n        var XhrDefaultOptions = {\r\n            async: true,\r\n\r\n            // Default type of request\r\n            type: 'GET',\r\n            // Callback that is executed before request\r\n            beforeSend: noop,\r\n            // Callback that is executed if the request succeeds\r\n            success: noop,\r\n            // Callback that is executed the the server drops error\r\n            error: noop,\r\n            // Callback that is executed on request complete (both: error and success)\r\n            complete: noop,\r\n            // The context for the callbacks\r\n            context: null,\r\n            // Whether to trigger \"global\" Ajax events\r\n            global: true,\r\n\r\n            // MIME types mapping\r\n            // IIS returns Javascript as \"application/x-javascript\"\r\n            accepts: {\r\n                script: 'text/javascript, application/javascript, application/x-javascript',\r\n                json: 'application/json',\r\n                xml: 'application/xml, text/xml',\r\n                html: 'text/html',\r\n                text: 'text/plain'\r\n            },\r\n            // Whether the request is to another domain\r\n            crossDomain: false,\r\n            // Default timeout\r\n            timeout: 0,\r\n            // Whether data should be serialized to string\r\n            processData: false,\r\n            // Whether the browser should be allowed to cache GET responses\r\n            cache: true,\r\n\r\n            traditional : false,\r\n            \r\n            xhrFields : {\r\n                withCredentials : false\r\n            }\r\n        };\r\n\r\n        function mimeToDataType(mime) {\r\n            if (mime) {\r\n                mime = mime.split(';', 2)[0];\r\n            }\r\n            if (mime) {\r\n                if (mime == htmlType) {\r\n                    return \"html\";\r\n                } else if (mime == jsonType) {\r\n                    return \"json\";\r\n                } else if (scriptTypeRE.test(mime)) {\r\n                    return \"script\";\r\n                } else if (xmlTypeRE.test(mime)) {\r\n                    return \"xml\";\r\n                }\r\n            }\r\n            return \"text\";\r\n        }\r\n\r\n        function appendQuery(url, query) {\r\n            if (query == '') return url\r\n            return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n        }\r\n\r\n        // serialize payload and append it to the URL for GET requests\r\n        function serializeData(options) {\r\n            options.data = options.data || options.query;\r\n            if (options.processData && options.data && type(options.data) != \"string\") {\r\n                options.data = param(options.data, options.traditional);\r\n            }\r\n            if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n                if (type(options.data) != \"string\") {\r\n                    options.data = param(options.data, options.traditional);\r\n                }\r\n                options.url = appendQuery(options.url, options.data);\r\n                options.data = undefined;\r\n            }\r\n        }\r\n        \r\n        function serialize(params, obj, traditional, scope) {\r\n            var t, array = isArray(obj),\r\n                hash = isPlainObject(obj)\r\n            each(obj, function(key, value) {\r\n                t =type(value);\r\n                if (scope) key = traditional ? scope :\r\n                    scope + '[' + (hash || t == 'object' || t == 'array' ? key : '') + ']'\r\n                // handle data in serializeArray() format\r\n                if (!scope && array) params.add(value.name, value.value)\r\n                // recurse into nested objects\r\n                else if (t == \"array\" || (!traditional && t == \"object\"))\r\n                    serialize(params, value, traditional, key)\r\n                else params.add(key, value)\r\n            })\r\n        }\r\n\r\n        var param = function(obj, traditional) {\r\n            var params = []\r\n            params.add = function(key, value) {\r\n                if (isFunction(value)) {\r\n                  value = value();\r\n                }\r\n                if (value == null) {\r\n                  value = \"\";\r\n                }\r\n                this.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n            };\r\n            serialize(params, obj, traditional)\r\n            return params.join('&').replace(/%20/g, '+')\r\n        };\r\n\r\n        var Xhr = Evented.inherit({\r\n            klassName : \"Xhr\",\r\n\r\n            _request  : function(args) {\r\n                var _ = this._,\r\n                    self = this,\r\n                    options = mixin({},XhrDefaultOptions,_.options,args),\r\n                    xhr = _.xhr = new XMLHttpRequest();\r\n\r\n                serializeData(options)\r\n\r\n                if (options.beforeSend) {\r\n                    options.beforeSend.call(this, xhr, options);\r\n                }                \r\n\r\n                var dataType = options.dataType || options.handleAs,\r\n                    mime = options.mimeType || options.accepts[dataType],\r\n                    headers = options.headers,\r\n                    xhrFields = options.xhrFields,\r\n                    isFormData = options.data && options.data instanceof FormData,\r\n                    basicAuthorizationToken = options.basicAuthorizationToken,\r\n                    type = options.type,\r\n                    url = options.url,\r\n                    async = options.async,\r\n                    user = options.user , \r\n                    password = options.password,\r\n                    deferred = new Deferred(),\r\n                    contentType = options.contentType || (isFormData ? false : 'application/x-www-form-urlencoded');\r\n\r\n                if (xhrFields) {\r\n                    for (name in xhrFields) {\r\n                        xhr[name] = xhrFields[name];\r\n                    }\r\n                }\r\n\r\n                if (mime && mime.indexOf(',') > -1) {\r\n                    mime = mime.split(',', 2)[0];\r\n                }\r\n                if (mime && xhr.overrideMimeType) {\r\n                    xhr.overrideMimeType(mime);\r\n                }\r\n\r\n                //if (dataType) {\r\n                //    xhr.responseType = dataType;\r\n                //}\r\n\r\n                var finish = function() {\r\n                    xhr.onloadend = noop;\r\n                    xhr.onabort = noop;\r\n                    xhr.onprogress = noop;\r\n                    xhr.ontimeout = noop;\r\n                    xhr = null;\r\n                }\r\n                var onloadend = function() {\r\n                    var result, error = false\r\n                    if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && getAbsoluteUrl(url).startsWith('file:'))) {\r\n                        dataType = dataType || mimeToDataType(options.mimeType || xhr.getResponseHeader('content-type'));\r\n\r\n                        result = xhr.responseText;\r\n                        try {\r\n                            if (dataType == 'script') {\r\n                                eval(result);\r\n                            } else if (dataType == 'xml') {\r\n                                result = xhr.responseXML;\r\n                            } else if (dataType == 'json') {\r\n                                result = blankRE.test(result) ? null : JSON.parse(result);\r\n                            } else if (dataType == \"blob\") {\r\n                                result = Blob([xhrObj.response]);\r\n                            } else if (dataType == \"arraybuffer\") {\r\n                                result = xhr.reponse;\r\n                            }\r\n                        } catch (e) { \r\n                            error = e;\r\n                        }\r\n\r\n                        if (error) {\r\n                            deferred.reject(error,xhr.status,xhr);\r\n                        } else {\r\n                            deferred.resolve(result,xhr.status,xhr);\r\n                        }\r\n                    } else {\r\n                        deferred.reject(new Error(xhr.statusText),xhr.status,xhr);\r\n                    }\r\n                    finish();\r\n                };\r\n\r\n                var onabort = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"abort\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n \r\n                var ontimeout = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"timeout\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n\r\n                var onprogress = function(evt) {\r\n                    if (deferred) {\r\n                        deferred.notify(evt,xhr.status,xhr);\r\n                    }\r\n                }\r\n\r\n                xhr.onloadend = onloadend;\r\n                xhr.onabort = onabort;\r\n                xhr.ontimeout = ontimeout;\r\n                xhr.onprogress = onprogress;\r\n\r\n                xhr.open(type, url, async, user, password);\r\n               \r\n                if (headers) {\r\n                    for ( var key in headers) {\r\n                        var value = headers[key];\r\n \r\n                        if(key.toLowerCase() === 'content-type'){\r\n                            contentType = value;\r\n                        } else {\r\n                           xhr.setRequestHeader(key, value);\r\n                        }\r\n                    }\r\n                }   \r\n\r\n                if  (contentType && contentType !== false){\r\n                    xhr.setRequestHeader('Content-Type', contentType);\r\n                }\r\n\r\n                if(!headers || !('X-Requested-With' in headers)){\r\n                    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n                }\r\n\r\n\r\n                //If basicAuthorizationToken is defined set its value into \"Authorization\" header\r\n                if (basicAuthorizationToken) {\r\n                    xhr.setRequestHeader(\"Authorization\", basicAuthorizationToken);\r\n                }\r\n\r\n                xhr.send(options.data ? options.data : null);\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n\r\n            \"abort\": function() {\r\n                var _ = this._,\r\n                    xhr = _.xhr;\r\n\r\n                if (xhr) {\r\n                    xhr.abort();\r\n                }    \r\n            },\r\n\r\n\r\n            \"request\": function(args) {\r\n                return this._request(args);\r\n            },\r\n\r\n            get : function(args) {\r\n                args = args || {};\r\n                args.type = \"GET\";\r\n                return this._request(args);\r\n            },\r\n\r\n            post : function(args) {\r\n                args = args || {};\r\n                args.type = \"POST\";\r\n                return this._request(args);\r\n            },\r\n\r\n            patch : function(args) {\r\n                args = args || {};\r\n                args.type = \"PATCH\";\r\n                return this._request(args);\r\n            },\r\n\r\n            put : function(args) {\r\n                args = args || {};\r\n                args.type = \"PUT\";\r\n                return this._request(args);\r\n            },\r\n\r\n            del : function(args) {\r\n                args = args || {};\r\n                args.type = \"DELETE\";\r\n                return this._request(args);\r\n            },\r\n\r\n            \"init\": function(options) {\r\n                this._ = {\r\n                    options : options || {}\r\n                };\r\n            }\r\n        });\r\n\r\n        [\"request\",\"get\",\"post\",\"put\",\"del\",\"patch\"].forEach(function(name){\r\n            Xhr[name] = function(url,args) {\r\n                var xhr = new Xhr({\"url\" : url});\r\n                return xhr[name](args);\r\n            };\r\n        });\r\n\r\n        Xhr.defaultOptions = XhrDefaultOptions;\r\n        Xhr.param = param;\r\n\r\n        return Xhr;\r\n    })();\r\n\r\n\treturn http.Xhr = Xhr;\t\r\n});\ndefine('skylark-net-http/Upload',[\r\n    \"skylark-langx-types\",\r\n    \"skylark-langx-objects\",\r\n    \"skylark-langx-arrays\",\r\n    \"skylark-langx-async/Deferred\",\r\n    \"skylark-langx-emitter/Evented\",    \r\n    \"./Xhr\",\r\n    \"./http\"\r\n],function(types, objects, arrays, Deferred, Evented,Xhr, http){\r\n\r\n    var blobSlice = Blob.prototype.slice || Blob.prototype.webkitSlice || Blob.prototype.mozSlice;\r\n\r\n\r\n    /*\r\n     *Class for uploading files using xhr.\r\n     */\r\n    var Upload = Evented.inherit({\r\n        klassName : \"Upload\",\r\n\r\n        _construct : function(options) {\r\n            this._options = objects.mixin({\r\n                debug: false,\r\n                url: '/upload',\r\n                // maximum number of concurrent uploads\r\n                maxConnections: 999,\r\n                // To upload large files in smaller chunks, set the following option\r\n                // to a preferred maximum chunk size. If set to 0, null or undefined,\r\n                // or the browser does not support the required Blob API, files will\r\n                // be uploaded as a whole.\r\n                maxChunkSize: undefined,\r\n\r\n                onProgress: function(id, fileName, loaded, total){\r\n                },\r\n                onComplete: function(id, fileName){\r\n                },\r\n                onCancel: function(id, fileName){\r\n                },\r\n                onFailure : function(id,fileName,e) {                    \r\n                }\r\n            },options);\r\n\r\n            this._queue = [];\r\n            // params for files in queue\r\n            this._params = [];\r\n\r\n            this._files = [];\r\n            this._xhrs = [];\r\n\r\n            // current loaded size in bytes for each file\r\n            this._loaded = [];\r\n\r\n        },\r\n\r\n        /**\r\n         * Adds file to the queue\r\n         * Returns id to use with upload, cancel\r\n         **/\r\n        add: function(file){\r\n            return this._files.push(file) - 1;\r\n        },\r\n\r\n        /**\r\n         * Sends the file identified by id and additional query params to the server.\r\n         */\r\n        send: function(id, params){\r\n            if (!this._files[id]) {\r\n                // Already sended or canceled\r\n                return ;\r\n            }\r\n            if (this._queue.indexOf(id)>-1) {\r\n                // Already in the queue\r\n                return;\r\n            }\r\n            var len = this._queue.push(id);\r\n\r\n            var copy = objects.clone(params);\r\n\r\n            this._params[id] = copy;\r\n\r\n            // if too many active uploads, wait...\r\n            if (len <= this._options.maxConnections){\r\n                this._send(id, this._params[id]);\r\n            }     \r\n        },\r\n\r\n        /**\r\n         * Sends all files  and additional query params to the server.\r\n         */\r\n        sendAll: function(params){\r\n           for( var id = 0; id <this._files.length; id++) {\r\n                this.send(id,params);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Cancels file upload by id\r\n         */\r\n        cancel: function(id){\r\n            this._cancel(id);\r\n            this._dequeue(id);\r\n        },\r\n\r\n        /**\r\n         * Cancells all uploads\r\n         */\r\n        cancelAll: function(){\r\n            for (var i=0; i<this._queue.length; i++){\r\n                this._cancel(this._queue[i]);\r\n            }\r\n            this._queue = [];\r\n        },\r\n\r\n        getName: function(id){\r\n            var file = this._files[id];\r\n            return file.fileName != null ? file.fileName : file.name;\r\n        },\r\n\r\n        getSize: function(id){\r\n            var file = this._files[id];\r\n            return file.fileSize != null ? file.fileSize : file.size;\r\n        },\r\n\r\n        /**\r\n         * Returns uploaded bytes for file identified by id\r\n         */\r\n        getLoaded: function(id){\r\n            return this._loaded[id] || 0;\r\n        },\r\n\r\n\r\n        /**\r\n         * Sends the file identified by id and additional query params to the server\r\n         * @param {Object} params name-value string pairs\r\n         */\r\n        _send: function(id, params){\r\n            var options = this._options,\r\n                name = this.getName(id),\r\n                size = this.getSize(id),\r\n                chunkSize = options.maxChunkSize || 0,\r\n                curUploadingSize,\r\n                curLoadedSize = 0,\r\n                file = this._files[id],\r\n                args = {\r\n                    headers : {\r\n                    }                    \r\n                };\r\n\r\n            this._loaded[id] = this._loaded[id] || 0;\r\n\r\n            var xhr = this._xhrs[id] = new Xhr({\r\n                url : options.url\r\n            });\r\n\r\n            if (chunkSize)  {\r\n\r\n                args.data = blobSlice.call(\r\n                    file,\r\n                    this._loaded[id],\r\n                    this._loaded[id] + chunkSize,\r\n                    file.type\r\n                );\r\n                // Store the current chunk size, as the blob itself\r\n                // will be dereferenced after data processing:\r\n                curUploadingSize = args.data.size;\r\n                // Expose the chunk bytes position range:\r\n                args.headers[\"content-range\"] = 'bytes ' + this._loaded[id] + '-' +\r\n                    (this._loaded[id] + curUploadingSize - 1) + '/' + size;\r\n                args.headers[\"Content-Type\"] = \"application/octet-stream\";\r\n            }  else {\r\n                curUploadingSize = size;\r\n                var formParamName =  params.formParamName,\r\n                    formData = params.formData;\r\n\r\n                if (formParamName) {\r\n                    if (!formData) {\r\n                        formData = new FormData();\r\n                    }\r\n                    formData.append(formParamName,file);\r\n                    args.data = formData;\r\n    \r\n                } else {\r\n                    args.headers[\"Content-Type\"] = file.type || \"application/octet-stream\";\r\n                    args.data = file;\r\n                }\r\n            }\r\n\r\n\r\n            var self = this;\r\n            xhr.post(\r\n                args\r\n            ).progress(function(e){\r\n                if (e.lengthComputable){\r\n                    curLoadedSize = curLoadedSize + e.loaded;\r\n                    self._loaded[id] = self._loaded[id] + e.loaded;\r\n                    self._options.onProgress(id, name, self._loaded[id], size);\r\n                }\r\n            }).then(function(){\r\n                if (!self._files[id]) {\r\n                    // the request was aborted/cancelled\r\n                    return;\r\n                }\r\n\r\n                if (curLoadedSize < curUploadingSize) {\r\n                    // Create a progress event if no final progress event\r\n                    // with loaded equaling total has been triggered\r\n                    // for this chunk:\r\n                    self._loaded[id] = self._loaded[id] + curUploadingSize - curLoadedSize;\r\n                    self._options.onProgress(id, name, self._loaded[id], size);                    \r\n                }\r\n\r\n                if (self._loaded[id] <size) {\r\n                    // File upload not yet complete,\r\n                    // continue with the next chunk:\r\n                    self._send(id,params);\r\n                } else {\r\n                    self._options.onComplete(id,name);\r\n\r\n                    self._files[id] = null;\r\n                    self._xhrs[id] = null;\r\n                    self._dequeue(id);\r\n                }\r\n\r\n\r\n            }).catch(function(e){\r\n                self._options.onFailure(id,name,e);\r\n\r\n                self._files[id] = null;\r\n                self._xhrs[id] = null;\r\n                self._dequeue(id);\r\n            });\r\n        },\r\n\r\n        _cancel: function(id){\r\n            this._options.onCancel(id, this.getName(id));\r\n\r\n            this._files[id] = null;\r\n\r\n            if (this._xhrs[id]){\r\n                this._xhrs[id].abort();\r\n                this._xhrs[id] = null;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Returns id of files being uploaded or\r\n         * waiting for their turn\r\n         */\r\n        getQueue: function(){\r\n            return this._queue;\r\n        },\r\n\r\n\r\n        /**\r\n         * Removes element from queue, starts upload of next\r\n         */\r\n        _dequeue: function(id){\r\n            var i = arrays.inArray(id,this._queue);\r\n            this._queue.splice(i, 1);\r\n\r\n            var max = this._options.maxConnections;\r\n\r\n            if (this._queue.length >= max && i < max){\r\n                var nextId = this._queue[max-1];\r\n                this._send(nextId, this._params[nextId]);\r\n            }\r\n        }\r\n    });\r\n\r\n    return http.Upload = Upload;    \r\n});\ndefine('skylark-domx-data/data',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-noder\"\r\n], function(skylark, langx, finder,noder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n\r\n    // Strip and collapse whitespace according to HTML spec\r\n    function stripAndCollapse( value ) {\r\n      var tokens = value.match( /[^\\x20\\t\\r\\n\\f]+/g ) || [];\r\n      return tokens.join( \" \" );\r\n    }\r\n\r\n\r\n    var valHooks = {\r\n      option: {\r\n        get: function( elem ) {\r\n          var val = elem.getAttribute( \"value\" );\r\n          return val != null ?  val :  stripAndCollapse(text( elem ) );\r\n        }\r\n      },\r\n      select: {\r\n        get: function( elem ) {\r\n          var value, option, i,\r\n            options = elem.options,\r\n            index = elem.selectedIndex,\r\n            one = elem.type === \"select-one\",\r\n            values = one ? null : [],\r\n            max = one ? index + 1 : options.length;\r\n\r\n          if ( index < 0 ) {\r\n            i = max;\r\n\r\n          } else {\r\n            i = one ? index : 0;\r\n          }\r\n\r\n          // Loop through all the selected options\r\n          for ( ; i < max; i++ ) {\r\n            option = options[ i ];\r\n\r\n            if ( option.selected &&\r\n\r\n                // Don't return options that are disabled or in a disabled optgroup\r\n                !option.disabled &&\r\n                ( !option.parentNode.disabled ||\r\n                  !noder.nodeName( option.parentNode, \"optgroup\" ) ) ) {\r\n\r\n              // Get the specific value for the option\r\n              value = val(option);\r\n\r\n              // We don't need an array for one selects\r\n              if ( one ) {\r\n                return value;\r\n              }\r\n\r\n              // Multi-Selects return an array\r\n              values.push( value );\r\n            }\r\n          }\r\n\r\n          return values;\r\n        },\r\n\r\n        set: function( elem, value ) {\r\n          var optionSet, option,\r\n            options = elem.options,\r\n            values = langx.makeArray( value ),\r\n            i = options.length;\r\n\r\n          while ( i-- ) {\r\n            option = options[ i ];\r\n\r\n            /* eslint-disable no-cond-assign */\r\n\r\n            if ( option.selected =\r\n              langx.inArray( valHooks.option.get( option ), values ) > -1\r\n            ) {\r\n              optionSet = true;\r\n            }\r\n\r\n            /* eslint-enable no-cond-assign */\r\n          }\r\n\r\n          // Force browsers to behave consistently when non-matching value is set\r\n          if ( !optionSet ) {\r\n            elem.selectedIndex = -1;\r\n          }\r\n          return values;\r\n        }\r\n      }\r\n    };\r\n\r\n\r\n    // Radios and checkboxes getter/setter\r\n    langx.each( [ \"radio\", \"checkbox\" ], function() {\r\n      valHooks[ this ] = {\r\n        set: function( elem, value ) {\r\n          if ( langx.isArray( value ) ) {\r\n            return ( elem.checked = langx.inArray( val(elem), value ) > -1 );\r\n          }\r\n        }\r\n      };\r\n    });\r\n\r\n\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm, name, value) {\r\n        return this.attr(elm, \"aria-\" + name, value);\r\n    }\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return elm.getAttribute ? elm.getAttribute(name) : elm[name];\r\n            }\r\n        } else {\r\n            elm.setAttribute ? elm.setAttribute(name, value) : elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n     *  Read all \"data-*\" attributes from a node\r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    /*\r\n     * xxx\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    } \r\n    /*\r\n     * Remove from the element all items that have not yet been run. \r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Remove a previously-stored piece of data. \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function removeData(elm, names) {\r\n        if (names) {\r\n            if (langx.isString(names)) {\r\n                names = names.split(/\\s+/);\r\n            }\r\n            var store = _store(elm, true);\r\n            names.forEach(function(name) {\r\n                delete store[name];\r\n            });            \r\n        } else {\r\n            cleanData(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * xxx \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Get or set the value of an property for the specified element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * remove Attributes  \r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n\r\n    /*\r\n     * Remove the value of a property for the first element in the set of matched elements or set one or more properties for every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Get the combined text contents of each element in the set of matched elements, including their descendants, or set the text contents of the matched elements.  \r\n     * @param {Object} elm  \r\n     * @param {String} txt\r\n     */\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Get the current value of the first element in the set of matched elements or set the value of every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} value\r\n     */\r\n    function val(elm, value) {\r\n        var hooks = valHooks[ elm.type ] || valHooks[ elm.nodeName.toLowerCase() ];\r\n        if (value === undefined) {\r\n/*\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                if (/input|textarea/i.test(elm.tagName)) {\r\n                  return elm.value;\r\n                }\r\n                return text(elm);\r\n            }\r\n*/\r\n\r\n          if ( hooks &&  \"get\" in hooks &&  ( ret = hooks.get( elm, \"value\" ) ) !== undefined ) {\r\n            return ret;\r\n          }\r\n\r\n          ret = elm.value;\r\n\r\n          // Handle most common string cases\r\n          if ( typeof ret === \"string\" ) {\r\n            return ret.replace( /\\r/g, \"\" );\r\n          }\r\n\r\n          // Handle cases where value is null/undef or number\r\n          return ret == null ? \"\" : ret;\r\n\r\n        } else {\r\n/*          \r\n            if (/input|textarea/i.test(elm.tagName)) {\r\n              elm.value = value;\r\n            } else {\r\n              text(elm,value);\r\n            }\r\n            return this;\r\n*/\r\n          // Treat null/undefined as \"\"; convert numbers to string\r\n          if ( value == null ) {\r\n            value = \"\";\r\n\r\n          } else if ( typeof value === \"number\" ) {\r\n            value += \"\";\r\n\r\n          } else if ( langx.isArray( value ) ) {\r\n            value = langx.map( value, function( value1 ) {\r\n              return value1 == null ? \"\" : value1 + \"\";\r\n            } );\r\n          }\r\n\r\n          // If set returns undefined, fall back to normal setting\r\n          if ( !hooks || !( \"set\" in hooks ) || hooks.set( elm, value, \"value\" ) === undefined ) {\r\n            elm.value = value;\r\n          }\r\n        }      \r\n    }\r\n\r\n\r\n    finder.pseudos.data = function( elem, i, match,dataName ) {\r\n        return !!data( elem, dataName || match[3]);\r\n    };\r\n   \r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n\r\n        attr: attr,\r\n\r\n        cleanData: cleanData,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val,\r\n\r\n        valHooks : valHooks\r\n    });\r\n\r\n    return skylark.attach(\"domx.data\", datax);\r\n});\ndefine('skylark-domx-velm/velm',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-query\"\r\n], function(skylark, langx, noder, finder, $) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n    /*\r\n     * VisualElement is a skylark class type wrapping a visule dom node,\r\n     * provides a number of prototype methods and supports chain calls.\r\n     */\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"_construct\": function(node) {\r\n            if (langx.isString(node)) {\r\n                if (node.charAt(0) === \"<\") {\r\n                    //html\r\n                    node = noder.createFragment(node)[0];\r\n                } else {\r\n                    // id\r\n                    node = document.getElementById(node);\r\n                }\r\n            }\r\n            this._elm = node;\r\n        }\r\n    });\r\n\r\n    VisualElement.prototype.$ = VisualElement.prototype.query = function(selector) {\r\n        return $(selector,this._elm);\r\n    };\r\n\r\n    VisualElement.prototype.elm = function() {\r\n        return this._elm;\r\n    };\r\n\r\n    /*\r\n     * the VisualElement object wrapping document.body\r\n     */\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n    /*\r\n     * Extend VisualElement prototype with wrapping the specified methods.\r\n     * @param {ArrayLike} fn\r\n     * @param {Object} context\r\n     */\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self._elm,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(el);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial: function(name, fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    /*\r\n     * find a dom element matched by the specified selector.\r\n     * @param {String} selector\r\n     */\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"isDocument\",\r\n        \"isInDocument\",\r\n        \"isWindow\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"removeChild\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n\r\n    return skylark.attach(\"domx.velm\", velm);\r\n});\ndefine('skylark-domx-velm/main',[\r\n\t\"./velm\"\r\n],function(velm){\r\n\treturn velm;\r\n});\ndefine('skylark-domx-velm', ['skylark-domx-velm/main'], function (main) { return main; });\n\ndefine('skylark-domx-data/main',[\r\n    \"./data\",\r\n    \"skylark-domx-velm\",\r\n    \"skylark-domx-query\"    \r\n],function(data,velm,$){\r\n    // from ./data\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], data);\r\n\r\n    $.fn.text = $.wraps.wrapper_value(data.text, data, data.text);\r\n\r\n    $.fn.attr = $.wraps.wrapper_name_value(data.attr, data, data.attr);\r\n\r\n    $.fn.removeAttr = $.wraps.wrapper_every_act(data.removeAttr, data);\r\n\r\n    $.fn.prop = $.wraps.wrapper_name_value(data.prop, data, data.prop);\r\n\r\n    $.fn.removeProp = $.wraps.wrapper_every_act(data.removeProp, data);\r\n\r\n    $.fn.data = $.wraps.wrapper_name_value(data.data, data);\r\n\r\n    $.fn.removeData = $.wraps.wrapper_every_act(data.removeData);\r\n\r\n    $.fn.val = $.wraps.wrapper_value(data.val, data, data.val);\r\n\r\n\r\n    return data;\r\n});\ndefine('skylark-domx-data', ['skylark-domx-data/main'], function (main) { return main; });\n\ndefine('skylark-domx-eventer/eventer',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n\r\n    var NativeEventCtors = [\r\n            window[\"CustomEvent\"], // 0 default\r\n            window[\"CompositionEvent\"], // 1\r\n            window[\"DragEvent\"], // 2\r\n            window[\"Event\"], // 3\r\n            window[\"FocusEvent\"], // 4\r\n            window[\"KeyboardEvent\"], // 5\r\n            window[\"MessageEvent\"], // 6\r\n            window[\"MouseEvent\"], // 7\r\n            window[\"MouseScrollEvent\"], // 8\r\n            window[\"MouseWheelEvent\"], // 9\r\n            window[\"MutationEvent\"], // 10\r\n            window[\"ProgressEvent\"], // 11\r\n            window[\"TextEvent\"], // 12\r\n            window[\"TouchEvent\"], // 13\r\n            window[\"UIEvent\"], // 14\r\n            window[\"WheelEvent\"], // 15\r\n            window[\"ClipboardEvent\"] // 16\r\n        ],\r\n        NativeEvents = {\r\n            \"compositionstart\": 1, // CompositionEvent\r\n            \"compositionend\": 1, // CompositionEvent\r\n            \"compositionupdate\": 1, // CompositionEvent\r\n\r\n            \"beforecopy\": 16, // ClipboardEvent\r\n            \"beforecut\": 16, // ClipboardEvent\r\n            \"beforepaste\": 16, // ClipboardEvent\r\n            \"copy\": 16, // ClipboardEvent\r\n            \"cut\": 16, // ClipboardEvent\r\n            \"paste\": 16, // ClipboardEvent\r\n\r\n            \"drag\": 2, // DragEvent\r\n            \"dragend\": 2, // DragEvent\r\n            \"dragenter\": 2, // DragEvent\r\n            \"dragexit\": 2, // DragEvent\r\n            \"dragleave\": 2, // DragEvent\r\n            \"dragover\": 2, // DragEvent\r\n            \"dragstart\": 2, // DragEvent\r\n            \"drop\": 2, // DragEvent\r\n\r\n            \"abort\": 3, // Event\r\n            \"change\": 3, // Event\r\n            \"error\": 3, // Event\r\n            \"selectionchange\": 3, // Event\r\n            \"submit\": 3, // Event\r\n            \"reset\": 3, // Event\r\n\r\n            \"focus\": 4, // FocusEvent\r\n            \"blur\": 4, // FocusEvent\r\n            \"focusin\": 4, // FocusEvent\r\n            \"focusout\": 4, // FocusEvent\r\n\r\n            \"keydown\": 5, // KeyboardEvent\r\n            \"keypress\": 5, // KeyboardEvent\r\n            \"keyup\": 5, // KeyboardEvent\r\n\r\n            \"message\": 6, // MessageEvent\r\n\r\n            \"click\": 7, // MouseEvent\r\n            \"contextmenu\": 7, // MouseEvent\r\n            \"dblclick\": 7, // MouseEvent\r\n            \"mousedown\": 7, // MouseEvent\r\n            \"mouseup\": 7, // MouseEvent\r\n            \"mousemove\": 7, // MouseEvent\r\n            \"mouseover\": 7, // MouseEvent\r\n            \"mouseout\": 7, // MouseEvent\r\n            \"mouseenter\": 7, // MouseEvent\r\n            \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n            \"textInput\": 12, // TextEvent\r\n\r\n            \"touchstart\": 13, // TouchEvent\r\n            \"touchmove\": 13, // TouchEvent\r\n            \"touchend\": 13, // TouchEvent\r\n\r\n            \"load\": 14, // UIEvent\r\n            \"resize\": 14, // UIEvent\r\n            \"select\": 14, // UIEvent\r\n            \"scroll\": 14, // UIEvent\r\n            \"unload\": 14, // UIEvent,\r\n\r\n            \"wheel\": 15 // WheelEvent\r\n        };\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return NativeEventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src, props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy, props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings, function(idx, binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns) === -1) {\r\n                                return;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    /*\r\n                                        if (event in hover) {\r\n                                            var l = self._listener;\r\n                                            self._listener = function(e) {\r\n                                                var related = e.relatedTarget;\r\n                                                if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                                    return l.apply(this, arguments);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                    */\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    /*   \r\n     * Remove an event handler for one or more events from the specified element.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional } selector\r\n     * @param {Function} callback\r\n     */\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach an event handler function for one or more events to the selected elements.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     * @param {Boolean　Optional} one\r\n     */\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach a handler to an event for the elements. The handler is executed at most once per \r\n     * @param {HTMLElement} elm  \r\n     * @param {String} event\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     */\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Prevents propagation and clobbers the default action of the passed event. The same as calling event.preventDefault() and event.stopPropagation(). \r\n     * @param {String} event\r\n     */\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Execute all handlers and behaviors attached to the matched elements for the given event  \r\n     * @param {String} evented\r\n     * @param {String} type\r\n     * @param {Array or PlainObject } args\r\n     */\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /*   \r\n     * Specify a function to execute when the DOM is fully loaded.  \r\n     * @param {Function} callback\r\n     */\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    if (browser.support.transition) {\r\n        specialEvents.transitionEnd = {\r\n//          handle: function (e) {\r\n//            if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\r\n//          },\r\n          bindType: browser.support.transition.end,\r\n          delegateType: browser.support.transition.end\r\n        }        \r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        NativeEvents : NativeEvents,\r\n        \r\n        create: createEvent,\r\n\r\n        keys: keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special: specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    each(NativeEvents,function(name){\r\n        eventer[name] = function(elm,selector,data,callback) {\r\n            if (arguments.length>1) {\r\n                return this.on(elm,name,selector,data,callback);\r\n            } else {\r\n                if (name == \"focus\") {\r\n                    if (elm.focus) {\r\n                        elm.focus();\r\n                    }\r\n                } else if (name == \"blur\") {\r\n                    if (elm.blur) {\r\n                        elm.blur();\r\n                    }\r\n                } else if (name == \"click\") {\r\n                    if (elm.click) {\r\n                        elm.click();\r\n                    }\r\n                } else {\r\n                    this.trigger(elm,name);\r\n                }\r\n\r\n                return this;\r\n            }\r\n        };\r\n    });\r\n\r\n    return skylark.attach(\"domx.eventer\",eventer);\r\n});\ndefine('skylark-domx-eventer/main',[\r\n    \"skylark-langx/langx\",\r\n    \"./eventer\",\r\n    \"skylark-domx-velm\",\r\n    \"skylark-domx-query\"        \r\n],function(langx,eventer,velm,$){\r\n\r\n    var delegateMethodNames = [\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"trigger\"\r\n    ];\r\n\r\n    langx.each(eventer.NativeEvents,function(name){\r\n        delegateMethodNames.push(name);\r\n    });\r\n\r\n    // from ./eventer\r\n    velm.delegate(delegateMethodNames, eventer);\r\n\r\n    langx.each(delegateMethodNames,function(i,name){\r\n        $.fn[name] = $.wraps.wrapper_every_act(eventer[name],eventer);\r\n    });\r\n\r\n\r\n    /*\r\n    $.fn.on = $.wraps.wrapper_every_act(eventer.on, eventer);\r\n\r\n    $.fn.off = $.wraps.wrapper_every_act(eventer.off, eventer);\r\n\r\n    $.fn.trigger = $.wraps.wrapper_every_act(eventer.trigger, eventer);\r\n\r\n    ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n        'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n        'change select keydown keypress keyup error transitionEnd').split(' ').forEach(function(event) {\r\n        $.fn[event] = $.wraps.wrapper_every_act(eventer[event],eventer);\r\n    });\r\n\r\n    $.fn.one = function(event, selector, data, callback) {\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = null;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = null;\r\n        }\r\n\r\n        return this.on(event, selector, data, callback, 1)\r\n    }; \r\n    */\r\n\r\n    $.ready = eventer.ready;\r\n\r\n    return eventer;\r\n});\ndefine('skylark-domx-eventer', ['skylark-domx-eventer/main'], function (main) { return main; });\n\ndefine('skylark-domx-files/files',[\r\n    \"skylark-langx/skylark\"\r\n], function(skylark) {\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','),\r\n            mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]),\r\n            n = bstr.length,\r\n            u8arr = new Uint8Array(n);\r\n        while (n--) {\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], { type: mime });\r\n    }\r\n\r\n\r\n    var files = function() {\r\n        return files;\r\n    };\r\n\r\n    return skylark.attach(\"domx.files\", files);\r\n});\ndefine('skylark-domx-styler/styler',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} value\r\n     */\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n    function disabled(elm, value ) {\r\n        if (arguments.length < 2) {\r\n            return !!this.dom.disabled;\r\n        }\r\n\r\n        elm.disabled = value;\r\n\r\n        return this;\r\n    }\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getStyles(element).getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n    /*\r\n     * Display the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    /*\r\n     * Hide the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function getStyles( elem ) {\r\n\r\n        // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\r\n        // IE throws on elements created in popups\r\n        // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\r\n        var view = elem.ownerDocument.defaultView;\r\n\r\n        if ( !view || !view.opener ) {\r\n            view = window;\r\n        }\r\n\r\n        return view.getComputedStyle( elem);\r\n    }\r\n\r\n\r\n    /*\r\n     * Get the value of a computed style property for the first element in the set of matched elements or set one or more CSS properties for every matched element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} property\r\n     * @param {Any} value\r\n     */\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getStyles(elm)\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(dasherize(property))\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(dasherize(prop)))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Determine whether any of the matched elements are assigned the given class.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    /*\r\n     * Remove a single class, multiple classes, or all classes from each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm, \"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Add or remove one or more classes from the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     * @param {} when\r\n     */\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks: {\r\n\r\n        },\r\n\r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        disabled : disabled,        \r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.attach(\"domx.styler\", styler);\r\n});\ndefine('skylark-domx-styler/main',[\r\n\t\"./styler\",\r\n\t\"skylark-domx-velm\",\r\n\t\"skylark-domx-query\"\t\r\n],function(styler,velm,$){\r\n\t\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n\r\n    // properties\r\n\r\n    var properties = [ 'position', 'left', 'top', 'right', 'bottom', 'width', 'height', 'border', 'borderLeft',\r\n    'borderTop', 'borderRight', 'borderBottom', 'borderColor', 'display', 'overflow', 'margin', 'marginLeft', 'marginTop', 'marginRight', 'marginBottom', 'padding', 'paddingLeft', 'paddingTop', 'paddingRight', 'paddingBottom', 'color',\r\n    'background', 'backgroundColor', 'opacity', 'fontSize', 'fontWeight', 'textAlign', 'textDecoration', 'textTransform', 'cursor', 'zIndex' ];\r\n\r\n    properties.forEach( function ( property ) {\r\n\r\n        var method = property;\r\n\r\n        velm.VisualElement.prototype[method ] = function (value) {\r\n\r\n            this.css( property, value );\r\n\r\n            return this;\r\n\r\n        };\r\n\r\n    });\r\n\r\n\r\n    $.fn.style = $.wraps.wrapper_name_value(styler.css, styler);\r\n\r\n    $.fn.css = $.wraps.wrapper_name_value(styler.css, styler);\r\n\r\n    //hasClass(name)\r\n    $.fn.hasClass = $.wraps.wrapper_some_chk(styler.hasClass, styler);\r\n\r\n    //addClass(name)\r\n    $.fn.addClass = $.wraps.wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className);\r\n\r\n    //removeClass(name)\r\n    $.fn.removeClass = $.wraps.wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className);\r\n\r\n    //toogleClass(name,when)\r\n    $.fn.toggleClass = $.wraps.wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className);\r\n\r\n    $.fn.replaceClass = function(newClass, oldClass) {\r\n        this.removeClass(oldClass);\r\n        this.addClass(newClass);\r\n        return this;\r\n    };\r\n\r\n    $.fn.replaceClass = function(newClass, oldClass) {\r\n        this.removeClass(oldClass);\r\n        this.addClass(newClass);\r\n        return this;\r\n    };\r\n        \r\n\treturn styler;\r\n});\ndefine('skylark-domx-styler', ['skylark-domx-styler/main'], function (main) { return main; });\n\ndefine('skylark-storages-diskfs/diskfs',[\r\n    \"skylark-langx/skylark\"\r\n], function(skylark) {\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','),\r\n            mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]),\r\n            n = bstr.length,\r\n            u8arr = new Uint8Array(n);\r\n        while (n--) {\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], { type: mime });\r\n    }\r\n\r\n\r\n    var diskfs = function() {\r\n        return diskfs;\r\n    };\r\n\r\n    return skylark.attach(\"storages.diskfs\", diskfs);\r\n});\n define('skylark-storages-diskfs/webentry',[\r\n    \"skylark-langx/arrays\",\r\n    \"skylark-langx/Deferred\",\r\n    \"./diskfs\"\r\n],function(arrays,Deferred, diskfs){\r\n    var concat = Array.prototype.concat;\r\n    var webentry = (function() {\r\n        function one(entry, path) {\r\n            var d = new Deferred(),\r\n                onError = function(e) {\r\n                    d.reject(e);\r\n                };\r\n\r\n            path = path || '';\r\n            if (entry.isFile) {\r\n                entry.file(function(file) {\r\n                    file.relativePath = path;\r\n                    d.resolve(file);\r\n                }, onError);\r\n            } else if (entry.isDirectory) {\r\n                var dirReader = entry.createReader();\r\n                dirReader.readEntries(function(entries) {\r\n                    all(\r\n                        entries,\r\n                        path + entry.name + '/'\r\n                    ).then(function(files) {\r\n                        d.resolve(files);\r\n                    }).catch(onError);\r\n                }, onError);\r\n            } else {\r\n                // Return an empy list for file system items\r\n                // other than files or directories:\r\n                d.resolve([]);\r\n            }\r\n            return d.promise;\r\n        }\r\n\r\n        function all(entries, path) {\r\n            return Deferred.all(\r\n                arrays.map(entries, function(entry) {\r\n                    return one(entry, path);\r\n                })\r\n            ).then(function() {\r\n                return concat.apply([], arguments);\r\n            });\r\n        }\r\n\r\n        return {\r\n            one: one,\r\n            all: all\r\n        };\r\n    })();\r\n\r\n    return diskfs.webentry = webentry;\r\n});\n  define('skylark-domx-files/dropzone',[\r\n    \"skylark-langx/arrays\",\r\n    \"skylark-langx/Deferred\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-eventer\",\r\n    \"./files\",\r\n    \"skylark-storages-diskfs/webentry\"\r\n],function(arrays,Deferred, styler, eventer, files, webentry){  /*\r\n     * Make the specified element to could accept HTML5 file drag and drop.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} params\r\n     */\r\n    function dropzone(elm, params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"dropzone\",\r\n            droppedCallback = params.dropped;\r\n\r\n        var enterdCount = 0;\r\n        eventer.on(elm, \"dragenter\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                eventer.stop(e);\r\n                enterdCount++;\r\n                styler.addClass(elm, hoverClass)\r\n            }\r\n        });\r\n\r\n        eventer.on(elm, \"dragover\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                eventer.stop(e);\r\n            }\r\n        });\r\n\r\n        eventer.on(elm, \"dragleave\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                enterdCount--\r\n                if (enterdCount == 0) {\r\n                    styler.removeClass(elm, hoverClass);\r\n                }\r\n            }\r\n        });\r\n\r\n        eventer.on(elm, \"drop\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                styler.removeClass(elm, hoverClass)\r\n                eventer.stop(e);\r\n                if (droppedCallback) {\r\n                    var items = e.dataTransfer.items;\r\n                    if (items && items.length && (items[0].webkitGetAsEntry ||\r\n                            items[0].getAsEntry)) {\r\n                        webentry.all(\r\n                            arrays.map(items, function(item) {\r\n                                if (item.webkitGetAsEntry) {\r\n                                    return item.webkitGetAsEntry();\r\n                                }\r\n                                return item.getAsEntry();\r\n                            })\r\n                        ).then(droppedCallback);\r\n                    } else {\r\n                        droppedCallback(e.dataTransfer.files);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n     return files.dropzone = dropzone;\r\n});\ndefine('skylark-domx-files/pastezone',[\r\n    \"skylark-langx/objects\",\r\n    \"skylark-domx-eventer\",\r\n    \"./files\"\r\n],function(objects, eventer, files){\r\n    function pastezone(elm, params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"pastezone\",\r\n            pastedCallback = params.pasted;\r\n\r\n        eventer.on(elm, \"paste\", function(e) {\r\n            var items = e.originalEvent && e.originalEvent.clipboardData &&\r\n                e.originalEvent.clipboardData.items,\r\n                files = [];\r\n            if (items && items.length) {\r\n                objects.each(items, function(index, item) {\r\n                    var file = item.getAsFile && item.getAsFile();\r\n                    if (file) {\r\n                        files.push(file);\r\n                    }\r\n                });\r\n            }\r\n            if (pastedCallback && files.length) {\r\n                pastedCallback(files);\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    return files.pastezone = pastezone;\r\n\r\n});\r\n\ndefine('skylark-storages-diskfs/select',[\r\n    \"./diskfs\"\r\n],function(diskfs){\r\n    var fileInput,\r\n        fileInputForm,\r\n        fileSelected,\r\n        maxFileSize = 1 / 0;\r\n\r\n    function select(params) {\r\n        params = params || {};\r\n        var directory = params.directory || false,\r\n            multiple = params.multiple || false,\r\n            accept = params.accept || \"\", //'image/gif,image/jpeg,image/jpg,image/png,image/svg'\r\n            title = params.title || \"\",\r\n            fileSelected = params.picked;\r\n        if (!fileInput) {\r\n            var input = fileInput = document.createElement(\"input\");\r\n\r\n            function selectFiles(pickedFiles) {\r\n                for (var i = pickedFiles.length; i--;) {\r\n                    if (pickedFiles[i].size > maxFileSize) {\r\n                        pickedFiles.splice(i, 1);\r\n                    }\r\n                }\r\n                fileSelected(pickedFiles);\r\n            }\r\n\r\n            input.type = \"file\";\r\n            input.style.position = \"fixed\";\r\n            input.style.left = 0;\r\n            input.style.top = 0;\r\n            input.style.opacity = .001;\r\n            document.body.appendChild(input);\r\n\r\n            input.onchange = function(e) {\r\n                var entries = e.target.webkitEntries || e.target.entries;\r\n\r\n                if (entries && entries.length) {\r\n                    webentry.all(entries).then(function(files) {\r\n                        selectFiles(files);\r\n                    });\r\n                } else {\r\n                    selectFiles(Array.prototype.slice.call(e.target.files));\r\n                }\r\n                // reset to \"\", so selecting the same file next time still trigger the change handler\r\n                input.value = \"\";\r\n            };\r\n        }\r\n        fileInput.multiple = multiple;\r\n        fileInput.accept = accept;\r\n        fileInput.title = title;\r\n\r\n        fileInput.webkitdirectory = directory;\r\n        fileInput.click();\r\n    }\r\n\r\n    return diskfs.select = select;\r\n});\r\n\r\n\ndefine('skylark-domx-files/picker',[\r\n    \"skylark-langx/objects\",\r\n    \"skylark-domx-eventer\",\r\n    \"./files\",\r\n    \"skylark-storages-diskfs/select\"\r\n],function(objects, eventer, files, select){\r\n    /*\r\n     * Make the specified element to pop-up the file selection dialog box when clicked , and read the contents the files selected from client file system by user.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} params\r\n     */\r\n    function picker(elm, params) {\r\n        eventer.on(elm, \"click\", function(e) {\r\n            e.preventDefault();\r\n            select(params);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    return files.picker = picker;\r\n\r\n});\r\n\r\n\r\n\ndefine('skylark-domx-files/main',[\r\n\t\"./files\",\r\n\t\"skylark-domx-velm\",\r\n\t\"skylark-domx-query\",\r\n\t\"./dropzone\",\r\n\t\"./pastezone\",\r\n\t\"./picker\"\r\n],function(files,velm,$){\r\n\tvelm.delegate([\r\n\t\t\"dropzone\",\r\n\t\t\"pastezone\",\r\n\t\t\"picker\"\r\n\t],files);\r\n\r\n    $.fn.pastezone = $.wraps.wrapper_every_act(files.pastezone, files);\r\n    $.fn.dropzone = $.wraps.wrapper_every_act(files.dropzone, files);\r\n    $.fn.picker = $.wraps.wrapper_every_act(files.picker, files);\r\n\r\n\treturn files;\r\n});\ndefine('skylark-domx-files', ['skylark-domx-files/main'], function (main) { return main; });\n\ndefine('skylark-domx-geom/geom',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-styler\"\r\n], function(skylark, langx, noder, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n    function scrollbarWidth() {\r\n        if (cachedScrollbarWidth !== undefined) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment(\"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\")[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body, div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n\r\n        styler.css(div, \"overflow\", \"scroll\");\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if (w1 === w2) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return (cachedScrollbarWidth = w1 - w2);\r\n    }\r\n    /*\r\n     * Get the widths of each border of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function borderExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth, elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    /*\r\n     * Get or set the viewport position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the viewport rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the height of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the size of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get or set the width of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the rect of the specified element content box.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLDocument} doc\r\n     */\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each margin of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function marginExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function marginRect(elm) {\r\n        var obj = relativeRect(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            left: obj.left,\r\n            top: obj.top,\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n\r\n    function marginSize(elm) {\r\n        var obj = size(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each padding of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function paddingExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the position of the specified element border box , relative to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the rect of the specified element border box , relatived to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Scroll the specified element into view.\r\n     * @param {HTMLElement} elm\r\n     * @param {} align\r\n     */\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get or set the current horizontal position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollLeft(elm, value) {\r\n        if (elm.nodeType === 9) {\r\n            elm = elm.defaultView;\r\n        }\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or the current vertical position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollTop(elm, value) {\r\n        if (elm.nodeType === 9) {\r\n            elm = elm.defaultView;\r\n        }\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject}dimension\r\n     */\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect: marginRect,\r\n\r\n        marginSize: marginSize,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth: scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    ( function() {\r\n        var max = Math.max,\r\n            abs = Math.abs,\r\n            rhorizontal = /left|center|right/,\r\n            rvertical = /top|center|bottom/,\r\n            roffset = /[\\+\\-]\\d+(\\.[\\d]+)?%?/,\r\n            rposition = /^\\w+/,\r\n            rpercent = /%$/;\r\n\r\n        function getOffsets( offsets, width, height ) {\r\n            return [\r\n                parseFloat( offsets[ 0 ] ) * ( rpercent.test( offsets[ 0 ] ) ? width / 100 : 1 ),\r\n                parseFloat( offsets[ 1 ] ) * ( rpercent.test( offsets[ 1 ] ) ? height / 100 : 1 )\r\n            ];\r\n        }\r\n\r\n        function parseCss( element, property ) {\r\n            return parseInt( styler.css( element, property ), 10 ) || 0;\r\n        }\r\n\r\n        function getDimensions( raw ) {\r\n            if ( raw.nodeType === 9 ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { top: 0, left: 0 }\r\n                };\r\n            }\r\n            if ( noder.isWindow( raw ) ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { \r\n                        top: scrollTop(raw), \r\n                        left: scrollLeft(raw) \r\n                    }\r\n                };\r\n            }\r\n            if ( raw.preventDefault ) {\r\n                return {\r\n                    size : {\r\n                        width: 0,\r\n                        height: 0\r\n                    },\r\n                    offset: { \r\n                        top: raw.pageY, \r\n                        left: raw.pageX \r\n                    }\r\n                };\r\n            }\r\n            return {\r\n                size: size(raw),\r\n                offset: pagePosition(raw)\r\n            };\r\n        }\r\n\r\n        function getScrollInfo( within ) {\r\n            var overflowX = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-x\" ),\r\n                overflowY = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-y\" ),\r\n                hasOverflowX = overflowX === \"scroll\" ||\r\n                    ( overflowX === \"auto\" && within.width < scrollWidth(within.element) ),\r\n                hasOverflowY = overflowY === \"scroll\" ||\r\n                    ( overflowY === \"auto\" && within.height < scrollHeight(within.element));\r\n            return {\r\n                width: hasOverflowY ? scrollbarWidth() : 0,\r\n                height: hasOverflowX ? scrollbarWidth() : 0\r\n            };\r\n        }\r\n\r\n        function getWithinInfo( element ) {\r\n            var withinElement = element || window,\r\n                isWindow = noder.isWindow( withinElement),\r\n                isDocument = !!withinElement && withinElement.nodeType === 9,\r\n                hasOffset = !isWindow && !isDocument,\r\n                msize = marginSize(withinElement);\r\n            return {\r\n                element: withinElement,\r\n                isWindow: isWindow,\r\n                isDocument: isDocument,\r\n                offset: hasOffset ? pagePosition(element) : { left: 0, top: 0 },\r\n                scrollLeft: scrollLeft(withinElement),\r\n                scrollTop: scrollTop(withinElement),\r\n                width: msize.width,\r\n                height: msize.height\r\n            };\r\n        }\r\n\r\n        function posit(elm,options ) {\r\n            // Make a copy, we don't want to modify arguments\r\n            options = langx.extend( {}, options );\r\n\r\n            var atOffset, targetWidth, targetHeight, targetOffset, basePosition, dimensions,\r\n                target = options.of,\r\n                within = getWithinInfo( options.within ),\r\n                scrollInfo = getScrollInfo( within ),\r\n                collision = ( options.collision || \"flip\" ).split( \" \" ),\r\n                offsets = {};\r\n\r\n            dimensions = getDimensions( target );\r\n            if ( target.preventDefault ) {\r\n\r\n                // Force left top to allow flipping\r\n                options.at = \"left top\";\r\n            }\r\n            targetWidth = dimensions.size.width;\r\n            targetHeight = dimensions.size.height;\r\n            targetOffset = dimensions.offset;\r\n\r\n            // Clone to reuse original targetOffset later\r\n            basePosition = langx.extend( {}, targetOffset );\r\n\r\n            // Force my and at to have valid horizontal and vertical positions\r\n            // if a value is missing or invalid, it will be converted to center\r\n            langx.each( [ \"my\", \"at\" ], function() {\r\n                var pos = ( options[ this ] || \"\" ).split( \" \" ),\r\n                    horizontalOffset,\r\n                    verticalOffset;\r\n\r\n                if ( pos.length === 1 ) {\r\n                    pos = rhorizontal.test( pos[ 0 ] ) ?\r\n                        pos.concat( [ \"center\" ] ) :\r\n                        rvertical.test( pos[ 0 ] ) ?\r\n                            [ \"center\" ].concat( pos ) :\r\n                            [ \"center\", \"center\" ];\r\n                }\r\n                pos[ 0 ] = rhorizontal.test( pos[ 0 ] ) ? pos[ 0 ] : \"center\";\r\n                pos[ 1 ] = rvertical.test( pos[ 1 ] ) ? pos[ 1 ] : \"center\";\r\n\r\n                // Calculate offsets\r\n                horizontalOffset = roffset.exec( pos[ 0 ] );\r\n                verticalOffset = roffset.exec( pos[ 1 ] );\r\n                offsets[ this ] = [\r\n                    horizontalOffset ? horizontalOffset[ 0 ] : 0,\r\n                    verticalOffset ? verticalOffset[ 0 ] : 0\r\n                ];\r\n\r\n                // Reduce to just the positions without the offsets\r\n                options[ this ] = [\r\n                    rposition.exec( pos[ 0 ] )[ 0 ],\r\n                    rposition.exec( pos[ 1 ] )[ 0 ]\r\n                ];\r\n            } );\r\n\r\n            // Normalize collision option\r\n            if ( collision.length === 1 ) {\r\n                collision[ 1 ] = collision[ 0 ];\r\n            }\r\n\r\n            if ( options.at[ 0 ] === \"right\" ) {\r\n                basePosition.left += targetWidth;\r\n            } else if ( options.at[ 0 ] === \"center\" ) {\r\n                basePosition.left += targetWidth / 2;\r\n            }\r\n\r\n            if ( options.at[ 1 ] === \"bottom\" ) {\r\n                basePosition.top += targetHeight;\r\n            } else if ( options.at[ 1 ] === \"center\" ) {\r\n                basePosition.top += targetHeight / 2;\r\n            }\r\n\r\n            atOffset = getOffsets( offsets.at, targetWidth, targetHeight );\r\n            basePosition.left += atOffset[ 0 ];\r\n            basePosition.top += atOffset[ 1 ];\r\n\r\n            return ( function(elem) {\r\n                var collisionPosition, using,\r\n                    msize = marginSize(elem),\r\n                    elemWidth = msize.width,\r\n                    elemHeight = msize.height,\r\n                    marginLeft = parseCss( elem, \"marginLeft\" ),\r\n                    marginTop = parseCss( elem, \"marginTop\" ),\r\n                    collisionWidth = elemWidth + marginLeft + parseCss( elem, \"marginRight\" ) +\r\n                        scrollInfo.width,\r\n                    collisionHeight = elemHeight + marginTop + parseCss( elem, \"marginBottom\" ) +\r\n                        scrollInfo.height,\r\n                    position = langx.extend( {}, basePosition ),\r\n                    myOffset = getOffsets( offsets.my, msize.width, msize.height);\r\n\r\n                if ( options.my[ 0 ] === \"right\" ) {\r\n                    position.left -= elemWidth;\r\n                } else if ( options.my[ 0 ] === \"center\" ) {\r\n                    position.left -= elemWidth / 2;\r\n                }\r\n\r\n                if ( options.my[ 1 ] === \"bottom\" ) {\r\n                    position.top -= elemHeight;\r\n                } else if ( options.my[ 1 ] === \"center\" ) {\r\n                    position.top -= elemHeight / 2;\r\n                }\r\n\r\n                position.left += myOffset[ 0 ];\r\n                position.top += myOffset[ 1 ];\r\n\r\n                collisionPosition = {\r\n                    marginLeft: marginLeft,\r\n                    marginTop: marginTop\r\n                };\r\n\r\n                langx.each( [ \"left\", \"top\" ], function( i, dir ) {\r\n                    if ( positions[ collision[ i ] ] ) {\r\n                        positions[ collision[ i ] ][ dir ]( position, {\r\n                            targetWidth: targetWidth,\r\n                            targetHeight: targetHeight,\r\n                            elemWidth: elemWidth,\r\n                            elemHeight: elemHeight,\r\n                            collisionPosition: collisionPosition,\r\n                            collisionWidth: collisionWidth,\r\n                            collisionHeight: collisionHeight,\r\n                            offset: [ atOffset[ 0 ] + myOffset[ 0 ], atOffset [ 1 ] + myOffset[ 1 ] ],\r\n                            my: options.my,\r\n                            at: options.at,\r\n                            within: within,\r\n                            elem: elem\r\n                        } );\r\n                    }\r\n                } );\r\n\r\n                if ( options.using ) {\r\n\r\n                    // Adds feedback as second argument to using callback, if present\r\n                    using = function( props ) {\r\n                        var left = targetOffset.left - position.left,\r\n                            right = left + targetWidth - elemWidth,\r\n                            top = targetOffset.top - position.top,\r\n                            bottom = top + targetHeight - elemHeight,\r\n                            feedback = {\r\n                                target: {\r\n                                    element: target,\r\n                                    left: targetOffset.left,\r\n                                    top: targetOffset.top,\r\n                                    width: targetWidth,\r\n                                    height: targetHeight\r\n                                },\r\n                                element: {\r\n                                    element: elem,\r\n                                    left: position.left,\r\n                                    top: position.top,\r\n                                    width: elemWidth,\r\n                                    height: elemHeight\r\n                                },\r\n                                horizontal: right < 0 ? \"left\" : left > 0 ? \"right\" : \"center\",\r\n                                vertical: bottom < 0 ? \"top\" : top > 0 ? \"bottom\" : \"middle\"\r\n                            };\r\n                        if ( targetWidth < elemWidth && abs( left + right ) < targetWidth ) {\r\n                            feedback.horizontal = \"center\";\r\n                        }\r\n                        if ( targetHeight < elemHeight && abs( top + bottom ) < targetHeight ) {\r\n                            feedback.vertical = \"middle\";\r\n                        }\r\n                        if ( max( abs( left ), abs( right ) ) > max( abs( top ), abs( bottom ) ) ) {\r\n                            feedback.important = \"horizontal\";\r\n                        } else {\r\n                            feedback.important = \"vertical\";\r\n                        }\r\n                        options.using.call( this, props, feedback );\r\n                    };\r\n                }\r\n\r\n                pagePosition(elem, langx.extend( position, { using: using } ));\r\n            })(elm);\r\n        }\r\n\r\n        var positions = {\r\n            fit: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        outerWidth = within.width,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = withinOffset - collisionPosLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - withinOffset,\r\n                        newOverRight;\r\n\r\n                    // Element is wider than within\r\n                    if ( data.collisionWidth > outerWidth ) {\r\n\r\n                        // Element is initially over the left side of within\r\n                        if ( overLeft > 0 && overRight <= 0 ) {\r\n                            newOverRight = position.left + overLeft + data.collisionWidth - outerWidth -\r\n                                withinOffset;\r\n                            position.left += overLeft - newOverRight;\r\n\r\n                        // Element is initially over right side of within\r\n                        } else if ( overRight > 0 && overLeft <= 0 ) {\r\n                            position.left = withinOffset;\r\n\r\n                        // Element is initially over both left and right sides of within\r\n                        } else {\r\n                            if ( overLeft > overRight ) {\r\n                                position.left = withinOffset + outerWidth - data.collisionWidth;\r\n                            } else {\r\n                                position.left = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far left -> align with left edge\r\n                    } else if ( overLeft > 0 ) {\r\n                        position.left += overLeft;\r\n\r\n                    // Too far right -> align with right edge\r\n                    } else if ( overRight > 0 ) {\r\n                        position.left -= overRight;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.left = max( position.left - collisionPosLeft, position.left );\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        outerHeight = data.within.height,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = withinOffset - collisionPosTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - withinOffset,\r\n                        newOverBottom;\r\n\r\n                    // Element is taller than within\r\n                    if ( data.collisionHeight > outerHeight ) {\r\n\r\n                        // Element is initially over the top of within\r\n                        if ( overTop > 0 && overBottom <= 0 ) {\r\n                            newOverBottom = position.top + overTop + data.collisionHeight - outerHeight -\r\n                                withinOffset;\r\n                            position.top += overTop - newOverBottom;\r\n\r\n                        // Element is initially over bottom of within\r\n                        } else if ( overBottom > 0 && overTop <= 0 ) {\r\n                            position.top = withinOffset;\r\n\r\n                        // Element is initially over both top and bottom of within\r\n                        } else {\r\n                            if ( overTop > overBottom ) {\r\n                                position.top = withinOffset + outerHeight - data.collisionHeight;\r\n                            } else {\r\n                                position.top = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far up -> align with top\r\n                    } else if ( overTop > 0 ) {\r\n                        position.top += overTop;\r\n\r\n                    // Too far down -> align with bottom edge\r\n                    } else if ( overBottom > 0 ) {\r\n                        position.top -= overBottom;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.top = max( position.top - collisionPosTop, position.top );\r\n                    }\r\n                }\r\n            },\r\n            flip: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.left + within.scrollLeft,\r\n                        outerWidth = within.width,\r\n                        offsetLeft = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = collisionPosLeft - offsetLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - offsetLeft,\r\n                        myOffset = data.my[ 0 ] === \"left\" ?\r\n                            -data.elemWidth :\r\n                            data.my[ 0 ] === \"right\" ?\r\n                                data.elemWidth :\r\n                                0,\r\n                        atOffset = data.at[ 0 ] === \"left\" ?\r\n                            data.targetWidth :\r\n                            data.at[ 0 ] === \"right\" ?\r\n                                -data.targetWidth :\r\n                                0,\r\n                        offset = -2 * data.offset[ 0 ],\r\n                        newOverRight,\r\n                        newOverLeft;\r\n\r\n                    if ( overLeft < 0 ) {\r\n                        newOverRight = position.left + myOffset + atOffset + offset + data.collisionWidth -\r\n                            outerWidth - withinOffset;\r\n                        if ( newOverRight < 0 || newOverRight < abs( overLeft ) ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overRight > 0 ) {\r\n                        newOverLeft = position.left - data.collisionPosition.marginLeft + myOffset +\r\n                            atOffset + offset - offsetLeft;\r\n                        if ( newOverLeft > 0 || abs( newOverLeft ) < overRight ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.top + within.scrollTop,\r\n                        outerHeight = within.height,\r\n                        offsetTop = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = collisionPosTop - offsetTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - offsetTop,\r\n                        top = data.my[ 1 ] === \"top\",\r\n                        myOffset = top ?\r\n                            -data.elemHeight :\r\n                            data.my[ 1 ] === \"bottom\" ?\r\n                                data.elemHeight :\r\n                                0,\r\n                        atOffset = data.at[ 1 ] === \"top\" ?\r\n                            data.targetHeight :\r\n                            data.at[ 1 ] === \"bottom\" ?\r\n                                -data.targetHeight :\r\n                                0,\r\n                        offset = -2 * data.offset[ 1 ],\r\n                        newOverTop,\r\n                        newOverBottom;\r\n                    if ( overTop < 0 ) {\r\n                        newOverBottom = position.top + myOffset + atOffset + offset + data.collisionHeight -\r\n                            outerHeight - withinOffset;\r\n                        if ( newOverBottom < 0 || newOverBottom < abs( overTop ) ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overBottom > 0 ) {\r\n                        newOverTop = position.top - data.collisionPosition.marginTop + myOffset + atOffset +\r\n                            offset - offsetTop;\r\n                        if ( newOverTop > 0 || abs( newOverTop ) < overBottom ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            flipfit: {\r\n                left: function() {\r\n                    positions.flip.left.apply( this, arguments );\r\n                    positions.fit.left.apply( this, arguments );\r\n                },\r\n                top: function() {\r\n                    positions.flip.top.apply( this, arguments );\r\n                    positions.fit.top.apply( this, arguments );\r\n                }\r\n            }\r\n        };\r\n\r\n        geom.posit = posit;\r\n    })();\r\n\r\n    return skylark.attach(\"domx.geom\", geom);\r\n});\ndefine('skylark-domx-geom/main',[\r\n    \"skylark-langx/langx\",\r\n    \"./geom\",\r\n    \"skylark-domx-velm\",\r\n    \"skylark-domx-query\"        \r\n],function(langx,geom,velm,$){\r\n   // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    $.fn.offset = $.wraps.wrapper_value(geom.pagePosition, geom, geom.pagePosition);\r\n\r\n    $.fn.scrollTop = $.wraps.wrapper_value(geom.scrollTop, geom);\r\n\r\n    $.fn.scrollLeft = $.wraps.wrapper_value(geom.scrollLeft, geom);\r\n\r\n    $.fn.position =  function(options) {\r\n        if (!this.length) {\r\n            return this;\r\n        }\r\n\r\n        if (options) {\r\n            if (options.of && options.of.length) {\r\n                options = langx.clone(options);\r\n                options.of = options.of[0];\r\n            }\r\n            return this.each( function() {\r\n                geom.posit(this,options);\r\n            });\r\n        } else {\r\n            var elem = this[0];\r\n\r\n            return geom.relativePosition(elem);\r\n\r\n        }             \r\n    };\r\n\r\n    $.fn.offsetParent = $.wraps.wrapper_map(geom.offsetParent, geom);\r\n\r\n\r\n    $.fn.size = $.wraps.wrapper_value(geom.size, geom);\r\n\r\n    $.fn.width = $.wraps.wrapper_value(geom.width, geom, geom.width);\r\n\r\n    $.fn.height = $.wraps.wrapper_value(geom.height, geom, geom.height);\r\n\r\n    $.fn.clientSize = $.wraps.wrapper_value(geom.clientSize, geom.clientSize);\r\n    \r\n    ['width', 'height'].forEach(function(dimension) {\r\n        var offset, Dimension = dimension.replace(/./, function(m) {\r\n            return m[0].toUpperCase()\r\n        });\r\n\r\n        $.fn['outer' + Dimension] = function(margin, value) {\r\n            if (arguments.length) {\r\n                if (typeof margin !== 'boolean') {\r\n                    value = margin;\r\n                    margin = false;\r\n                }\r\n            } else {\r\n                margin = false;\r\n                value = undefined;\r\n            }\r\n\r\n            if (value === undefined) {\r\n                var el = this[0];\r\n                if (!el) {\r\n                    return undefined;\r\n                }\r\n                var cb = geom.size(el);\r\n                if (margin) {\r\n                    var me = geom.marginExtents(el);\r\n                    cb.width = cb.width + me.left + me.right;\r\n                    cb.height = cb.height + me.top + me.bottom;\r\n                }\r\n                return dimension === \"width\" ? cb.width : cb.height;\r\n            } else {\r\n                return this.each(function(idx, el) {\r\n                    var mb = {};\r\n                    var me = geom.marginExtents(el);\r\n                    if (dimension === \"width\") {\r\n                        mb.width = value;\r\n                        if (margin) {\r\n                            mb.width = mb.width - me.left - me.right\r\n                        }\r\n                    } else {\r\n                        mb.height = value;\r\n                        if (margin) {\r\n                            mb.height = mb.height - me.top - me.bottom;\r\n                        }\r\n                    }\r\n                    geom.size(el, mb);\r\n                })\r\n\r\n            }\r\n        };\r\n    })\r\n\r\n    $.fn.innerWidth = $.wraps.wrapper_value(geom.clientWidth, geom, geom.clientWidth);\r\n\r\n    $.fn.innerHeight = $.wraps.wrapper_value(geom.clientHeight, geom, geom.clientHeight);\r\n\r\n    return geom;\r\n});\ndefine('skylark-domx-geom', ['skylark-domx-geom/main'], function (main) { return main; });\n\ndefine('skylark-domx-fx/fx',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-eventer\"\r\n], function(skylark, langx, browser, noder, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    /*   \r\n     * Perform a custom animation of a set of CSS properties.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} properties\r\n     * @param {String} ease\r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     * @param {Number or String} delay\r\n     */\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false,\r\n            resetClipAuto = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                var v = properties[key];\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + v + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    if (key == \"clip\" && langx.isPlainObject(v)) {\r\n                        cssValues[key] = \"rect(\" + v.top+\"px,\"+ v.right +\"px,\"+ v.bottom +\"px,\"+ v.left+\"px)\";\r\n                        if (styler.css(elm,\"clip\") == \"auto\") {\r\n                            var size = geom.size(elm);\r\n                            styler.css(elm,\"clip\",\"rect(\"+\"0px,\"+ size.width +\"px,\"+ size.height +\"px,\"+\"0px)\");  \r\n                            resetClipAuto = true;\r\n                        }\r\n\r\n                    } else {\r\n                        cssValues[key] = v;\r\n                    }\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            if (resetClipAuto) {\r\n //               styler.css(elm,\"clip\",\"auto\");\r\n            }\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Hide an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Set the vertical position of the scroll bar for an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} pos\r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Adjust the opacity of an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Number or String} opacity\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display an element by fading them to opaque.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element by fading them to transparent.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            opacity = styler.css(elm,\"opacity\"),\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.css(elm,\"opacity\",opacity);\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element by animating its opacity.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} ceasing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideDown(elm, duration, callback) {\r\n\r\n        // get the element position to restore it then\r\n        var position = styler.css(elm, 'position');\r\n\r\n        // show element if it is hidden\r\n        show(elm);\r\n\r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm, {\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n\r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm, 'margin-top');\r\n        var marginBottom = styler.css(elm, 'margin-bottom');\r\n        var paddingTop = styler.css(elm, 'padding-top');\r\n        var paddingBottom = styler.css(elm, 'padding-bottom');\r\n        var height = styler.css(elm, 'height');\r\n\r\n        // set initial css for animation\r\n        styler.css(elm, {\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n\r\n        // animate to gotten height, margin and padding\r\n        animate(elm, {\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration: duration,\r\n            complete: function() {\r\n                if (callback) {\r\n                    callback.apply(elm);\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideUp(elm, duration, callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n\r\n            // get the element position to restore it then\r\n            var position = styler.css(elm, 'position');\r\n\r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm, 'height');\r\n            var marginTop = styler.css(elm, 'margin-top');\r\n            var marginBottom = styler.css(elm, 'margin-bottom');\r\n            var paddingTop = styler.css(elm, 'padding-top');\r\n            var paddingBottom = styler.css(elm, 'padding-bottom');\r\n\r\n            // set initial css for animation\r\n            styler.css(elm, {\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n\r\n            // animate element height, margin and padding to zero\r\n            animate(elm, {\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, {\r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function() {\r\n                    hide(elm);\r\n                    styler.css(elm, {\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display or hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideToggle(elm, duration, callback) {\r\n\r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm, duration, callback);\r\n        }\r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm, duration, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function emulateTransitionEnd(elm,duration) {\r\n        var called = false;\r\n        eventer.one(elm,'transitionEnd', function () { \r\n            called = true;\r\n        })\r\n        var callback = function () { \r\n            if (!called) {\r\n                eventer.trigger(elm,browser.support.transition.end) \r\n            }\r\n        };\r\n        setTimeout(callback, duration);\r\n        \r\n        return this;\r\n    } \r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     * @param {Node} params\r\n     */\r\n    function overlay(elm, params) {\r\n        var overlayDiv = noder.createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n    \r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {HTMLElement} elm\r\n     * @param {Node} params\r\n     */\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n\r\n            throbber = noder.createElement(\"div\", {\r\n                \"class\": params.className || \"throbber\"\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                \"class\": 'overlay fade'\r\n            }),\r\n            throb = noder.createElement(\"div\", {\r\n                \"class\": \"throb\"\r\n            }),\r\n            textNode = noder.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    noder.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        if (params.style) {\r\n            styler.css(throbber,params.style);\r\n        }\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate,\r\n        emulateTransitionEnd,\r\n        fadeIn,\r\n        fadeOut,\r\n        fadeTo,\r\n        fadeToggle,\r\n        hide,\r\n        scrollToTop,\r\n\r\n        slideDown,\r\n        slideToggle,\r\n        slideUp,\r\n        show,\r\n        throb,\r\n        toggle\r\n    });\r\n\r\n    return skylark.attach(\"domx.fx\", fx);\r\n});\ndefine('skylark-domx-fx/main',[\r\n\t\"./fx\",\r\n\t\"skylark-domx-velm\",\r\n\t\"skylark-domx-query\"\t\r\n],function(fx,velm,$){\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"emulateTransitionEnd\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"slideDown\",\r\n        \"slideToggle\",\r\n        \"slideUp\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n    $.fn.hide =  $.wraps.wrapper_every_act(fx.hide, fx);\r\n\r\n    $.fn.animate = $.wraps.wrapper_every_act(fx.animate, fx);\r\n    $.fn.emulateTransitionEnd = $.wraps.wrapper_every_act(fx.emulateTransitionEnd, fx);\r\n\r\n    $.fn.show = $.wraps.wrapper_every_act(fx.show, fx);\r\n    $.fn.hide = $.wraps.wrapper_every_act(fx.hide, fx);\r\n    $.fn.toogle = $.wraps.wrapper_every_act(fx.toogle, fx);\r\n    $.fn.fadeTo = $.wraps.wrapper_every_act(fx.fadeTo, fx);\r\n    $.fn.fadeIn = $.wraps.wrapper_every_act(fx.fadeIn, fx);\r\n    $.fn.fadeOut = $.wraps.wrapper_every_act(fx.fadeOut, fx);\r\n    $.fn.fadeToggle = $.wraps.wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n    $.fn.slideDown = $.wraps.wrapper_every_act(fx.slideDown, fx);\r\n    $.fn.slideToggle = $.wraps.wrapper_every_act(fx.slideToggle, fx);\r\n    $.fn.slideUp = $.wraps.wrapper_every_act(fx.slideUp, fx);\r\n\r\n\treturn fx;\r\n});\ndefine('skylark-domx-fx', ['skylark-domx-fx/main'], function (main) { return main; });\n\ndefine('skylark-domx-plugins/plugins',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-fx\",\r\n    \"skylark-domx-query\",\r\n    \"skylark-domx-velm\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx, $, elmx) {\r\n    \"use strict\";\r\n\r\n    var slice = Array.prototype.slice,\r\n        concat = Array.prototype.concat,\r\n        pluginKlasses = {},\r\n        shortcuts = {};\r\n\r\n    /*\r\n     * Create or get or destory a plugin instance assocated with the element.\r\n     */\r\n    function instantiate(elm,pluginName,options) {\r\n        var pair = pluginName.split(\":\"),\r\n            instanceDataName = pair[1];\r\n        pluginName = pair[0];\r\n\r\n        if (!instanceDataName) {\r\n            instanceDataName = pluginName;\r\n        }\r\n\r\n        var pluginInstance = datax.data( elm, instanceDataName );\r\n\r\n        if (options === \"instance\") {\r\n            return pluginInstance;\r\n        } else if (options === \"destroy\") {\r\n            if (!pluginInstance) {\r\n                throw new Error (\"The plugin instance is not existed\");\r\n            }\r\n            pluginInstance.destroy();\r\n            datax.removeData( elm, pluginName);\r\n            pluginInstance = undefined;\r\n        } else {\r\n            if (!pluginInstance) {\r\n                if (options !== undefined && typeof options !== \"object\") {\r\n                    throw new Error (\"The options must be a plain object\");\r\n                }\r\n                var pluginKlass = pluginKlasses[pluginName]; \r\n                pluginInstance = new pluginKlass(elm,options);\r\n                datax.data( elm, instanceDataName,pluginInstance );\r\n            } else if (options) {\r\n                pluginInstance.reset(options);\r\n            }\r\n        }\r\n\r\n        return pluginInstance;\r\n    }\r\n\r\n\r\n    function shortcutter(pluginName,extfn) {\r\n       /*\r\n        * Create or get or destory a plugin instance assocated with the element,\r\n        * and also you can execute the plugin method directory;\r\n        */\r\n        return function (elm,options) {\r\n            var  plugin = instantiate(elm, pluginName,\"instance\");\r\n            if ( options === \"instance\" ) {\r\n              return plugin || null;\r\n            }\r\n\r\n            if (!plugin) {\r\n                plugin = instantiate(elm, pluginName,typeof options == 'object' && options || {});\r\n                if (typeof options != \"string\") {\r\n                  return this;\r\n                }\r\n            } \r\n            if (options) {\r\n                var args = slice.call(arguments,1); //2\r\n                if (extfn) {\r\n                    return extfn.apply(plugin,args);\r\n                } else {\r\n                    if (typeof options == 'string') {\r\n                        var methodName = options;\r\n\r\n                        if ( !plugin ) {\r\n                            throw new Error( \"cannot call methods on \" + pluginName +\r\n                                \" prior to initialization; \" +\r\n                                \"attempted to call method '\" + methodName + \"'\" );\r\n                        }\r\n\r\n                        if ( !langx.isFunction( plugin[ methodName ] ) || methodName.charAt( 0 ) === \"_\" ) {\r\n                            throw new Error( \"no such method '\" + methodName + \"' for \" + pluginName +\r\n                                \" plugin instance\" );\r\n                        }\r\n\r\n                        var ret = plugin[methodName].apply(plugin,args);\r\n                        if (ret == plugin) {\r\n                          ret = undefined;\r\n                        }\r\n\r\n                        return ret;\r\n                    }                \r\n                }                \r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Register a plugin type\r\n     */\r\n    function register( pluginKlass,shortcutName,instanceDataName,extfn) {\r\n        var pluginName = pluginKlass.prototype.pluginName;\r\n        \r\n        pluginKlasses[pluginName] = pluginKlass;\r\n\r\n        if (shortcutName) {\r\n            if (instanceDataName && langx.isFunction(instanceDataName)) {\r\n                extfn = instanceDataName;\r\n                instanceDataName = null;\r\n            } \r\n            if (instanceDataName) {\r\n                pluginName = pluginName + \":\" + instanceDataName;\r\n            }\r\n\r\n            var shortcut = shortcuts[shortcutName] = shortcutter(pluginName,extfn);\r\n                \r\n            $.fn[shortcutName] = function(options) {\r\n                var returnValue = this;\r\n\r\n                if ( !this.length && options === \"instance\" ) {\r\n                  returnValue = undefined;\r\n                } else {\r\n                  var args = slice.call(arguments);\r\n                  this.each(function () {\r\n                    var args2 = slice.call(args);\r\n                    args2.unshift(this);\r\n                    var  ret  = shortcut.apply(undefined,args2);\r\n                    if (ret !== undefined) {\r\n                        returnValue = ret;\r\n                    }\r\n                  });\r\n                }\r\n\r\n                return returnValue;\r\n            };\r\n\r\n            elmx.partial(shortcutName,function(options) {\r\n                var  ret  = shortcut(this._elm,options);\r\n                if (ret === undefined) {\r\n                    ret = this;\r\n                }\r\n                return ret;\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n \r\n    var Plugin =   langx.Evented.inherit({\r\n        klassName: \"Plugin\",\r\n\r\n        _construct : function(elm,options) {\r\n           this._elm = elm;\r\n           this._initOptions(options);\r\n        },\r\n\r\n        _initOptions : function(options) {\r\n          var ctor = this.constructor,\r\n              cache = ctor.cache = ctor.cache || {},\r\n              defaults = cache.defaults;\r\n          if (!defaults) {\r\n            var  ctors = [];\r\n            do {\r\n              ctors.unshift(ctor);\r\n              if (ctor === Plugin) {\r\n                break;\r\n              }\r\n              ctor = ctor.superclass;\r\n            } while (ctor);\r\n\r\n            defaults = cache.defaults = {};\r\n            for (var i=0;i<ctors.length;i++) {\r\n              ctor = ctors[i];\r\n              if (ctor.prototype.hasOwnProperty(\"options\")) {\r\n                langx.mixin(defaults,ctor.prototype.options,true);\r\n              }\r\n              if (ctor.hasOwnProperty(\"options\")) {\r\n                langx.mixin(defaults,ctor.options,true);\r\n              }\r\n            }\r\n          }\r\n          Object.defineProperty(this,\"options\",{\r\n            value :langx.mixin({},defaults,options,true)\r\n          });\r\n\r\n          //return this.options = langx.mixin({},defaults,options);\r\n          return this.options;\r\n        },\r\n\r\n\r\n        destroy: function() {\r\n            var that = this;\r\n\r\n            this._destroy();\r\n            // We can probably remove the unbind calls in 2.0\r\n            // all event bindings should go through this._on()\r\n            datax.removeData(this._elm,this.pluginName );\r\n        },\r\n\r\n        _destroy: langx.noop,\r\n\r\n        _delay: function( handler, delay ) {\r\n            function handlerProxy() {\r\n                return ( typeof handler === \"string\" ? instance[ handler ] : handler )\r\n                    .apply( instance, arguments );\r\n            }\r\n            var instance = this;\r\n            return setTimeout( handlerProxy, delay || 0 );\r\n        },\r\n\r\n        option: function( key, value ) {\r\n            var options = key;\r\n            var parts;\r\n            var curOption;\r\n            var i;\r\n\r\n            if ( arguments.length === 0 ) {\r\n\r\n                // Don't return a reference to the internal hash\r\n                return langx.mixin( {}, this.options );\r\n            }\r\n\r\n            if ( typeof key === \"string\" ) {\r\n\r\n                // Handle nested keys, e.g., \"foo.bar\" => { foo: { bar: ___ } }\r\n                options = {};\r\n                parts = key.split( \".\" );\r\n                key = parts.shift();\r\n                if ( parts.length ) {\r\n                    curOption = options[ key ] = langx.mixin( {}, this.options[ key ] );\r\n                    for ( i = 0; i < parts.length - 1; i++ ) {\r\n                        curOption[ parts[ i ] ] = curOption[ parts[ i ] ] || {};\r\n                        curOption = curOption[ parts[ i ] ];\r\n                    }\r\n                    key = parts.pop();\r\n                    if ( arguments.length === 1 ) {\r\n                        return curOption[ key ] === undefined ? null : curOption[ key ];\r\n                    }\r\n                    curOption[ key ] = value;\r\n                } else {\r\n                    if ( arguments.length === 1 ) {\r\n                        return this.options[ key ] === undefined ? null : this.options[ key ];\r\n                    }\r\n                    options[ key ] = value;\r\n                }\r\n            }\r\n\r\n            this._setOptions( options );\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOptions: function( options ) {\r\n            var key;\r\n\r\n            for ( key in options ) {\r\n                this._setOption( key, options[ key ] );\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOption: function( key, value ) {\r\n\r\n            this.options[ key ] = value;\r\n\r\n            return this;\r\n        },\r\n\r\n        getUID : function (prefix) {\r\n            prefix = prefix || \"plugin\";\r\n            do prefix += ~~(Math.random() * 1000000)\r\n            while (document.getElementById(prefix))\r\n            return prefix;\r\n        },\r\n\r\n        elm : function() {\r\n            return this._elm;\r\n        }\r\n\r\n    });\r\n\r\n    $.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n    elmx.partial(\"plugin\",function(name,options) {\r\n        var args = slice.call( arguments, 1 );\r\n        return instantiate.apply(this,[this.domNode,name].concat(args));\r\n    }); \r\n\r\n\r\n    function plugins() {\r\n        return plugins;\r\n    }\r\n     \r\n    langx.mixin(plugins, {\r\n        instantiate,\r\n        Plugin,\r\n        register,\r\n        shortcuts\r\n    });\r\n\r\n    return  skylark.attach(\"domx.plugins\",plugins);\r\n});\ndefine('skylark-domx-plugins/main',[\r\n\t\"./plugins\"\r\n],function(plugins){\r\n\treturn plugins;\r\n});\ndefine('skylark-domx-plugins', ['skylark-domx-plugins/main'], function (main) { return main; });\n\ndefine('skylark-data-collection/collections',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"data.collections\",{});\r\n});\ndefine('skylark-data-collection/Collection',[\r\n    \"skylark-langx/Evented\",\r\n    \"./collections\"\r\n], function(Evented, collections) {\r\n\r\n    var Collection = collections.Collection = Evented.inherit({\r\n\r\n        \"klassName\": \"Collection\",\r\n\r\n        _clear: function() {\r\n            throw new Error('Unimplemented API');\r\n        },\r\n\r\n        \"clear\": function() {\r\n            //desc: \"Removes all items from the Collection\",\r\n            //result: {\r\n            //    type: Collection,\r\n            //    desc: \"this instance for chain call\"\r\n            //},\r\n            //params: [],\r\n            this._clear();\r\n            this.trigger(\"changed:clear\");\r\n            return this;\r\n        },\r\n\r\n        /*\r\n         *@method count\r\n         *@return {Number}\r\n         */\r\n        count : /*Number*/function () {\r\n            var c = 0,\r\n                it = this.iterator();\r\n            while(!it.hasNext()){\r\n                c++;\r\n            }\r\n            return c;\r\n        },\r\n\r\n        \"forEach\": function( /*Function*/ func, /*Object?*/ thisArg) {\r\n            //desc: \"Executes a provided callback function once per collection item.\",\r\n            //result: {\r\n            //    type: Number,\r\n            //    desc: \"the number of items\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"func\",\r\n            //    type: Function,\r\n            //    desc: \"Function to execute for each element.\"\r\n            //}, {\r\n            //    name: \"thisArg\",\r\n            //    type: Object,\r\n            //    desc: \"Value to use as this when executing callback.\"\r\n            //}],\r\n            var it = this.iterator();\r\n            while(it.hasNext()){\r\n                var item = it.next();\r\n                func.call(thisArg || item,item);\r\n            }\r\n            return this;\r\n\r\n        },\r\n\r\n        \"iterator\" : function() {\r\n            throw new Error('Unimplemented API');\r\n        },\r\n\r\n        \"toArray\": function() {\r\n            //desc: \"Returns an array containing all of the items in this collection in proper sequence (from first to last item).\",\r\n            //result: {\r\n            //    type: Array,\r\n            //    desc: \"an array containing all of the elements in this collection in proper sequence\"\r\n            //},\r\n            //params: [],\r\n            var items = [],\r\n                it = this.iterator();\r\n            while(!it.hasNext()){\r\n                items.push(it.next());\r\n            }\r\n            return items;\r\n        }\r\n    });\r\n\r\n    return Collection;\r\n});\r\n\n\r\ndefine('skylark-data-collection/Map',[\r\n    \"./collections\",\r\n    \"./Collection\"\r\n], function( collections, Collection) {\r\n\r\n    var Map = collections.Map = Collection.inherit({\r\n\r\n        \"klassName\": \"Map\",\r\n\r\n        _getInnerItems : function() {\r\n            return this._items;\r\n        },\r\n\r\n        _clear : function() {\r\n            this._items = [];\r\n        },\r\n\r\n        _findKeyByRegExp: function(regExp, callback) {\r\n            var items = this._getInnerItems();\r\n            return items.filter(function(key) {\r\n                if (key.match(regExp)) {\r\n                    if (callback) callback(key);\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n\r\n        \"get\":  function(strKey, silent) {\r\n            //desc: \"Returns the item at the specified key in the Hashtable.\",\r\n            //result: {\r\n            //    type: Object,\r\n            //    desc: \"The item at the specified key.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"strKey\",\r\n            //    type: String,\r\n            //    desc: \"The key of the item to return.\"\r\n            //}, {\r\n            //    name: \"silent\",\r\n            //    type: Boolean,\r\n            //    desc: \"the silent flag.\",\r\n            //    optional: true\r\n            //}],\r\n            if (typeof(strKey) != \"string\") {\r\n                throw \"hash key is not string!\";\r\n            }\r\n            /*\r\n            if (!silent && !this.contains(strKey)) {\r\n                throw \"hash key is not  existed\";\r\n            }\r\n            */\r\n            var items = this._getInnerItems();\r\n            return items[strKey];\r\n        },\r\n\r\n        \"iterator\" : function() {\r\n            var i =0;\r\n            return {\r\n                hasNext : function() {\r\n                    return i < this._items.length;\r\n                },\r\n                next : function() {\r\n                    var key =  this._items[i++];\r\n                    return [this._items[key],key];\r\n                }\r\n            }\r\n        },\r\n\r\n        \"set\": function( /*String*/ strKey, /*Object*/ value) {\r\n            //desc: \"Replaces the item at the specified key in the Hashtable with the specified item.\",\r\n            //result: {\r\n            //    type: Map,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"strKey\",\r\n            //    type: String,\r\n            //    desc: \"key of the item to replace.\"\r\n            //}, {\r\n            //    name: \"value\",\r\n            //    type: Object,\r\n            //    desc: \"item to be stored at the specified position.\"\r\n            //}],\r\n            if (typeof(strKey) != \"string\") {\r\n                throw \"hash key is not string!\";\r\n            }\r\n\r\n            /*\r\n            if (!this.contains(strKey)) {\r\n                throw \"hash key is not existed\";\r\n            }\r\n            */\r\n\r\n            var items = this._getInnerItems();\r\n            if (items.indexOf(strKey) == -1) {\r\n                items.push(strKey);\r\n            }\r\n            var oldValue = items[strKey];\r\n            if (oldValue !== value) {\r\n                items[strKey] = value;\r\n                var updated = {};\r\n                updated[strKey] = {\r\n                    name : strKey,\r\n                    value : value,\r\n                    oldValue : oldValue\r\n                };\r\n                this.trigger(\"changed\" ,{ //TODO: \"changed:\"+ strKey\r\n                    data : updated\r\n                });\r\n            }\r\n            return this;\r\n        },\r\n\r\n\r\n        \"remove\": function( /*String*/ strKey) {\r\n            //desc: \"Removes the first occurrence of a specific item from the Hashtable\",\r\n            //result: {\r\n            //    type: Map,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"strKey\",\r\n            //    type: String,\r\n            //    desc: \"The key for The item to remove from the Hashtable.\"\r\n            //}],\r\n            if (typeof(strKey) != \"string\") {\r\n                throw \"hash key is not string!\";\r\n            }\r\n            var items = this._getInnerItems();\r\n            var idx = items.indexOf(strKey);\r\n            if (idx >= 0) {\r\n                delete items[strKey];\r\n                delete items[idx];\r\n            }\r\n        },\r\n\r\n        findByRegExp: function( /*String*/ regExp, callback) {\r\n            //desc: \"find regExp items\",\r\n            //result: {\r\n            //    type: Map,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"regExp\",\r\n            //    type: String,\r\n            //    desc: \"The key for The item to remove from the Hashtable.\"\r\n            //}, {\r\n            //    name: \"callback\",\r\n            //    type: Function,\r\n            //    desc: \"the callback method\"\r\n            //}],\r\n            var items = [],\r\n                self = this;\r\n            this._findKeyByRegExp(regExp, function(key) {\r\n                var item = self.get(key);\r\n                if (callback) callback(item);\r\n                items.push(item);\r\n            });\r\n            return items;\r\n        },\r\n\r\n        removeByRegExp: function( /*String*/ regExp) {\r\n            //desc: \"Removes regExp items\",\r\n            //result: {\r\n            //    type: Map,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"regExp\",\r\n            //    type: String,\r\n            //    desc: \"The key for The item to remove from the Hashtable.\"\r\n            //}],\r\n            var self = this;\r\n            this._findKeyByRegExp(regExp, function(key) {\r\n                self.remove(key);\r\n            });\r\n        },\r\n\r\n        \"toPlain\": function() {\r\n            //desc: \"Returns a plain object containing all of the items in this Hashable.\",\r\n            //result: {\r\n            //    type: Object,\r\n            //    desc: \"a plain object containing all of the items in this Hashtable.\"\r\n            //},\r\n            //params: [],\r\n            var items = this._getInnerItems(); \r\n\r\n            for (var i = 0; i < items.length; i++) {\r\n                var key = items[i];\r\n                plain[key] = items[key];\r\n            }\r\n            return plain;\r\n        },\r\n\r\n        \"toString\": function( /*String?*/ delim) {\r\n            //desc: \"implementation of toString, follows [].toString().\",\r\n            //result: {\r\n            //    type: String,\r\n            //   desc: \"The string.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"delim\",\r\n            //    type: String,\r\n            //    desc: \"The delim \",\r\n            //    optional: true\r\n            //}],\r\n            var items = this._getInnerItems();\r\n\r\n            return items.join((delim || \",\"));\r\n        },\r\n\r\n        \"init\": function( /*Object*/ data) {\r\n            var items = this._items = [];\r\n            for (var name in data) {\r\n                items.push(name);\r\n                items[name]= data[name];\r\n            }\r\n        }\r\n       \r\n    });\r\n    return Map;\r\n});\r\n\n\r\ndefine('skylark-data-collection/HashMap',[\r\n    \"./collections\",\r\n\t\"./Map\"\r\n],function(collections,_Map) {\r\n\r\n\tvar HashMap = collections.HashMap = _Map.inherit({\r\n\t});\r\n\r\n\treturn HashMap;\r\n});\ndefine('skylark-widgets-base/base',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"widgets.base\",{});\r\n});\ndefine('skylark-widgets-base/Widget',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-data\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-files\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-fx\",\r\n  \"skylark-domx-plugins\",\r\n  \"skylark-data-collection/HashMap\",\r\n  \"./base\"\r\n],function(skylark,langx,browser,datax,eventer,noder,files,geom,elmx,$,fx, plugins,HashMap,base){\r\n\r\n/*---------------------------------------------------------------------------------*/\r\n\r\n  var Widget = plugins.Plugin.inherit({\r\n    klassName: \"Widget\",\r\n\r\n    _elmx : elmx,\r\n\r\n    _construct : function(elm,options) {\r\n        if (langx.isHtmlNode(elm)) {\r\n          options = this._parse(elm,options);\r\n        } else {\r\n          options = elm;\r\n          elm = null;\r\n        }\r\n        this.overrided(elm,options);\r\n\r\n        if (!elm) {\r\n          this._velm = this._create();\r\n          this._elm = this._velm.elm();\r\n        } else {\r\n          this._velm = elmx(this._elm);\r\n        }\r\n        \r\n        Object.defineProperty(this,\"state\",{\r\n          value :this.options.state || new HashMap()\r\n        });\r\n\r\n        //this.state = this.options.state || new Map();\r\n        this._init();\r\n\r\n        var addonCategoryOptions = this.options.addons;\r\n        if (addonCategoryOptions) {\r\n          var widgetCtor = this.constructor,\r\n              addons = widgetCtor.addons;\r\n          for (var categoryName in addonCategoryOptions) {\r\n              for (var i =0;i < addonCategoryOptions[categoryName].length; i++ ) {\r\n                var addonOption = addonCategoryOptions[categoryName][i];\r\n                if (langx.isString(addonOption)) {\r\n                  var addonName = addonOption,\r\n                      addonSetting = addons[categoryName][addonName],\r\n                      addonCtor = addonSetting.ctor ? addonSetting.ctor : addonSetting;\r\n\r\n                  this.addon(addonCtor,addonSetting.options);\r\n\r\n                }\r\n\r\n              }\r\n          }\r\n        }\r\n\r\n        if (this._elm.parentElement) {\r\n          // The widget is already in document\r\n          this._startup();\r\n        }\r\n\r\n     },\r\n\r\n    /**\r\n     * Parses widget options from attached element.\r\n     * This is a callback method called by constructor when attached element is specified.\r\n     * @method _parse\r\n     * @return {Object} options.\r\n     */\r\n    _parse : function(elm,options) {\r\n      var optionsAttr = datax.data(elm,\"options\");\r\n      if (optionsAttr) {\r\n         //var options1 = JSON.parse(\"{\" + optionsAttr + \"}\");\r\n         var options1 = eval(\"({\" + optionsAttr + \"})\");\r\n         options = langx.mixin(options1,options); \r\n      }\r\n      return options || {};\r\n    },\r\n\r\n\r\n    /**\r\n     * Create html element for this widget.\r\n     * This is a callback method called by constructor when attached element is not specified.\r\n     * @method _create\r\n     */\r\n    _create : function() {\r\n        var template = this.options.template;\r\n        if (template) {\r\n          return this._elmx(template);\r\n        } else {\r\n          throw new Error(\"The template is not existed in options!\");\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Init widget.\r\n     * This is a callback method called by constructor.\r\n     * @method _init\r\n     */\r\n    _init : function() {\r\n      var self = this;\r\n      if (this.widgetClass) {\r\n        this._velm.addClass(this.widgetClass);\r\n      }\r\n      this.state.on(\"changed\",function(e,args) {\r\n        self._refresh(args.data);\r\n      });\r\n    },\r\n\r\n\r\n    /**\r\n     * Startup widget.\r\n     * This is a callback method called when widget element is added into dom.\r\n     * @method _post\r\n     */\r\n    _startup : function() {\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * Refresh widget.\r\n     * This is a callback method called when widget state is changed.\r\n     * @method _refresh\r\n     */\r\n    _refresh : function(updates) {\r\n      /*\r\n      var _ = this._,\r\n          model = _.model,\r\n          dom = _.dom,\r\n          props = {\r\n\r\n          };\r\n      updates = updates || {};\r\n      for (var attrName in updates){\r\n          var v = updates[attrName].value;\r\n          if (v && v.toCss) {\r\n              v.toCss(props);\r\n              updates[attrName].processed = true;\r\n          }\r\n\r\n      };\r\n\r\n      this.css(props);\r\n\r\n      if (updates[\"disabled\"]) {\r\n          var v = updates[\"disabled\"].value;\r\n          dom.aria('disabled', v);\r\n          self.classes.toggle('disabled', v);\r\n      }\r\n      */\r\n    },                \r\n\r\n    mapping : {\r\n      \"events\" : {\r\n  //       'mousedown .title':  'edit',\r\n  //       'click .button':     'save',\r\n  //       'click .open':       function(e) { ... }            \r\n      },\r\n\r\n      \"attributs\" : {\r\n\r\n      },\r\n\r\n      \"properties\" : {\r\n\r\n      },\r\n\r\n      \"styles\" : {\r\n\r\n      }\r\n    },\r\n\r\n    addon : function(ctor,setting) {\r\n      var categoryName = ctor.categoryName,\r\n          addonName = ctor.addonName;\r\n\r\n      this._addons = this.addons || {};\r\n      var category = this._addons[categoryName] = this._addons[categoryName] || {};\r\n      category[addonName] = new ctor(this,setting);\r\n      return this;\r\n    },\r\n\r\n    addons : function(categoryName,settings) {\r\n      this._addons = this.addons || {};\r\n      var category = this._addons[categoryName] = this._addons[categoryName] || {};\r\n\r\n      if (settings == undefined) {\r\n        return langx.clone(category || null);\r\n      } else {\r\n        langx.mixin(category,settings);\r\n      }\r\n    },\r\n\r\n\r\n    /**\r\n     * Returns a html element representing the widget.\r\n     *\r\n     * @method render\r\n     * @return {HtmlElement} HTML element representing the widget.\r\n     */\r\n    render: function() {\r\n      return this._elm;\r\n    },\r\n\r\n\r\n\r\n    /**\r\n     * Returns a parent widget  enclosing this widgets, or null if not exist.\r\n     *\r\n     * @method getEnclosing\r\n     * @return {Widget} The enclosing parent widget, or null if not exist.\r\n     */\r\n    getEnclosing : function(selector) {\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Returns a widget collection with all enclosed child widgets.\r\n     *\r\n     * @method getEnclosed\r\n     * @return {List} Collection with all enclosed child widgets..\r\n     */\r\n    getEnclosed : function() {\r\n      var self = this;\r\n          children = new ArrayList();\r\n      return children;\r\n    },\r\n\r\n    /**\r\n     * Sets the visible state to true.\r\n     *\r\n     * @method show\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n\r\n    show : function() {\r\n      this._velm.show();\r\n    },\r\n\r\n    /**\r\n     * Sets the visible state to false.\r\n     *\r\n     * @method hide\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    hide : function() {\r\n      this._velm.hide();\r\n    },\r\n\r\n    /**\r\n     * Focuses the current widget.\r\n     *\r\n     * @method focus\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    focus :function() {\r\n      try {\r\n        this._velm.focus();\r\n      } catch (ex) {\r\n        // Ignore IE error\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Blurs the current widget.\r\n     *\r\n     * @method blur\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    blur : function() {\r\n      this._velm.blur();\r\n\r\n      return this;\r\n    },\r\n\r\n    enable: function () {\r\n      this.state.set('disabled',false);\r\n      return this;\r\n    },\r\n\r\n    disable: function () {\r\n      this.state.set('disabled',true);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the specified aria property.\r\n     *\r\n     * @method aria\r\n     * @param {String} name Name of the aria property to set.\r\n     * @param {String} value Value of the aria property.\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    aria : function(name, value) {\r\n      const self = this, elm = self.getEl(self.ariaTarget);\r\n\r\n      if (typeof value === 'undefined') {\r\n        return self._aria[name];\r\n      }\r\n\r\n      self._aria[name] = value;\r\n\r\n      if (self.state.get('rendered')) {\r\n        elm.setAttribute(name === 'role' ? name : 'aria-' + name, value);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    attr: function (name,value) {\r\n        var velm = this._velm,\r\n            ret = velm.attr(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    css: function (name, value) {\r\n        var velm = this._velm,\r\n            ret = velm.css(name, value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    data: function (name, value) {\r\n        var velm = this._velm,\r\n            ret = velm.data(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    prop: function (name,value) {\r\n        var velm = this._velm,\r\n            ret = velm.prop(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    throb: function(params) {\r\n      return fx.throb(this._elm,params);\r\n    },\r\n\r\n    emit : function(type,params) {\r\n      var e = langx.Emitter.createEvent(type,{\r\n        data : params\r\n      });\r\n      return langx.Emitter.prototype.emit.call(this,e,params);\r\n    },\r\n\r\n    /**\r\n     *  Attach the current widget element to dom document.\r\n     *\r\n     * @method attach\r\n     * @return {Widget} This Widget.\r\n     */\r\n    attach : function(target,position){\r\n        var elm = target;\r\n        if (!position || position==\"child\") {\r\n            noder.append(elm,this._elm);\r\n        } else  if (position == \"before\") {\r\n            noder.before(elm,this._elm);\r\n        } else if (position == \"after\") {\r\n            noder.after(elm,this._elm);\r\n        }\r\n        this._startup();\r\n    },\r\n\r\n    /**\r\n     *  Detach the current widget element from dom document.\r\n     *\r\n     * @method html\r\n     * @return {HtmlElement} HTML element representing the widget.\r\n     */\r\n    detach : function() {\r\n      this._velm.remove();\r\n    }\r\n  });\r\n\r\n  Widget.inherit = function(meta) {\r\n    var ctor = plugins.Plugin.inherit.apply(this,arguments);\r\n\r\n    function addStatePropMethod(name) {\r\n        ctor.prototype[name] = function(value) {\r\n          if (value !== undefined) {\r\n            this.state.set(name,value);\r\n            return this;\r\n          } else {\r\n            return this.state.get(name);\r\n          }\r\n        };\r\n    }\r\n    if (meta.state) {\r\n      for (var name in meta.state) {\r\n          addStatePropMethod(name);\r\n      }\r\n    }\r\n\r\n    if (meta.pluginName) {\r\n      plugins.register(ctor,meta.pluginName);\r\n    }\r\n    return ctor;\r\n  };\r\n\r\n  Widget.register = function(ctor,widgetName) {\r\n    var meta = ctor.prototype,\r\n        pluginName = widgetName || meta.pluginName;\r\n\r\n    function addStatePropMethod(name) {\r\n        ctor.prototype[name] = function(value) {\r\n          if (value !== undefined) {\r\n            this.state.set(name,value);\r\n            return this;\r\n          } else {\r\n            return this.state.get(name);\r\n          }\r\n        };\r\n    }\r\n    if (meta.state) {\r\n      for (var name in meta.state) {\r\n          addStatePropMethod(name);\r\n      }\r\n    }\r\n\r\n    if (pluginName) {\r\n      plugins.register(ctor,pluginName);\r\n    }\r\n    return ctor;\r\n  };\r\n\r\n  return base.Widget = Widget;\r\n});\r\n\ndefine('skylark-widgets-uploads/MultiUploader',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-net-http/Upload\",\r\n  \"skylark-widgets-base/Widget\",\r\n  \"./uploads\"\r\n]  ,function(skylark,langx,$, FileUpload, Widget,uploads){\r\n\r\n    var fileListTemplate = '<div class=\"lark-multiuploader\">' + \r\n        '    <h3 class=\"popover-title\">Upload files</h3>' + \r\n        '    <div class=\"popover-content container-fluid\" class=\"file-list file-dropzone file-pastezone\">' + \r\n        '        <div class=\"no-data\"><em>Add files.</em></div>' + \r\n        '    </div>' + \r\n        '    <footer>' + \r\n        '        <button class=\"btn btn-warning pull-right btn-sm\" id=\"cancel-uploads-button\"><i class=\"icon-cancel\"></i>Cancel uploads</button>' + \r\n        '        <span class=\"btn btn-success fileinput-button btn-sm\" id=\"fileinput-button\">' + \r\n        '            <i class=\"icon-plus\"></i>' + \r\n        '            <span>Add files...</span>' + \r\n        '            <input id=\"fileupload\" type=\"file\" name=\"files[]\" multiple=\"multiple\">' + \r\n        '        </span>' + \r\n        '        <button class=\"btn btn-primary btn-sm\" id=\"start-uploads-button\"><i class=\"icon-start\"></i>Start uploads</button>' + \r\n        '    </footer>' + \r\n        '</div>',\r\n        fileItemTemplate = '<div class=\"file-item row\">' +\r\n        '   <div class=\"col-md-6\"><span class=\"name\"></span></div>' + \r\n        '   <div class=\"col-md-3\">' +\r\n        '    <span class=\"size\"></span>' +\r\n        '    <div class=\"progress hidden\">' +\r\n        '        <div class=\"progress-label\"></div>' +\r\n        '        <div class=\"bar\"></div>' +\r\n        '    </div>' +\r\n        '    <span class=\"message hidden\"></span>' +\r\n        '   </div>' +\r\n        '   <div class=\"col-md-3\">' +\r\n        '    <button class=\"btn btn-warning btn-xs cancel\"><i class=\"icon-remove\"></i>Cancel</button>' +\r\n        '    <button class=\"btn btn-xs clear hidden\">Clear</button>' +\r\n        '   </div>' +\r\n        '</div>';\r\n\r\n    var MultiUploader =  Widget.inherit({\r\n        klassName : \"Uploader\",\r\n        pluginName : \"lark.multiuploader\",\r\n\r\n        options: {\r\n            uploadUrl: '/upload',\r\n\r\n        \tparams: {\r\n                formParamName : \"file\"\r\n            },\r\n\r\n    \t    maxConnections: 3,\r\n        \t// validation\r\n        \tallowedExtensions: [],\r\n        \tsizeLimit: 0,\r\n        \tminSizeLimit: 0,\r\n\r\n            autoUpload: false,\r\n            selectors : {\r\n              fileList : \".file-list\",\r\n              fileItem : \".file-item\",\r\n              nodata : \".file-list .no-data\",\r\n\r\n              picker   : \".file-picker\",\r\n              dropzone : \".file-dropzone\",\r\n              pastezone: \".file-pastezone\",\r\n\r\n              startUploads: '.start-uploads',\r\n              cancelUploads: '.cancel-uploads',\r\n            },\r\n\r\n            template : fileListTemplate,\r\n\r\n            dataType: 'json',\r\n\r\n            fileItem : {\r\n            \tselectors : {\r\n                    name : \".name\",\r\n                    size : \".size\",\r\n                    cancel: \".cancel\",\r\n                    clear : \".clear\",\r\n                    progress : \".progress\",\r\n                    message : \".message\"                   \r\n            \t},\r\n\r\n            \ttemplate : fileItemTemplate\r\n            }\r\n        },\r\n\r\n        state : {\r\n        },\r\n\r\n        _init: function () {\r\n            var self = this;\r\n\r\n\r\n            // Render current files\r\n            /*\r\n            this.files.forEach(function (file) {\r\n                self.renderFile(file);\r\n            });\r\n            */\r\n\r\n            //this._refresh({files:true});\r\n        \r\n\r\n            //this._files.on('all', function(){\r\n            //  self._refresh({files:true});\r\n            //});\r\n\r\n            this._initEventHandler();\r\n            this._initFileHandlers();\r\n            this._initUpoadHandler();\r\n            this._updateFileList();\r\n        },\r\n\r\n        _initFileHandlers : function() {\r\n            var self = this;\r\n\r\n            var selectors = this.options.selectors,\r\n            \tdzSelector = selectors.dropzone,\r\n            \tpzSelector = selectors.pastezone,\r\n            \tpkSelector = selectors.picker;\r\n\r\n            if (dzSelector) {\r\n\t\t\t\tthis._velm.$(dzSelector).dropzone({\r\n\t                dropped : function (files) {\r\n                        self._addFiles(files);\r\n\t                }\r\n\t\t\t\t});\r\n            }\r\n\r\n\r\n            if (pzSelector) {\r\n                this._velm.$(pzSelector).pastezone({\r\n                    pasted : function (files) {\r\n                        self._addFiles(files);\r\n                    }\r\n                });                \r\n            }\r\n\r\n            if (pkSelector) {\r\n                this._velm.$(pkSelector).picker({\r\n                    multiple: true,\r\n                    picked : function (files) {\r\n                        self._addFiles(files);\r\n                    }\r\n                });                \r\n            }\r\n        },\r\n\r\n        _initUpoadHandler: function(){\r\n            var self = this,\r\n                handlerClass;\r\n\r\n            this._handler = new FileUpload({\r\n                url: this.options.uploadUrl,\r\n                maxConnections: this.options.maxConnections,\r\n                onProgress: function(id, fileName, loaded, total){\r\n                    self._onProgress(id, fileName, loaded, total);\r\n                },\r\n                onComplete: function(id, fileName, result){\r\n                    self._onComplete(id, fileName, result);\r\n                },\r\n                onCancel: function(id, fileName){\r\n                    self._onCancel(id, fileName);\r\n                },\r\n                onFailure: function(id,fileName,e){\r\n                    self._onFailure(id,fileName,e);\r\n                }\r\n            });\r\n        },\r\n        \r\n         /**\r\n         * delegate click event for cancel link\r\n         **/\r\n        _initEventHandler: function(){\r\n            var self = this,\r\n               selectors = this.options.selectors,\r\n               itemSelectors = this.options.fileItem.selectors, \r\n               list = this._listElement;\r\n\r\n            // Add cancel handler\r\n            this._velm.$(selectors.fileList).on(\"click\",itemSelectors.cancel,function(e){\r\n                var $fileItem = $(this).closest(selectors.fileItem),\r\n                    fileId = $fileItem.data(\"fileId\");\r\n                self._handler.cancel(fileId);\r\n                $fileItem.remove();\r\n                self._updateFileList();\r\n            });\r\n\r\n            // Add clear handler\r\n            this._velm.$(selectors.fileList).on(\"click\",itemSelectors.clear,function(e){\r\n                var $fileItem = $(this).closest(selectors.fileItem),\r\n                    fileId = $fileItem.data(\"fileId\");\r\n                $fileItem.remove();\r\n                self._updateFileList();\r\n            });\r\n\r\n            // Add cancel all handler\r\n            this._velm.$(selectors.cancelUploads).click(function(){\r\n                var $files = self._velm.$(selectors.fileList).find(selectors.fileItem);           \r\n                $files.forEach(function(fileItem){\r\n                    var $fileItem = $(fileItem),\r\n                        fileId = $fileItem.data(\"fileId\");\r\n                    self._handler.cancel(fileId);\r\n                    $fileItem.remove();\r\n                });\r\n                self._updateFileList();\r\n\r\n            });\r\n\r\n            // Add start uploads handler\r\n            this._velm.$(selectors.startUploads).click(function(){\r\n                var $files = self._velm.$(selectors.fileList).find(selectors.fileItem);           \r\n                $files.forEach(function(fileItem){\r\n                    var $fileItem = $(fileItem),\r\n                        fileId = $fileItem.data(\"fileId\");\r\n                    if (!$fileItem.data(\"status\")) {\r\n                        // The file has not yet been sent\r\n                        self._handler.send(fileId,self.options.params);\r\n                    }\r\n                });\r\n\r\n            });\r\n            \r\n\r\n        },       \r\n\r\n        _onProgress: function(id, fileName, loaded, total){          \r\n            var $item = this._getItemByFileId(id);\r\n\r\n            var percent = parseInt(loaded / total * 100, 10);\r\n            var progressHTML = this._formatSize(loaded)+' of '+ this._formatSize(total);\r\n\r\n            $item.data(\"status\",\"running\");\r\n            $item.find('.progress')\r\n                .find('.bar')\r\n                .css('width', percent+'%')\r\n                .parent()\r\n                .find('.progress-label')\r\n                .html(progressHTML);\r\n            this._updateFile($item);\r\n\r\n        },\r\n\r\n        _onComplete: function(id, fileName, result){\r\n            this._filesInProgress--;\r\n            var $item = this._getItemByFileId(id);\r\n            $item.data(\"status\",\"done\");\r\n            $item.find('.message').html('<i class=\"icon-success\"></i> ' + (this.doneMsg || 'Uploaded'));\r\n            this._updateFile($item);\r\n        },\r\n\r\n        _onFailure : function(id,fileName,e) {\r\n            this._filesInProgress--;\r\n            var $item = this._getItemByFileId(id);\r\n            $item.data(\"status\",\"error\");\r\n            $item.find('.message').html('<i class=\"icon-error\"></i> ');;\r\n            this._updateFile($item)\r\n\r\n        },\r\n\r\n        _onCancel: function(id, fileName){\r\n            this._filesInProgress--;\r\n            var $item = this._getItemByFileId(id);\r\n            $item.data(\"status\",\"cancel\");\r\n            this._updateFile($item)\r\n        },\r\n\r\n        _addToList: function(id, fileName){\r\n            var self = this;\r\n\r\n\r\n            var fileName = this._handler.getName(id),\r\n                fileSize = this._handler.getSize(id);\r\n\r\n            var item = $(this.options.fileItem.template);\r\n            item.data(\"fileId\",id);\r\n\r\n            item.find(this.options.fileItem.selectors.name).html(this._formatFileName(fileName));\r\n            item.find(this.options.fileItem.selectors.size).html(this._formatSize(fileSize));\r\n\r\n            this._velm.$(this.options.selectors.fileList).append(item);\r\n\r\n            this._updateFileList();\r\n        },\r\n    \r\n        _updateFileList : function ()  {\r\n            var selectors = this.options.selectors,\r\n                itemSelectors = this.options.fileItem.selectors,\r\n                files = this._velm.$(selectors.fileList).find(selectors.fileItem);\r\n\r\n            var with_files_elements = this._velm.$(selectors.cancelUploads + ',' + selectors.startUploads);\r\n            var without_files_elements = this._velm.$(selectors.nodata);\r\n            if (files.length > 0) {\r\n                with_files_elements.removeClass('hidden');\r\n                without_files_elements.addClass('hidden');\r\n            } else {\r\n                with_files_elements.addClass('hidden');\r\n                without_files_elements.removeClass('hidden');\r\n            }\r\n        },\r\n        \r\n        _updateFile: function ($item) {\r\n            var selectors = this.options.fileItem.selectors,\r\n                when_pending = $item.find(selectors.size + \",\" + selectors.cancel),\r\n                when_running = $item.find(selectors.progress + \",\" + selectors.cancel),\r\n                when_done = $item.find(selectors.message + \",\" + selectors.clear);\r\n\r\n            var status = $item.data(\"status\");    \r\n            if (status == \"pending\") {\r\n                when_running.add(when_done).addClass('hidden');\r\n                when_pending.removeClass('hidden');\r\n            } else if (status == \"running\") {\r\n                when_pending.add(when_done).addClass('hidden');\r\n                when_running.removeClass('hidden');\r\n            } else if (status == \"done\" || status == \"error\") {\r\n                when_pending.add(when_running).addClass('hidden');\r\n                when_done.removeClass('hidden');\r\n            }\r\n        },\r\n\r\n        _getItemByFileId: function(id){\r\n            var selectors = this.options.selectors,\r\n                files = this._velm.$(selectors.fileList).find(selectors.fileItem),\r\n                item;\r\n\r\n            // there can't be txt nodes in dynamically created list\r\n            // and we can  use nextSibling\r\n\r\n            for (var i = 0; i<files.length;i++){\r\n                var item2 = files[i];\r\n                if ($(item2).data(\"fileId\") == id) {\r\n                    item = item2;\r\n                    break;\r\n                }\r\n            }\r\n            if (item) {\r\n                return $(item);\r\n            }\r\n        },\r\n\r\n\r\n            \r\n        _addFiles: function(files){\r\n            for (var i=0; i<files.length; i++){\r\n                if ( !this._validateFile(files[i])){\r\n                    return;\r\n                }\r\n            }\r\n\r\n            for (var i=0; i<files.length; i++){\r\n                this._addFile(files[i]);\r\n            }\r\n        },\r\n\r\n        _addFile: function(file){\r\n            var id = this._handler.add(file);\r\n\r\n            this._filesInProgress++;\r\n            this._addToList(id);\r\n\r\n            //this._handler.upload(id, this.options.params);\r\n        },\r\n\r\n        _validateFile: function(file){\r\n            var name, size;\r\n\r\n            if (file.value){\r\n                // it is a file input\r\n                // get input value and remove path to normalize\r\n                name = file.value.replace(/.*(\\/|\\\\)/, \"\");\r\n            } else {\r\n                // fix missing properties in Safari\r\n                name = file.fileName != null ? file.fileName : file.name;\r\n                size = file.fileSize != null ? file.fileSize : file.size;\r\n            }\r\n\r\n            if (! this._isAllowedExtension(name)){\r\n                this._error('typeError', name);\r\n                return false;\r\n\r\n            } else if (size === 0){\r\n                this._error('emptyError', name);\r\n                return false;\r\n\r\n            } else if (size && this.options.sizeLimit && size > this.options.sizeLimit){\r\n                this._error('sizeError', name);\r\n                return false;\r\n\r\n            } else if (size && size < this.options.minSizeLimit){\r\n                this._error('minSizeError', name);\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        _error: function(code, fileName){\r\n            var message = this.options.messages[code];\r\n            function r(name, replacement){ message = message.replace(name, replacement); }\r\n\r\n            r('{file}', this._formatFileName(fileName));\r\n            r('{extensions}', this.options.allowedExtensions.join(', '));\r\n            r('{sizeLimit}', this._formatSize(this.options.sizeLimit));\r\n            r('{minSizeLimit}', this._formatSize(this.options.minSizeLimit));\r\n\r\n            this.options.showMessage(message);\r\n        },\r\n\r\n        _formatFileName: function(name){\r\n            if (name.length > 33){\r\n                name = name.slice(0, 19) + '...' + name.slice(-13);\r\n            }\r\n            return name;\r\n        },\r\n\r\n        _isAllowedExtension: function(fileName){\r\n            var ext = (-1 !== fileName.indexOf('.')) ? fileName.replace(/.*[.]/, '').toLowerCase() : '';\r\n            var allowed = this.options.allowedExtensions;\r\n\r\n            if (!allowed.length){return true;}\r\n\r\n            for (var i=0; i<allowed.length; i++){\r\n                if (allowed[i].toLowerCase() == ext){ return true;}\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        _formatSize: function(bytes){\r\n            var i = -1;\r\n            do {\r\n                bytes = bytes / 1024;\r\n                i++;\r\n            } while (bytes > 99);\r\n\r\n            return Math.max(bytes, 0.1).toFixed(1) + ['KB', 'MB', 'GB', 'TB', 'PB', 'EB'][i];\r\n        }\r\n\r\n    });\r\n\r\n\r\n\treturn uploads.MultiUploader = MultiUploader;\r\n});\ndefine('skylark-widgets-uploads/main',[\r\n\t\"./uploads\",\r\n\t\"./MultiUploader\"\r\n],function(uploads){\r\n\treturn uploads;\r\n});\ndefine('skylark-widgets-uploads', ['skylark-widgets-uploads/main'], function (main) { return main; });\n\n"]}
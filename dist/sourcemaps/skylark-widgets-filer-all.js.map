{"version":3,"sources":["skylark-widgets-filer-all.js"],"names":["define","obj1","path","obj2","split","length","ns","i","name","_attach","skylark","attach","obj","main","class2type","toString","type","forEach","toLowerCase","String","call","isEmptyObject","isFunction","value","isHtmlNode","nodeType","isNumber","isObject","isString","isWindow","window","isArray","object","constructor","Array","isArrayLike","isBoolean","isDefined","isDocument","DOCUMENT_NODE","isEmpty","isNull","isNumeric","isPlainObject","Object","getPrototypeOf","prototype","isSameOrigin","href","origin","location","protocol","hostname","port","startsWith","isSymbol","isObjectLike","objectToString","symbolTag","isUndefined","undefined","types","INFINITY","MAX_INTEGER","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toFinite","toNumber","sign","other","valueOf","replace","isBinary","test","slice","toInteger","result","remainder","numbers","eq","deepEq","hasOwnProperty","keysFunc","defaults","SymbolProto","Symbol","allKeys","keys","key","push","has","_mixin","target","source","deep","safe","_parseMixinArgs","args","params","arguments","shift","pop","sources","mixin","apply","this","values","a","b","aStack","bStack","className","areArrays","aCtor","bCtor","clone","src","checkCloneMethod","copy","index","l","each","callback","undef","extend","arg","isEqual","includes","collection","fromIndex","guard","nativeMax","indexOf","baseIndexOf","isMatch","attrs","omit","prop1","prop2","pn","pick","removeItem","items","item","idx","splice","fallback","prop","safeMixin","objects","filter","baseFindIndex","array","predicate","fromRight","baseIsNaN","flatten","j","compact","first","n","func","grep","out","inArray","makeArray","offset","startWith","concat","merge","second","arr","fn","map","elements","reduce","initialValue","uniq","arrays","createClass","_constructor","_construct","init","props","parent","mixins","options","innerParent","ctor","Error","clss","unshift","superclass","cls","clsMixines","serialMixins","newCtor","xtor","Function","create","__proto__","__mixin__","mergeMixins","klassName","__mixins__","partial","proto","_super","noOverrided","overrides","superFn","tmp","overrided","ret","defineProperty","extendClass","inherit","f1","klass","QueryResults","results","isPromise","then","addIterativeMethod","method","Deferred","when","delegate","total","ArrayStore","queryEngine","query","queryObject","required","execute","thisObject","cache","buildFn","sortSet","sort","aValue","attribute","bValue","descending","start","count","Infinity","matches","idProperty","get","id","data","getIdentity","put","Math","random","overwrite","add","remove","setData","identifier","nextId","aspect","methodName","advice","receiveArguments","dispatcher","existing","executionId","before","next","around","after","newResults","signal","previous","advised","advise","TMP","templateSettings","evaluate","interpolate","escape","debounce","wait","timeout","context","clearTimeout","setTimeout","defer","requestAnimationFrame","setTimeoutout","noop","proxy","TypeError","returnTrue","returnFalse","template","text","settings","oldSettings","render","matcher","RegExp","noMatch","join","match","escapeRegExp","escapeChar","variable","e","_","argument","funcs","PGLISTENERS","PGNOTIFIES","Promise","always","handler","done","fail","catch","self","p","promise","resolve","reject","_resolve","_reject","wrapPromise","d","added","state","isResolved","isRejected","onResolved","onRejected","onProgress","progress","__ctx__","pipe","resolveWith","_resolved","notify","listener","error","reason","rejectWith","_rejected","errback","progback","all","bind","race","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","err","immediate","async","parallel","ctx","rets","series","waterful","parseMilliSeconds","str","strs","number","isNaN","trim","datetimes","parse","event","segs","Evented","on","events","selector","one","_hub","parsed","trigger","CustomEvent","eventName","listeners","len","reCompact","listened","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","unlistenTo","hoster","isBrowser","isNode","global","browser","node","process","versions","v8","_document","w","require","document","matched","ua","exec","version","uaMatch","navigator","userAgent","chrome","webkit","safari","escapeCharMap","freeze","&","<",">","\"","'","`","=","replaceChar","c","escapeChars","idCounter","string","line","body","escapeHTML","me","callee","stash","getElementById","innerHTML","camelCase","toUpperCase","dasherize","deserializeValue","JSON","generateUUID","r","v","lowerFirst","charAt","rtrim","serializeValue","stringify","substitute","transform","getObject","retVal","getValue","_k","reverse","format","slugify","from","uniqueId","prefix","upperFirst","strings","http","getAbsoluteUrl","url","createElement","Xhr","jsonpID","rscript","scriptTypeRE","xmlTypeRE","jsonType","htmlType","blankRE","XhrDefaultOptions","beforeSend","success","complete","accepts","script","json","xml","html","crossDomain","processData","xhrFields","withCredentials","mimeToDataType","mime","appendQuery","serializeData","param","traditional","serialize","scope","t","hash","encodeURIComponent","_request","xhr","XMLHttpRequest","dataType","handleAs","mimeType","headers","isFormData","FormData","basicAuthorizationToken","user","password","contentType","overrideMimeType","finish","onloadend","onabort","onprogress","ontimeout","status","getResponseHeader","responseText","eval","responseXML","Blob","xhrObj","response","reponse","statusText","evt","open","hdr","setRequestHeader","send","abort","request","post","patch","del","defaultOptions","Restful","idAttribute","getBaseUrl","baseEndpoint","baseUrl","server","basePath","_head","_get","_post","verb","_put","_delete","_patch","retrieve","update","delete","Stateful","attributes","cid","cidPrefix","set","changed","validationError","toJSON","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","hub","publish","arg1","argn","subscribe","topic","_uid","langx","createEvent","funcArg","payload","getQueryParams","queryParam","nv","toPixel","parseFloat","uid","URL","webkitURL","collections","Collection","_clear","it","iterator","hasNext","thisArg","toArray","List","_getInnerItems","_items","contains","getAll","getRange","a1","max","ArrayList","isSingle","addRange","toAdd","insert","insertRange","removeFirstMatch","removeAt","toRemove","removeRange","removed","setByIndex","oldItem","reset","newItems","vendorPrefix","vendorPrefixRE","transEndEventNames","WebkitTransition","MozTransition","OTransition","transition","transEndEventName","css3PropPrefix","css3EventPrefix","cssStyles","cssProps","vendorPrefixesRE","testEl","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","requestFullScreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","testStyle","exitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","style","cssPropName","isIE","normalizeStyleProperty","normalizeCssProperty","normalizeCssEvent","support","end","every","maybeAddPx","cssNumber","column-count","columns","font-weight","line-height","opacity","z-index","zoom","classReCache","classRE","svg","baseVal","elementDisplay","getStyles","elem","view","ownerDocument","defaultView","opener","getComputedStyle","styler","autocssfix","cssHooks","addClass","elm","names","re","css","property","computedStyle","getPropertyValue","removeProperty","cssText","disabled","dom","hasClass","hide","isInvisible","removeClass","show","nodeName","element","display","appendChild","parentNode","removeChild","defaultDisplay","toggleClass","fragmentRE","singleTagRE","div","table","tableBody","tableRow","containers","tr","tbody","thead","tfoot","td","th","*","rootNodeRE","ensureNodes","nodes","copyByClone","cloneNode","chkName","enhancePlaceContent","placing","neddsFlattern","append","tag","setAttribute","rxhtmlTag","isChildOf","directly","documentElement","ownerDoc","noder","active","doc","el","activeElement","blur","getAttribs","setAttrib","getAttrib","contents","contentDocument","childNodes","createFragment","$1","container","child","createTextNode","empty","hasChildNodes","firstChild","fullScreen","exitFullScreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","focusable","hasTabindex","mapName","img","focusableIfVisible","fieldset","$","is","closest","visible","isInDocument","offsetParent","ownerWindow","parentWindow","refNode","nextSibling","insertBefore","prepend","reflow","offsetHeight","console","warn","children","oldNode","replaceChild","throb","timer","time","throbber","class","overlayDiv","position","top","left","width","height","zIndex","overlay","textNode","nodeValue","traverse","wrapper","wrapperNode","wrapperInner","unwrap","isDoc","velm","local","nativeMatchesSelector","separatorIndex","combinatorIndex","reversed","reverseCache","reUnescape","expression","isReversed","Slick","currentCache","expressions","raw","regexp","parser","reverseCombinator","combinator","exp","last","parts","cexp","rawMatch","separator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","currentSeparator","currentParsed","classList","classes","pseudos","operator","rinputs","rheader","parseSelector","button","checked","enabled","even","focus","tabindex","gt","sel","find","header","hidden","input","lt","not","odd","selected","tabbable","tabIndex","offsetWidth","createInputPseudo","createButtonPseudo","isArrayFilter","radio","checkbox","file","image","submit","ancestors","root","rootIsSelector","descendants","querySelectorAll","matchError","descendant","querySelector","lastChild","previousSibling","check","adjacent","nextSiblings","previousSiblings","siblings","divide","cond","nativeSelector","customPseudos","part","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","combine","bit","node1","op","divided","single","currentBit","founds","found","currentItems","finder","ancestor","byId","findAll","capitalRE","propMap","readonly","for","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","valHooks","option","select","selectedIndex","optionSet","attrName","_store","confirm","store","_attributeData","_setData","dataAttrName","camelName","_getData","cleanData","txt","textContent","hooks","value1","datax","dataName","aria","pluck","removeAttr","removeAttribute","removeData","removeProp","ignoreProperties","eventMethods","preventDefault","stopImmediatePropagation","stopPropagation","readyRE","compatible","isDefaultPrevented","sourceMethod","EventCtors","NativeEvents","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","change","selectionchange","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","scroll","unload","wheel","bubbles","cancelable","namespace","getEventCtor","createProxy","originalEvent","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","_target","_event","_bindings","bindings","binding","_listener","domEvt","_args","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","addEventListener","removing","removeEventListener","EventsHandler","_handler","register","specialEvent","bindingEvent","bindType","bindEventName","unregister","findHandler","ready","readyState","keyCodeLookup","backspace","comma","down","enter","home","page_down","page_up","period","right","space","tab","up","eventer","transitionEnd","delegateType","shortcuts","registry","run","shortcut","metaKey","ctrlKey","ctrl","alt","altKey","shiftKey","keyCode","charCode","pattern","shortcutKey","setting","charCodeAt","regKey","special","stop","evented","Event","dispatchEvent","cachedScrollbarWidth","px","scrollbarWidth","w1","w2","innerDiv","clientWidth","borderExtents","bottom","s","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientSize","dimension","clientHeight","isBorderBox","bex","pex","paddingExtents","getDocumentSize","scrollWidth","scrollHeight","marginLeft","marginTop","marginRight","marginBottom","marginSize","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","relativeRect","scrollLeft","hasScrollLeft","scrollTo","scrollY","scrollTop","hasScrollTop","scrollX","innerWidth","innerHeight","geom","contentRect","cs","marginRect","pageRect","round","scrollIntoView","align","x","y","parentWidth","parentHeight","parentElm","pos","rootElm","offsetLeft","offsetTop","getOffset","abs","rhorizontal","rvertical","roffset","rposition","rpercent","getOffsets","offsets","parseCss","positions","fit","newOverRight","within","withinOffset","outerWidth","collisionPosLeft","collisionPosition","overLeft","overRight","collisionWidth","newOverBottom","outerHeight","collisionPosTop","overTop","overBottom","collisionHeight","flip","newOverLeft","myOffset","my","elemWidth","atOffset","at","targetWidth","newOverTop","elemHeight","targetHeight","flipfit","posit","targetOffset","basePosition","dimensions","of","withinElement","hasOffset","msize","scrollInfo","overflowX","overflowY","hasOverflowX","getScrollInfo","collision","pageY","pageX","horizontalOffset","verticalOffset","using","dir","feedback","horizontal","vertical","important","animationName","animationDuration","animationTiming","transitionProperty","transitionDuration","transitionTiming","transitionDelay","animationEnd","supportedTransforms","cssReset","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","fx","speeds","normal","eace","clientLeft","scrollToTop","speed","scale","scrollFrom","freq","interval","setInterval","clearInterval","fadeTo","fadeIn","fadeOut","slideDown","visibility","overflow","slideUp","queue","fast","slow","emulateTransitionEnd","called","fadeToggle","ceasing","allback","slideToggle","toggle","head","getElementsByTagName","scriptsByUrl","scriptElementsById","rscriptType","scripter","preservedScriptAttributes","nonce","noModule","code","loadJavaScript","loadedCallback","errorCallback","loadedCallbacks","errorCallbacks","onload","onerror","startTime","Date","getTime","callbacks","deleteJavaScript","scripts","isQ","some","rquickExpr","wrapper_map","wrapper_selector","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","wrapper_name_value","wrapper_value","newValue","NodeList","excludes","parents","parentsUntil","util","pushStack","elms","prevObject","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","prevAll","nextAll","wrapper_some_chk","detach","fnOver","fnOut","Dimension","m","margin","cb","mb","wrapper_node_operation","argType","appendTo","prependTo","insertAfter","replaceAll","original","elems","toogle","scrollParent","includeHidden","excludeStaticParent","overflowRegex","andSelf","addBack","eventType","place","addContent","content","replaceClass","newClass","oldClass","disableSelection","enableSelection","flow","isBlockNode","plugin","returnValue","plugins","instantiate","files","diskfs","webentry","entry","onError","isFile","relativePath","isDirectory","dirReader","createReader","readEntries","entries","dropzone","hoverClass","droppedCallback","dropped","enterdCount","dataTransfer","webkitGetAsEntry","getAsEntry","pastezone","pastedCallback","pasted","clipboardData","getAsFile","fileInput","maxFileSize","directory","multiple","fileSelected","picked","selectFiles","pickedFiles","onchange","webkitEntries","webkitdirectory","picker","xoptions","contentRange","paramName","singleFileUploads","limitMultiFileUploads","limitMultiFileUploadSize","limitMultiFileUploadSizeOverhead","sequentialUploads","limitConcurrentUploads","multipart","maxChunkSize","uploadedBytes","recalculateProgress","progressInterval","bitrateInterval","autoUpload","messages","i18n","formData","form","serializeArray","fileupload","blobSlice","webkitSlice","mozSlice","ajax","initXHRData","o","blob","uploadName","encodeURI","chunkedUpload","testOnly","jqXHR","upload","fs","ub","mcs","dfd","_getXHRPromise","currentLoaded","_progress","loaded","chunkSize","textStatus","range","upperBytesPos","getUploadedBytes","lengthComputable","errorThrown","_bitrateTimer","timestamp","now","bitrate","getBitrate","timeDiff","jqXhr","FileUploader","dropZone","pasteZone","postMessage","_specialOptions","_BitrateTimer","_getTotal","_initProgressObject","_initResponseObject","_response","_onProgress","_time","floor","_trigger","delegatedEvent","_getParamName","_getDeferredState","_enhancePromise","resolveOrReject","_addConvenienceMethods","getPromise","resolveFunc","rejectFunc","_processQueue","_onSend","processing","_beforeSend","_active","_onDone","_onFail","_onAlways","jqXHRorResult","jqXHRorError","_sending","_onAdd","paramNameSet","paramNameSlice","fileSet","filesLength","limit","limitSize","overhead","batchSize","originalFiles","newData","_initEventHandlers","_destroyEventHandlers","_setOption","reinit","_initSpecialOptions","_elm","_getRegExp","modifiers","_isRegExpOption","_slots","_sequence","fuInst","typ","VisualElement","elmx","batch","action","HTMLElement","_delegator","pluginKlasses","pluginName","pair","instanceDataName","pluginInstance","destroy","pluginKlass","Plugin","_initOptions","ctors","_destroy","_delay","instance","curOption","_setOptions","domNode","shortcutName","extfn","shortcutter","args2","Map","_findKeyByRegExp","regExp","strKey","oldValue","updated","findByRegExp","removeByRegExp","toPlain","plain","delim","_Map","HashMap","base","Widget","_elmx","_parse","_velm","_create","_init","addonCategoryOptions","addons","widgetCtor","categoryName","addonOption","addonName","addonSetting","addonCtor","addon","optionsAttr","options1","widgetClass","_refresh","_startup","updates","mapping","attributs","styles","_addons","category","getEnclosing","getEnclosed","ex","enable","disable","getEl","ariaTarget","_aria","meta","addStatePropMethod","widgetName","uploader","filer","displaySize","bytes","log","pow","toFixed","displayDate","toLocaleString","FileItem","isPending","getState","isRunning","isDone","isError","FileItemCollection","FileItemWidget","selectors","fileName","fileSize","Number","processUploadMsg","doneMsg","model","close","updateProgress","hasFailed","hasDone","percent","progressHTML","when_pending","when_running","when_done","computeData","Uploader","uploadUrl","fileList","nodata","pickFiles","startUploads","cancelUploads","fileItem","filePicker","_files","uploadProcess","uploadManagerFiles","file_data","file_id","processor","renderFile","bindProcessEvents","with_files_elements","without_files_elements","file_view"],"mappings":"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","file":"../skylark-widgets-filer-all.js","sourcesContent":["define('skylark-langx-ns/_attach',[],function(){\r\n    return  function attach(obj1,path,obj2) {\r\n        if (typeof path == \"string\") {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length,\r\n            ns=obj1,\r\n            i=0,\r\n            name = path[i++];\r\n\r\n        while (i < length) {\r\n            ns = ns[name] = ns[name] || {};\r\n            name = path[i++];\r\n        }\r\n\r\n        return ns[name] = obj2;\r\n    }\r\n});\ndefine('skylark-langx-ns/ns',[\r\n    \"./_attach\"\r\n], function(_attach) {\r\n    var skylark = {\r\n    \tattach : function(path,obj) {\r\n    \t\treturn _attach(skylark,path,obj);\r\n    \t}\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx-ns/main',[\r\n\t\"./ns\"\r\n],function(skylark){\r\n\treturn skylark;\r\n});\ndefine('skylark-langx-ns', ['skylark-langx-ns/main'], function (main) { return main; });\n\ndefine('skylark-langx/skylark',[\r\n    \"skylark-langx-ns\"\r\n], function(ns) {\r\n\treturn ns;\r\n});\r\n\ndefine('skylark-widgets-filer/filer',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"widgets.filer\",{});\r\n});\ndefine('skylark-langx-types/types',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n    var toString = {}.toString;\r\n    \r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \").forEach(function(name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n\r\n    /**\r\n     * Checks if `value` is array-like. A value is considered array-like if it's\r\n     * not a function/string/element and has a `value.length` that's an integer greater than or\r\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\r\n     *\r\n     * @category Lang\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\r\n     * @example\r\n     *\r\n     * isArrayLike([1, 2, 3])\r\n     * // => true\r\n     *\r\n     * isArrayLike(document.body.children)\r\n     * // => false\r\n     *\r\n     * isArrayLike('abc')\r\n     * // => true\r\n     *\r\n     * isArrayLike(Function)\r\n     * // => false\r\n     */    \r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number' && !isFunction(obj);\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a boolean primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\r\n     * @example\r\n     *\r\n     * isBoolean(false)\r\n     * // => true\r\n     *\r\n     * isBoolean(null)\r\n     * // => false\r\n     */\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Function` object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\r\n     * @example\r\n     *\r\n     * isFunction(parseInt)\r\n     * // => true\r\n     *\r\n     * isFunction(/abc/)\r\n     * // => false\r\n     */\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && obj.nodeType; // obj instanceof Node; //Consider the elements in IFRAME\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n    function isNull(value) {\r\n      return type(value) === \"null\";\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Symbol` primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\r\n     * @example\r\n     *\r\n     * _.isSymbol(Symbol.iterator);\r\n     * // => true\r\n     *\r\n     * _.isSymbol('abc');\r\n     * // => false\r\n     */\r\n    function isSymbol(value) {\r\n      return typeof value == 'symbol' ||\r\n        (isObjectLike(value) && objectToString.call(value) == symbolTag);\r\n    }\r\n\r\n    function isUndefined(value) {\r\n      return value === undefined\r\n    }\r\n\r\n    return skylark.attach(\"langx.types\",{\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: isDefined,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmpty : isEmptyObject,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isNull: isNull,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isNumeric: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isSymbol : isSymbol,\r\n\r\n        isUndefined: isUndefined,\r\n\r\n        isWindow: isWindow,\r\n\r\n        type: type\r\n    });\r\n\r\n});\ndefine('skylark-langx-types/main',[\r\n\t\"./types\"\r\n],function(types){\r\n\treturn types;\r\n});\ndefine('skylark-langx-types', ['skylark-langx-types/main'], function (main) { return main; });\n\ndefine('skylark-langx-numbers/numbers',[\r\n    \"skylark-langx-ns\",\r\n    \"skylark-langx-types\"\r\n],function(skylark,types){\r\n\tvar isObject = types.isObject,\r\n\t\tisSymbol = types.isSymbol;\r\n\r\n\tvar INFINITY = 1 / 0,\r\n\t    MAX_SAFE_INTEGER = 9007199254740991,\r\n\t    MAX_INTEGER = 1.7976931348623157e+308,\r\n\t    NAN = 0 / 0;\r\n\r\n\t/** Used to match leading and trailing whitespace. */\r\n\tvar reTrim = /^\\s+|\\s+$/g;\r\n\r\n\t/** Used to detect bad signed hexadecimal string values. */\r\n\tvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\r\n\r\n\t/** Used to detect binary string values. */\r\n\tvar reIsBinary = /^0b[01]+$/i;\r\n\r\n\t/** Used to detect octal string values. */\r\n\tvar reIsOctal = /^0o[0-7]+$/i;\r\n\r\n\t/** Used to detect unsigned integer values. */\r\n\tvar reIsUint = /^(?:0|[1-9]\\d*)$/;\r\n\r\n\t/** Built-in method references without a dependency on `root`. */\r\n\tvar freeParseInt = parseInt;\r\n\r\n\t/**\r\n\t * Converts `value` to a finite number.\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @since 4.12.0\r\n\t * @category Lang\r\n\t * @param {*} value The value to convert.\r\n\t * @returns {number} Returns the converted number.\r\n\t * @example\r\n\t *\r\n\t * _.toFinite(3.2);\r\n\t * // => 3.2\r\n\t *\r\n\t * _.toFinite(Number.MIN_VALUE);\r\n\t * // => 5e-324\r\n\t *\r\n\t * _.toFinite(Infinity);\r\n\t * // => 1.7976931348623157e+308\r\n\t *\r\n\t * _.toFinite('3.2');\r\n\t * // => 3.2\r\n\t */\r\n\tfunction toFinite(value) {\r\n\t  if (!value) {\r\n\t    return value === 0 ? value : 0;\r\n\t  }\r\n\t  value = toNumber(value);\r\n\t  if (value === INFINITY || value === -INFINITY) {\r\n\t    var sign = (value < 0 ? -1 : 1);\r\n\t    return sign * MAX_INTEGER;\r\n\t  }\r\n\t  return value === value ? value : 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts `value` to an integer.\r\n\t *\r\n\t * **Note:** This method is loosely based on\r\n\t * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @param {*} value The value to convert.\r\n\t * @returns {number} Returns the converted integer.\r\n\t * @example\r\n\t *\r\n\t * _.toInteger(3.2);\r\n\t * // => 3\r\n\t *\r\n\t * _.toInteger(Number.MIN_VALUE);\r\n\t * // => 0\r\n\t *\r\n\t * _.toInteger(Infinity);\r\n\t * // => 1.7976931348623157e+308\r\n\t *\r\n\t * _.toInteger('3.2');\r\n\t * // => 3\r\n\t */\r\n\tfunction toInteger(value) {\r\n\t  var result = toFinite(value),\r\n\t      remainder = result % 1;\r\n\r\n\t  return result === result ? (remainder ? result - remainder : result) : 0;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Converts `value` to a number.\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @since 4.0.0\r\n\t * @category Lang\r\n\t * @param {*} value The value to process.\r\n\t * @returns {number} Returns the number.\r\n\t * @example\r\n\t *\r\n\t * _.toNumber(3.2);\r\n\t * // => 3.2\r\n\t *\r\n\t * _.toNumber(Number.MIN_VALUE);\r\n\t * // => 5e-324\r\n\t *\r\n\t * _.toNumber(Infinity);\r\n\t * // => Infinity\r\n\t *\r\n\t * _.toNumber('3.2');\r\n\t * // => 3.2\r\n\t */\r\n\tfunction toNumber(value) {\r\n\t  if (typeof value == 'number') {\r\n\t    return value;\r\n\t  }\r\n\t  if (isSymbol(value)) {\r\n\t    return NAN;\r\n\t  }\r\n\t  if (isObject(value)) {\r\n\t    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\r\n\t    value = isObject(other) ? (other + '') : other;\r\n\t  }\r\n\t  if (typeof value != 'string') {\r\n\t    return value === 0 ? value : +value;\r\n\t  }\r\n\t  value = value.replace(reTrim, '');\r\n\t  var isBinary = reIsBinary.test(value);\r\n\t  return (isBinary || reIsOctal.test(value))\r\n\t    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\r\n\t    : (reIsBadHex.test(value) ? NAN : +value);\r\n\t}\r\n\r\n\treturn  skylark.attach(\"langx.numbers\",{\r\n\t\ttoFinite : toFinite,\r\n\t\ttoNumber : toNumber,\r\n\t\ttoInteger : toInteger\r\n\t});\r\n});\ndefine('skylark-langx-numbers/main',[\r\n\t\"./numbers\"\r\n],function(numbers){\r\n\treturn numbers;\r\n});\ndefine('skylark-langx-numbers', ['skylark-langx-numbers/main'], function (main) { return main; });\n\ndefine('skylark-langx-objects/objects',[\r\n    \"skylark-langx-ns/ns\",\r\n    \"skylark-langx-ns/_attach\",\r\n\t\"skylark-langx-types\",\r\n    \"skylark-langx-numbers\"\r\n],function(skylark,_attach,types,numbers){\r\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty,\r\n        slice = Array.prototype.slice,\r\n        isBoolean = types.isBoolean,\r\n        isFunction = types.isFunction,\r\n\t\tisObject = types.isObject,\r\n\t\tisPlainObject = types.isPlainObject,\r\n\t\tisArray = types.isArray,\r\n        isArrayLike = types.isArrayLike,\r\n        isString = types.isString,\r\n        toInteger = numbers.toInteger;\r\n\r\n     // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);  \r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function extend(target) {\r\n        var deep, args = slice.call(arguments, 1);\r\n        if (typeof target == 'boolean') {\r\n            deep = target\r\n            target = args.shift()\r\n        }\r\n        if (args.length == 0) {\r\n            args = [target];\r\n            target = this;\r\n        }\r\n        args.forEach(function(arg) {\r\n            mixin(target, arg, deep);\r\n        });\r\n        return target;\r\n    }\r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\r\n     * checked for a substring of `value`, otherwise\r\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\r\n     * the offset from the end of `collection`.\r\n     *\r\n     * @static\r\n     * @memberOf _\r\n     * @since 0.1.0\r\n     * @category Collection\r\n     * @param {Array|Object|string} collection The collection to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} [fromIndex=0] The index to search from.\r\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\r\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\r\n     * @example\r\n     *\r\n     * _.includes([1, 2, 3], 1);\r\n     * // => true\r\n     *\r\n     * _.includes([1, 2, 3], 1, 2);\r\n     * // => false\r\n     *\r\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\r\n     * // => true\r\n     *\r\n     * _.includes('abcd', 'bc');\r\n     * // => true\r\n     */\r\n    function includes(collection, value, fromIndex, guard) {\r\n      collection = isArrayLike(collection) ? collection : values(collection);\r\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\r\n\r\n      var length = collection.length;\r\n      if (fromIndex < 0) {\r\n        fromIndex = nativeMax(length + fromIndex, 0);\r\n      }\r\n      return isString(collection)\r\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\r\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\r\n    }\r\n\r\n\r\n   // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            //if (!source.hasOwnProperty(key)) {\r\n            //    continue;\r\n            //}\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0),\r\n            target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n   // Return a copy of the object without the blacklisted properties.\r\n    function omit(obj, prop1,prop2) {\r\n        if (!obj) {\r\n            return null;\r\n        }\r\n        var result = mixin({},obj);\r\n        for(var i=1;i<arguments.length;i++) {\r\n            var pn = arguments[i];\r\n            if (pn in obj) {\r\n                delete result[pn];\r\n            }\r\n        }\r\n        return result;\r\n\r\n    }\r\n\r\n   // Return a copy of the object only containing the whitelisted properties.\r\n    function pick(obj,prop1,prop2) {\r\n        if (!obj) {\r\n            return null;\r\n        }\r\n        var result = {};\r\n        for(var i=1;i<arguments.length;i++) {\r\n            var pn = arguments[i];\r\n            if (pn in obj) {\r\n                result[pn] = obj[pn];\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = allKeys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n\r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    return skylark.attach(\"langx.objects\",{\r\n        allKeys: allKeys,\r\n\r\n        attach : _attach,\r\n\r\n        clone: clone,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        each : each,\r\n\r\n        extend : extend,\r\n\r\n        has: has,\r\n\r\n        isEqual: isEqual,   \r\n\r\n        includes: includes,\r\n\r\n        isMatch: isMatch,\r\n\r\n        keys: keys,\r\n\r\n        mixin: mixin,\r\n\r\n        omit: omit,\r\n\r\n        pick: pick,\r\n\r\n        removeItem: removeItem,\r\n\r\n        result : result,\r\n        \r\n        safeMixin: safeMixin,\r\n\r\n        values: values\r\n    });\r\n\r\n\r\n});\ndefine('skylark-langx-objects/main',[\r\n\t\"./objects\"\r\n],function(objects){\r\n\treturn objects;\r\n});\ndefine('skylark-langx-objects', ['skylark-langx-objects/main'], function (main) { return main; });\n\ndefine('skylark-langx-arrays/arrays',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\"\r\n],function(skylark,types,objects){\r\n\tvar filter = Array.prototype.filter,\r\n\t\tisArrayLike = types.isArrayLike;\r\n\r\n    /**\r\n     * The base implementation of `_.findIndex` and `_.findLastIndex` without\r\n     * support for iteratee shorthands.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {Function} predicate The function invoked per iteration.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @param {boolean} [fromRight] Specify iterating from right to left.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseFindIndex(array, predicate, fromIndex, fromRight) {\r\n      var length = array.length,\r\n          index = fromIndex + (fromRight ? 1 : -1);\r\n\r\n      while ((fromRight ? index-- : ++index < length)) {\r\n        if (predicate(array[index], index, array)) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseIndexOf(array, value, fromIndex) {\r\n      if (value !== value) {\r\n        return baseFindIndex(array, baseIsNaN, fromIndex);\r\n      }\r\n      var index = fromIndex - 1,\r\n          length = array.length;\r\n\r\n      while (++index < length) {\r\n        if (array[index] === value) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `isNaN` without support for number objects.\r\n     *\r\n     * @private\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\r\n     */\r\n    function baseIsNaN(value) {\r\n      return value !== value;\r\n    }\r\n\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function filter2(array,func) {\r\n      return filter.call(array,func);\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        objects.each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n\r\n    function forEach (arr, fn) {\r\n      if (arr.forEach) return arr.forEach(fn)\r\n      for (var i = 0; i < arr.length; i++) fn(arr[i], i);\r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n\r\n    function merge( first, second ) {\r\n      var l = second.length,\r\n          i = first.length,\r\n          j = 0;\r\n\r\n      if ( typeof l === \"number\" ) {\r\n        for ( ; j < l; j++ ) {\r\n          first[ i++ ] = second[ j ];\r\n        }\r\n      } else {\r\n        while ( second[j] !== undefined ) {\r\n          first[ i++ ] = second[ j++ ];\r\n        }\r\n      }\r\n\r\n      first.length = i;\r\n\r\n      return first;\r\n    }\r\n\r\n    function reduce(array,callback,initialValue) {\r\n        return Array.prototype.reduce.call(array,callback,initialValue);\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    return skylark.attach(\"langx.arrays\",{\r\n        baseFindIndex: baseFindIndex,\r\n\r\n        baseIndexOf : baseIndexOf,\r\n        \r\n        compact: compact,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n        filter : filter2,\r\n        \r\n        flatten: flatten,\r\n\r\n        grep: grep,\r\n\r\n        inArray: inArray,\r\n\r\n        makeArray: makeArray,\r\n\r\n        merge : merge,\r\n\r\n        forEach : forEach,\r\n\r\n        map : map,\r\n        \r\n        reduce : reduce,\r\n\r\n        uniq : uniq\r\n\r\n    });\r\n});\ndefine('skylark-langx-arrays/main',[\r\n\t\"./arrays\"\r\n],function(arrays){\r\n\treturn arrays;\r\n});\ndefine('skylark-langx-arrays', ['skylark-langx-arrays/main'], function (main) { return main; });\n\ndefine('skylark-langx/arrays',[\r\n\t\"skylark-langx-arrays\"\r\n],function(arrays){\r\n  return arrays;\r\n});\ndefine('skylark-langx-klass/klass',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n],function(skylark,types,objects,arrays){\r\n    var uniq = arrays.uniq,\r\n        has = objects.has,\r\n        mixin = objects.mixin,\r\n        isArray = types.isArray,\r\n        isDefined = types.isDefined;\r\n\r\n/* for reference \r\n function klass(props,parent) {\r\n    var ctor = function(){\r\n        this._construct();\r\n    };\r\n    ctor.prototype = props;\r\n    if (parent) {\r\n        ctor._proto_ = parent;\r\n        props.__proto__ = parent.prototype;\r\n    }\r\n    return ctor;\r\n}\r\n\r\n// Type some JavaScript code here.\r\nlet animal = klass({\r\n  _construct(){\r\n      this.name = this.name + \",hi\";\r\n  },\r\n    \r\n  name: \"Animal\",\r\n  eat() {         // [[HomeObject]] == animal\r\n    alert(`${this.name} eats.`);\r\n  }\r\n    \r\n    \r\n});\r\n\r\n\r\nlet rabbit = klass({\r\n  name: \"Rabbit\",\r\n  _construct(){\r\n      super._construct();\r\n  },\r\n  eat() {         // [[HomeObject]] == rabbit\r\n    super.eat();\r\n  }\r\n},animal);\r\n\r\nlet longEar = klass({\r\n  name: \"Long Ear\",\r\n  eat() {         // [[HomeObject]] == longEar\r\n    super.eat();\r\n  }\r\n},rabbit);\r\n*/\r\n    \r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    var f1 = function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided,\r\n                overrides = options && options.overrides || {};\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                var prop = props[name];\r\n                if (typeof props[name] == \"function\") {\r\n                    proto[name] =  !prop._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                          (function(name, fn, superFn) {\r\n                            return function() {\r\n                                var tmp = this.overrided;\r\n\r\n                                // Add a new ._super() method that is the same method\r\n                                // but on the super-class\r\n                                this.overrided = superFn;\r\n\r\n                                // The method only need to be bound temporarily, so we\r\n                                // remove it when we're done executing\r\n                                var ret = fn.apply(this, arguments);\r\n\r\n                                this.overrided = tmp;\r\n\r\n                                return ret;\r\n                            };\r\n                        })(name, prop, _super[name]) :\r\n                        prop;\r\n                } else if (types.isPlainObject(prop) && prop!==null && (prop.get)) {\r\n                    Object.defineProperty(proto,name,prop);\r\n                } else {\r\n                    proto[name] = prop;\r\n                }\r\n            }\r\n            return ctor;\r\n        }\r\n\r\n        function serialMixins(ctor,mixins) {\r\n            var result = [];\r\n\r\n            mixins.forEach(function(mixin){\r\n                if (has(mixin,\"__mixins__\")) {\r\n                     throw new Error(\"nested mixins\");\r\n                }\r\n                var clss = [];\r\n                while (mixin) {\r\n                    clss.unshift(mixin);\r\n                    mixin = mixin.superclass;\r\n                }\r\n                result = result.concat(clss);\r\n            });\r\n\r\n            result = uniq(result);\r\n\r\n            result = result.filter(function(mixin){\r\n                var cls = ctor;\r\n                while (cls) {\r\n                    if (mixin === cls) {\r\n                        return false;\r\n                    }\r\n                    if (has(cls,\"__mixins__\")) {\r\n                        var clsMixines = cls[\"__mixins__\"];\r\n                        for (var i=0; i<clsMixines.length;i++) {\r\n                            if (clsMixines[i]===mixin) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                    cls = cls.superclass;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if (result.length>0) {\r\n                return result;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function mergeMixins(ctor,mixins) {\r\n            var newCtor =ctor;\r\n            for (var i=0;i<mixins.length;i++) {\r\n                var xtor = new Function();\r\n                xtor.prototype = Object.create(newCtor.prototype);\r\n                xtor.__proto__ = newCtor;\r\n                xtor.superclass = null;\r\n                mixin(xtor.prototype,mixins[i].prototype);\r\n                xtor.prototype.__mixin__ = mixins[i];\r\n                newCtor = xtor;\r\n            }\r\n\r\n            return newCtor;\r\n        }\r\n\r\n        function _constructor ()  {\r\n            if (this._construct) {\r\n                return this._construct.apply(this, arguments);\r\n            } else  if (this.init) {\r\n                return this.init.apply(this, arguments);\r\n            }\r\n        }\r\n\r\n        return function createClass(props, parent, mixins,options) {\r\n            if (isArray(parent)) {\r\n                options = mixins;\r\n                mixins = parent;\r\n                parent = null;\r\n            }\r\n            parent = parent || Object;\r\n\r\n            if (isDefined(mixins) && !isArray(mixins)) {\r\n                options = mixins;\r\n                mixins = false;\r\n            }\r\n\r\n            var innerParent = parent;\r\n\r\n            if (mixins) {\r\n                mixins = serialMixins(innerParent,mixins);\r\n            }\r\n\r\n            if (mixins) {\r\n                innerParent = mergeMixins(innerParent,mixins);\r\n            }\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n\r\n\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(innerParent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = innerParent;\r\n\r\n\r\n            if (!ctor._constructor) {\r\n                ctor._constructor = _constructor;\r\n            } \r\n\r\n            if (mixins) {\r\n                ctor.__mixins__ = mixins;\r\n            }\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, mixins,options) {\r\n                    return createClass(props, this, mixins,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        };\r\n    }\r\n\r\n    var createClass = f1();\r\n\r\n    return skylark.attach(\"langx.klass\",createClass);\r\n});\ndefine('skylark-langx-klass/main',[\r\n\t\"./klass\"\r\n],function(klass){\r\n\treturn klass;\r\n});\ndefine('skylark-langx-klass', ['skylark-langx-klass/main'], function (main) { return main; });\n\ndefine('skylark-langx/klass',[\r\n    \"skylark-langx-klass\"\r\n],function(klass){\r\n    return klass;\r\n});\ndefine('skylark-langx/ArrayStore',[\r\n    \"./klass\"\r\n],function(klass){\r\n    var SimpleQueryEngine = function(query, options){\r\n        // summary:\r\n        //      Simple query engine that matches using filter functions, named filter\r\n        //      functions or objects by name-value on a query object hash\r\n        //\r\n        // description:\r\n        //      The SimpleQueryEngine provides a way of getting a QueryResults through\r\n        //      the use of a simple object hash as a filter.  The hash will be used to\r\n        //      match properties on data objects with the corresponding value given. In\r\n        //      other words, only exact matches will be returned.\r\n        //\r\n        //      This function can be used as a template for more complex query engines;\r\n        //      for example, an engine can be created that accepts an object hash that\r\n        //      contains filtering functions, or a string that gets evaluated, etc.\r\n        //\r\n        //      When creating a new dojo.store, simply set the store's queryEngine\r\n        //      field as a reference to this function.\r\n        //\r\n        // query: Object\r\n        //      An object hash with fields that may match fields of items in the store.\r\n        //      Values in the hash will be compared by normal == operator, but regular expressions\r\n        //      or any object that provides a test() method are also supported and can be\r\n        //      used to match strings by more complex expressions\r\n        //      (and then the regex's or object's test() method will be used to match values).\r\n        //\r\n        // options: dojo/store/api/Store.QueryOptions?\r\n        //      An object that contains optional information such as sort, start, and count.\r\n        //\r\n        // returns: Function\r\n        //      A function that caches the passed query under the field \"matches\".  See any\r\n        //      of the \"query\" methods on dojo.stores.\r\n        //\r\n        // example:\r\n        //      Define a store with a reference to this engine, and set up a query method.\r\n        //\r\n        //  |   var myStore = function(options){\r\n        //  |       //  ...more properties here\r\n        //  |       this.queryEngine = SimpleQueryEngine;\r\n        //  |       //  define our query method\r\n        //  |       this.query = function(query, options){\r\n        //  |           return QueryResults(this.queryEngine(query, options)(this.data));\r\n        //  |       };\r\n        //  |   };\r\n\r\n        // create our matching query function\r\n        switch(typeof query){\r\n            default:\r\n                throw new Error(\"Can not query with a \" + typeof query);\r\n            case \"object\": case \"undefined\":\r\n                var queryObject = query;\r\n                query = function(object){\r\n                    for(var key in queryObject){\r\n                        var required = queryObject[key];\r\n                        if(required && required.test){\r\n                            // an object can provide a test method, which makes it work with regex\r\n                            if(!required.test(object[key], object)){\r\n                                return false;\r\n                            }\r\n                        }else if(required != object[key]){\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                break;\r\n            case \"string\":\r\n                // named query\r\n                if(!this[query]){\r\n                    throw new Error(\"No filter function \" + query + \" was found in store\");\r\n                }\r\n                query = this[query];\r\n                // fall through\r\n            case \"function\":\r\n                // fall through\r\n        }\r\n        \r\n        function filter(arr, callback, thisObject){\r\n            // summary:\r\n            //      Returns a new Array with those items from arr that match the\r\n            //      condition implemented by callback.\r\n            // arr: Array\r\n            //      the array to iterate over.\r\n            // callback: Function|String\r\n            //      a function that is invoked with three arguments (item,\r\n            //      index, array). The return of this function is expected to\r\n            //      be a boolean which determines whether the passed-in item\r\n            //      will be included in the returned array.\r\n            // thisObject: Object?\r\n            //      may be used to scope the call to callback\r\n            // returns: Array\r\n            // description:\r\n            //      This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when\r\n            //      run over sparse arrays, this implementation passes the \"holes\" in the sparse array to\r\n            //      the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array.\r\n            //      For more details, see:\r\n            //      https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\r\n            // example:\r\n            //  | // returns [2, 3, 4]\r\n            //  | array.filter([1, 2, 3, 4], function(item){ return item>1; });\r\n\r\n            // TODO: do we need \"Ctr\" here like in map()?\r\n            var i = 0, l = arr && arr.length || 0, out = [], value;\r\n            if(l && typeof arr == \"string\") arr = arr.split(\"\");\r\n            if(typeof callback == \"string\") callback = cache[callback] || buildFn(callback);\r\n            if(thisObject){\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback.call(thisObject, value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }else{\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback(value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return out; // Array\r\n        }\r\n\r\n        function execute(array){\r\n            // execute the whole query, first we filter\r\n            var results = filter(array, query);\r\n            // next we sort\r\n            var sortSet = options && options.sort;\r\n            if(sortSet){\r\n                results.sort(typeof sortSet == \"function\" ? sortSet : function(a, b){\r\n                    for(var sort, i=0; sort = sortSet[i]; i++){\r\n                        var aValue = a[sort.attribute];\r\n                        var bValue = b[sort.attribute];\r\n                        // valueOf enables proper comparison of dates\r\n                        aValue = aValue != null ? aValue.valueOf() : aValue;\r\n                        bValue = bValue != null ? bValue.valueOf() : bValue;\r\n                        if (aValue != bValue){\r\n                            // modified by lwf 2016/07/09\r\n                            //return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                            return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n            // now we paginate\r\n            if(options && (options.start || options.count)){\r\n                var total = results.length;\r\n                results = results.slice(options.start || 0, (options.start || 0) + (options.count || Infinity));\r\n                results.total = total;\r\n            }\r\n            return results;\r\n        }\r\n        execute.matches = query;\r\n        return execute;\r\n    };\r\n\r\n    var QueryResults = function(results){\r\n        // summary:\r\n        //      A function that wraps the results of a store query with additional\r\n        //      methods.\r\n        // description:\r\n        //      QueryResults is a basic wrapper that allows for array-like iteration\r\n        //      over any kind of returned data from a query.  While the simplest store\r\n        //      will return a plain array of data, other stores may return deferreds or\r\n        //      promises; this wrapper makes sure that *all* results can be treated\r\n        //      the same.\r\n        //\r\n        //      Additional methods include `forEach`, `filter` and `map`.\r\n        // results: Array|dojo/promise/Promise\r\n        //      The result set as an array, or a promise for an array.\r\n        // returns:\r\n        //      An array-like object that can be used for iterating over.\r\n        // example:\r\n        //      Query a store and iterate over the results.\r\n        //\r\n        //  |   store.query({ prime: true }).forEach(function(item){\r\n        //  |       //  do something\r\n        //  |   });\r\n\r\n        if(!results){\r\n            return results;\r\n        }\r\n\r\n        var isPromise = !!results.then;\r\n        // if it is a promise it may be frozen\r\n        if(isPromise){\r\n            results = Object.delegate(results);\r\n        }\r\n        function addIterativeMethod(method){\r\n            // Always add the iterative methods so a QueryResults is\r\n            // returned whether the environment is ES3 or ES5\r\n            results[method] = function(){\r\n                var args = arguments;\r\n                var result = Deferred.when(results, function(results){\r\n                    //Array.prototype.unshift.call(args, results);\r\n                    return QueryResults(Array.prototype[method].apply(results, args));\r\n                });\r\n                // forEach should only return the result of when()\r\n                // when we're wrapping a promise\r\n                if(method !== \"forEach\" || isPromise){\r\n                    return result;\r\n                }\r\n            };\r\n        }\r\n\r\n        addIterativeMethod(\"forEach\");\r\n        addIterativeMethod(\"filter\");\r\n        addIterativeMethod(\"map\");\r\n        if(results.total == null){\r\n            results.total = Deferred.when(results, function(results){\r\n                return results.length;\r\n            });\r\n        }\r\n        return results; // Object\r\n    };\r\n\r\n    var ArrayStore = klass({\r\n        \"klassName\": \"ArrayStore\",\r\n\r\n        \"queryEngine\": SimpleQueryEngine,\r\n        \r\n        \"idProperty\": \"id\",\r\n\r\n\r\n        get: function(id){\r\n            // summary:\r\n            //      Retrieves an object by its identity\r\n            // id: Number\r\n            //      The identity to use to lookup the object\r\n            // returns: Object\r\n            //      The object in the store that matches the given id.\r\n            return this.data[this.index[id]];\r\n        },\r\n\r\n        getIdentity: function(object){\r\n            return object[this.idProperty];\r\n        },\r\n\r\n        put: function(object, options){\r\n            var data = this.data,\r\n                index = this.index,\r\n                idProperty = this.idProperty;\r\n            var id = object[idProperty] = (options && \"id\" in options) ? options.id : idProperty in object ? object[idProperty] : Math.random();\r\n            if(id in index){\r\n                // object exists\r\n                if(options && options.overwrite === false){\r\n                    throw new Error(\"Object already exists\");\r\n                }\r\n                // replace the entry in data\r\n                data[index[id]] = object;\r\n            }else{\r\n                // add the new object\r\n                index[id] = data.push(object) - 1;\r\n            }\r\n            return id;\r\n        },\r\n\r\n        add: function(object, options){\r\n            (options = options || {}).overwrite = false;\r\n            // call put with overwrite being false\r\n            return this.put(object, options);\r\n        },\r\n\r\n        remove: function(id){\r\n            // summary:\r\n            //      Deletes an object by its identity\r\n            // id: Number\r\n            //      The identity to use to delete the object\r\n            // returns: Boolean\r\n            //      Returns true if an object was removed, falsy (undefined) if no object matched the id\r\n            var index = this.index;\r\n            var data = this.data;\r\n            if(id in index){\r\n                data.splice(index[id], 1);\r\n                // now we have to reindex\r\n                this.setData(data);\r\n                return true;\r\n            }\r\n        },\r\n        query: function(query, options){\r\n            // summary:\r\n            //      Queries the store for objects.\r\n            // query: Object\r\n            //      The query to use for retrieving objects from the store.\r\n            // options: dojo/store/api/Store.QueryOptions?\r\n            //      The optional arguments to apply to the resultset.\r\n            // returns: dojo/store/api/Store.QueryResults\r\n            //      The results of the query, extended with iterative methods.\r\n            //\r\n            // example:\r\n            //      Given the following store:\r\n            //\r\n            //  |   var store = new Memory({\r\n            //  |       data: [\r\n            //  |           {id: 1, name: \"one\", prime: false },\r\n            //  |           {id: 2, name: \"two\", even: true, prime: true},\r\n            //  |           {id: 3, name: \"three\", prime: true},\r\n            //  |           {id: 4, name: \"four\", even: true, prime: false},\r\n            //  |           {id: 5, name: \"five\", prime: true}\r\n            //  |       ]\r\n            //  |   });\r\n            //\r\n            //  ...find all items where \"prime\" is true:\r\n            //\r\n            //  |   var results = store.query({ prime: true });\r\n            //\r\n            //  ...or find all items where \"even\" is true:\r\n            //\r\n            //  |   var results = store.query({ even: true });\r\n            return QueryResults(this.queryEngine(query, options)(this.data));\r\n        },\r\n\r\n        setData: function(data){\r\n            // summary:\r\n            //      Sets the given data as the source for this store, and indexes it\r\n            // data: Object[]\r\n            //      An array of objects to use as the source of data.\r\n            if(data.items){\r\n                // just for convenience with the data format IFRS expects\r\n                this.idProperty = data.identifier || this.idProperty;\r\n                data = this.data = data.items;\r\n            }else{\r\n                this.data = data;\r\n            }\r\n            this.index = {};\r\n            for(var i = 0, l = data.length; i < l; i++){\r\n                this.index[data[i][this.idProperty]] = i;\r\n            }\r\n        },\r\n\r\n        init: function(options) {\r\n            for(var i in options){\r\n                this[i] = options[i];\r\n            }\r\n            this.setData(this.data || []);\r\n        }\r\n\r\n    });\r\n\r\n\treturn ArrayStore;\r\n});\ndefine('skylark-langx-aspect/aspect',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n\r\n  var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n    return skylark.attach(\"langx.aspect\",{\r\n        after: aspect(\"after\"),\r\n \r\n        around: aspect(\"around\"),\r\n        \r\n        before: aspect(\"before\")\r\n    });\r\n});\ndefine('skylark-langx-aspect/main',[\r\n\t\"./aspect\"\r\n],function(aspect){\r\n\treturn aspect;\r\n});\ndefine('skylark-langx-aspect', ['skylark-langx-aspect/main'], function (main) { return main; });\n\ndefine('skylark-langx/aspect',[\r\n    \"skylark-langx-aspect\"\r\n],function(aspect){\r\n  return aspect;\r\n});\ndefine('skylark-langx-funcs/funcs',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\"\r\n],function(skylark,types,objects){\r\n\tvar mixin = objects.mixin,\r\n        slice = Array.prototype.slice,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString;\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n    function debounce(fn, wait) {\r\n        var timeout;\r\n        return function () {\r\n            var context = this, args = arguments;\r\n            var later = function () {\r\n                timeout = null;\r\n                fn.apply(context, args);\r\n            };\r\n            if (timeout) clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n   \r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n  var templateSettings = {\r\n    evaluate: /<%([\\s\\S]+?)%>/g,\r\n    interpolate: /<%=([\\s\\S]+?)%>/g,\r\n    escape: /<%-([\\s\\S]+?)%>/g\r\n  };\r\n\r\n\r\n  function template(text, settings, oldSettings) {\r\n    if (!settings && oldSettings) settings = oldSettings;\r\n    settings = objects.defaults({}, settings,templateSettings);\r\n\r\n    // Combine delimiters into one regular expression via alternation.\r\n    var matcher = RegExp([\r\n      (settings.escape || noMatch).source,\r\n      (settings.interpolate || noMatch).source,\r\n      (settings.evaluate || noMatch).source\r\n    ].join('|') + '|$', 'g');\r\n\r\n    // Compile the template source, escaping string literals appropriately.\r\n    var index = 0;\r\n    var source = \"__p+='\";\r\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\r\n      source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\r\n      index = offset + match.length;\r\n\r\n      if (escape) {\r\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\r\n      } else if (interpolate) {\r\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\r\n      } else if (evaluate) {\r\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\r\n      }\r\n\r\n      // Adobe VMs need the match returned to produce the correct offset.\r\n      return match;\r\n    });\r\n    source += \"';\\n\";\r\n\r\n    // If a variable is not specified, place data values in local scope.\r\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\r\n\r\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\r\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\r\n      source + 'return __p;\\n';\r\n\r\n    var render;\r\n    try {\r\n      render = new Function(settings.variable || 'obj', '_', source);\r\n    } catch (e) {\r\n      e.source = source;\r\n      throw e;\r\n    }\r\n\r\n    var template = function(data) {\r\n      return render.call(this, data, _);\r\n    };\r\n\r\n    // Provide the compiled source as a convenience for precompilation.\r\n    var argument = settings.variable || 'obj';\r\n    template.source = 'function(' + argument + '){\\n' + source + '}';\r\n\r\n    return template;\r\n  };\r\n\r\n    return skylark.attach(\"langx.funcs\",{\r\n        debounce: debounce,\r\n\r\n        delegate: delegate,\r\n\r\n        defer: defer,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        templateSettings : templateSettings,\r\n        template : template\r\n    });\r\n});\ndefine('skylark-langx-funcs/main',[\r\n\t\"./funcs\"\r\n],function(funcs){\r\n\treturn funcs;\r\n});\ndefine('skylark-langx-funcs', ['skylark-langx-funcs/main'], function (main) { return main; });\n\ndefine('skylark-langx-async/Deferred',[\r\n    \"skylark-langx-arrays\",\r\n\t\"skylark-langx-funcs\",\r\n    \"skylark-langx-objects\"\r\n],function(arrays,funcs,objects){\r\n    \"use strict\";\r\n    \r\n    var  PGLISTENERS = Symbol ? Symbol() : '__pglisteners',\r\n         PGNOTIFIES = Symbol ? Symbol() : '__pgnotifies';\r\n\r\n    var slice = Array.prototype.slice,\r\n        proxy = funcs.proxy,\r\n        makeArray = arrays.makeArray,\r\n        result = objects.result,\r\n        mixin = objects.mixin;\r\n\r\n    mixin(Promise.prototype,{\r\n        always: function(handler) {\r\n            //this.done(handler);\r\n            //this.fail(handler);\r\n            this.then(handler,handler);\r\n            return this;\r\n        },\r\n        done : function() {\r\n            for (var i = 0;i<arguments.length;i++) {\r\n                this.then(arguments[i]);\r\n            }\r\n            return this;\r\n        },\r\n        fail : function(handler) { \r\n            //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n            //return this.then(null,handler);\r\n            this.catch(handler);\r\n            return this;\r\n         }\r\n    });\r\n\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            });\r\n\r\n        wrapPromise(p,self);\r\n\r\n        this[PGLISTENERS] = [];\r\n        this[PGNOTIFIES] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n    function wrapPromise(p,d) {\r\n        var   added = {\r\n                state : function() {\r\n                    if (d.isResolved()) {\r\n                        return 'resolved';\r\n                    }\r\n                    if (d.isRejected()) {\r\n                        return 'rejected';\r\n                    }\r\n                    return 'pending';\r\n                },\r\n                then : function(onResolved,onRejected,onProgress) {\r\n                    if (onProgress) {\r\n                        this.progress(onProgress);\r\n                    }\r\n                    return wrapPromise(Promise.prototype.then.call(this,\r\n                            onResolved && function(args) {\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onResolved.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onResolved(args);\r\n                                }\r\n                            },\r\n                            onRejected && function(args){\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onRejected.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onRejected(args);\r\n                                }\r\n                            }));\r\n                },\r\n                progress : function(handler) {\r\n                    d[PGNOTIFIES].forEach(function (value) {\r\n                        handler(value);\r\n                    });\r\n                    d[PGLISTENERS].push(handler);\r\n                    return this;\r\n                }\r\n\r\n            };\r\n\r\n        added.pipe = added.then;\r\n        return mixin(p,added);\r\n\r\n    }\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.notify = function(value) {\r\n        try {\r\n            this[PGNOTIFIES].push(value);\r\n\r\n            return this[PGLISTENERS].forEach(function (listener) {\r\n                return listener(value);\r\n            });\r\n        } catch (error) {\r\n          this.reject(error);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        return !!this._resolved;\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        return !!this._rejected;\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.progress = function(progback){\r\n        var p = result(this,\"promise\");\r\n        return p.progress(progback);\r\n    };\r\n   \r\n    Deferred.prototype.catch = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        return p.catch(errback);\r\n    };\r\n\r\n\r\n    Deferred.prototype.done  = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.done.apply(p,arguments);\r\n    };\r\n\r\n    Deferred.prototype.fail = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        return p.fail(errback);\r\n    };\r\n\r\n\r\n    Deferred.all = function(array) {\r\n        //return wrapPromise(Promise.all(array));\r\n        var d = new Deferred();\r\n        Promise.all(array).then(d.resolve.bind(d),d.reject.bind(d));\r\n        return result(d,\"promise\");\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return wrapPromise(Promise.race(array));\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(proxy(deferred.resolve,deferred), proxy(deferred.reject,deferred), deferred.notify);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve.apply(d,arguments);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    return Deferred;\r\n});\ndefine('skylark-langx-async/async',[\r\n    \"skylark-langx-ns\",\r\n    \"skylark-langx-objects\",\r\n    \"./Deferred\"\r\n],function(skylark,objects,Deferred){\r\n    var each = objects.each;\r\n    \r\n    var async = {\r\n        Deferred : Deferred,\r\n\r\n        parallel : function(arr,args,ctx) {\r\n            var rets = [];\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            each(arr,function(i,func){\r\n                rets.push(func.apply(ctx,args));\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        series : function(arr,args,ctx) {\r\n            var rets = [],\r\n                d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolve();\r\n            each(arr,function(i,func){\r\n                p = p.then(function(){\r\n                    return func.apply(ctx,args);\r\n                });\r\n                rets.push(p);\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        waterful : function(arr,args,ctx) {\r\n            var d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolveWith(ctx,args);\r\n\r\n            each(arr,function(i,func){\r\n                p = p.then(func);\r\n            });\r\n            return p;\r\n        }\r\n    };\r\n\r\n\treturn skylark.attach(\"langx.async\",async);\t\r\n});\ndefine('skylark-langx-async/main',[\r\n\t\"./async\"\r\n],function(async){\r\n\treturn async;\r\n});\ndefine('skylark-langx-async', ['skylark-langx-async/main'], function (main) { return main; });\n\ndefine('skylark-langx/async',[\r\n    \"skylark-langx-async\"\r\n],function(async){\r\n    return async;\r\n});\ndefine('skylark-langx-datetimes/datetimes',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n     function parseMilliSeconds(str) {\r\n\r\n        var strs = str.split(' ');\r\n        var number = parseInt(strs[0]);\r\n\r\n        if (isNaN(number)){\r\n            return 0;\r\n        }\r\n\r\n        var min = 60000 * 60;\r\n\r\n        switch (strs[1].trim().replace(/\\./g, '')) {\r\n            case 'minutes':\r\n            case 'minute':\r\n            case 'min':\r\n            case 'mm':\r\n            case 'm':\r\n                return 60000 * number;\r\n            case 'hours':\r\n            case 'hour':\r\n            case 'HH':\r\n            case 'hh':\r\n            case 'h':\r\n            case 'H':\r\n                return min * number;\r\n            case 'seconds':\r\n            case 'second':\r\n            case 'sec':\r\n            case 'ss':\r\n            case 's':\r\n                return 1000 * number;\r\n            case 'days':\r\n            case 'day':\r\n            case 'DD':\r\n            case 'dd':\r\n            case 'd':\r\n                return (min * 24) * number;\r\n            case 'months':\r\n            case 'month':\r\n            case 'MM':\r\n            case 'M':\r\n                return (min * 24 * 28) * number;\r\n            case 'weeks':\r\n            case 'week':\r\n            case 'W':\r\n            case 'w':\r\n                return (min * 24 * 7) * number;\r\n            case 'years':\r\n            case 'year':\r\n            case 'yyyy':\r\n            case 'yy':\r\n            case 'y':\r\n                return (min * 24 * 365) * number;\r\n            default:\r\n                return 0;\r\n        }\r\n    };\r\n\t\r\n\treturn skylark.attach(\"langx.datetimes\",{\r\n\t\tparseMilliSeconds\r\n\t});\r\n});\ndefine('skylark-langx-datetimes/main',[\r\n\t\"./datetimes\"\r\n],function(datetimes){\r\n\treturn datetimes;\r\n});\ndefine('skylark-langx-datetimes', ['skylark-langx-datetimes/main'], function (main) { return main; });\n\ndefine('skylark-langx/datetimes',[\r\n    \"skylark-langx-datetimes\"\r\n],function(datetimes){\r\n    return datetimes;\r\n});\ndefine('skylark-langx/Deferred',[\r\n    \"skylark-langx-async/Deferred\"\r\n],function(Deferred){\r\n    return Deferred;\r\n});\ndefine('skylark-langx-emitter/Evented',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n  \"skylark-langx-klass\"\r\n],function(skylark,types,objects,arrays,klass){\r\n    var slice = Array.prototype.slice,\r\n        compact = arrays.compact,\r\n        isDefined = types.isDefined,\r\n        isPlainObject = types.isPlainObject,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString,\r\n        isEmptyObject = types.isEmptyObject,\r\n        mixin = objects.mixin;\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            name: segs[0],\r\n            ns: segs.slice(1).join(\" \")\r\n        };\r\n    }\r\n\r\n    var Evented = klass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    ns : ns,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        trigger: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var parsed = parse(eventName),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var listeners = self._hub[name];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (ns && (!listener.ns ||  !listener.ns.startsWith(ns))) {\r\n                        continue;\r\n                    }\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var evts = _hub[name];\r\n\r\n                if (evts) {\r\n                    var liveEvents = [];\r\n\r\n                    if (callback || ns) {\r\n                        for (var i = 0, len = evts.length; i < len; i++) {\r\n                            \r\n                            if (callback && evts[i].fn !== callback && evts[i].fn._ !== callback) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            } \r\n\r\n                            if (ns && (!evts[i].ns || evts[i].ns.indexOf(ns)!=0)) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (liveEvents.length) {\r\n                        _hub[name] = liveEvents;\r\n                    } else {\r\n                        delete _hub[name];\r\n                    }\r\n\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    var listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n    return skylark.attach(\"langx.Evented\",Evented);\r\n\r\n});\ndefine('skylark-langx-emitter/main',[\r\n\t\"./Evented\"\r\n],function(Evented){\r\n\treturn Evented;\r\n});\ndefine('skylark-langx-emitter', ['skylark-langx-emitter/main'], function (main) { return main; });\n\ndefine('skylark-langx/Evented',[\r\n    \"skylark-langx-emitter\"\r\n],function(Evented){\r\n    return Evented;\r\n});\ndefine('skylark-langx/funcs',[\r\n    \"skylark-langx-funcs\"\r\n],function(funcs){\r\n    return funcs;\r\n});\ndefine('skylark-langx-hoster/hoster',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n\t// The javascript host environment, brower and nodejs are supported.\r\n\tvar hoster = {\r\n\t\t\"isBrowser\" : true, // default\r\n\t\t\"isNode\" : null,\r\n\t\t\"global\" : this,\r\n\t\t\"browser\" : null,\r\n\t\t\"node\" : null\r\n\t};\r\n\r\n\tif (typeof process == \"object\" && process.versions && process.versions.node && process.versions.v8) {\r\n\t\thoster.isNode = true;\r\n\t\thoster.isBrowser = false;\r\n\t}\r\n\r\n\thoster.global = (function(){\r\n\t\tif (typeof global !== 'undefined' && typeof global !== 'function') {\r\n\t\t\t// global spec defines a reference to the global object called 'global'\r\n\t\t\t// https://github.com/tc39/proposal-global\r\n\t\t\t// `global` is also defined in NodeJS\r\n\t\t\treturn global;\r\n\t\t} else if (typeof window !== 'undefined') {\r\n\t\t\t// window is defined in browsers\r\n\t\t\treturn window;\r\n\t\t}\r\n\t\telse if (typeof self !== 'undefined') {\r\n\t\t\t// self is defined in WebWorkers\r\n\t\t\treturn self;\r\n\t\t}\r\n\t\treturn this;\r\n\t})();\r\n\r\n\tvar _document = null;\r\n\r\n\tObject.defineProperty(hoster,\"document\",function(){\r\n\t\tif (!_document) {\r\n\t\t\tvar w = typeof window === 'undefined' ? require('html-element') : window;\r\n\t\t\t_document = w.document;\r\n\t\t}\r\n\r\n\t\treturn _document;\r\n\t});\r\n\r\n\tif (hoster.isBrowser) {\r\n\t    function uaMatch( ua ) {\r\n\t\t    ua = ua.toLowerCase();\r\n\r\n\t\t    var match = /(chrome)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(webkit)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(msie) ([\\w.]+)/.exec( ua ) ||\r\n\t\t      ua.indexOf('compatible') < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec( ua ) ||\r\n\t\t      [];\r\n\r\n\t\t    return {\r\n\t\t      browser: match[ 1 ] || '',\r\n\t\t      version: match[ 2 ] || '0'\r\n\t\t    };\r\n\t  \t};\r\n\r\n\t    var matched = uaMatch( navigator.userAgent );\r\n\r\n\t    var browser = hoster.browser = {};\r\n\r\n\t    if ( matched.browser ) {\r\n\t      browser[ matched.browser ] = true;\r\n\t      browser.version = matched.version;\r\n\t    }\r\n\r\n\t    // Chrome is Webkit, but Webkit is also Safari.\r\n\t    if ( browser.chrome ) {\r\n\t      browser.webkit = true;\r\n\t    } else if ( browser.webkit ) {\r\n\t      browser.safari = true;\r\n\t    }\r\n\t}\r\n\r\n\treturn  skylark.attach(\"langx.hoster\",hoster);\r\n});\ndefine('skylark-langx-hoster/main',[\r\n\t\"./hoster\"\r\n],function(hoster){\r\n\treturn hoster;\r\n});\ndefine('skylark-langx-hoster', ['skylark-langx-hoster/main'], function (main) { return main; });\n\ndefine('skylark-langx/hoster',[\r\n\t\"skylark-langx-hoster\"\r\n],function(hoster){\r\n\treturn hoster;\r\n});\ndefine('skylark-langx/numbers',[\r\n\t\"skylark-langx-numbers\"\r\n],function(numbers){\r\n\treturn numbers;\r\n});\ndefine('skylark-langx/objects',[\r\n    \"skylark-langx-objects\"\r\n],function(objects){\r\n    return objects;\r\n});\ndefine('skylark-langx-strings/strings',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n    // add default escape function for escaping HTML entities\r\n    var escapeCharMap = Object.freeze({\r\n        '&': '&amp;',\r\n        '<': '&lt;',\r\n        '>': '&gt;',\r\n        '\"': '&quot;',\r\n        \"'\": '&#x27;',\r\n        '`': '&#x60;',\r\n        '=': '&#x3D;',\r\n    });\r\n    function replaceChar(c) {\r\n        return escapeCharMap[c];\r\n    }\r\n    var escapeChars = /[&<>\"'`=]/g;\r\n\r\n\r\n     /*\r\n     * Converts camel case into dashes.\r\n     * @param {String} str\r\n     * @return {String}\r\n     * @exapmle marginTop -> margin-top\r\n     */\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function escapeHTML(str) {\r\n        if (str == null) {\r\n            return '';\r\n        }\r\n        if (!str) {\r\n            return String(str);\r\n        }\r\n\r\n        return str.toString().replace(escapeChars, replaceChar);\r\n    }\r\n\r\n    function generateUUID() {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = Math.random() * 16 | 0;\r\n            var v = c === 'x' ? r : ((r & 0x3) | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    }\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n\r\n    /**\r\n     * https://github.com/cho45/micro-template.js\r\n     * (c) cho45 http://cho45.github.com/mit-license\r\n     */\r\n    function template (id, data) {\r\n\r\n        function include(name, args) {\r\n            var stash = {};\r\n            for (var key in template.context.stash) if (template.context.stash.hasOwnProperty(key)) {\r\n                stash[key] = template.context.stash[key];\r\n            }\r\n            if (args) for (var key in args) if (args.hasOwnProperty(key)) {\r\n                stash[key] = args[key];\r\n            }\r\n            var context = template.context;\r\n            context.ret += template(name, stash);\r\n            template.context = context;\r\n        }\r\n\r\n        function wrapper(name, fun) {\r\n            var current = template.context.ret;\r\n            template.context.ret = '';\r\n            fun.apply(template.context);\r\n            var content = template.context.ret;\r\n            var orig_content = template.context.stash.content;\r\n            template.context.stash.content = content;\r\n            template.context.ret = current + template(name, template.context.stash);\r\n            template.context.stash.content = orig_content;\r\n        }\r\n\r\n        var me = arguments.callee;\r\n        if (!me.cache[id]) me.cache[id] = (function () {\r\n            var name = id, string = /^[\\w\\-]+$/.test(id) ? me.get(id): (name = 'template(string)', id); // no warnings\r\n            var line = 1, body = (\r\n                \"try { \" +\r\n                    (me.variable ?  \"var \" + me.variable + \" = this.stash;\" : \"with (this.stash) { \") +\r\n                        \"this.ret += '\"  +\r\n                        string.\r\n                            replace(/<%/g, '\\x11').replace(/%>/g, '\\x13'). // if you want other tag, just edit this line\r\n                            replace(/'(?![^\\x11\\x13]+?\\x13)/g, '\\\\x27').\r\n                            replace(/^\\s*|\\s*$/g, '').\r\n                            replace(/\\n|\\r\\n/g, function () { return \"';\\nthis.line = \" + (++line) + \"; this.ret += '\\\\n\" }).\r\n                            replace(/\\x11=raw(.+?)\\x13/g, \"' + ($1) + '\").\r\n                            replace(/\\x11=(.+?)\\x13/g, \"' + this.escapeHTML($1) + '\").\r\n                            replace(/\\x11(.+?)\\x13/g, \"'; $1; this.ret += '\") +\r\n                    \"'; \" + (me.variable ? \"\" : \"}\") + \"return this.ret;\" +\r\n                \"} catch (e) { throw 'TemplateError: ' + e + ' (on \" + name + \"' + ' line ' + this.line + ')'; } \" +\r\n                \"//@ sourceURL=\" + name + \"\\n\" // source map\r\n            ).replace(/this\\.ret \\+= '';/g, '');\r\n            var func = new Function(body);\r\n            var map  = { '&' : '&amp;', '<' : '&lt;', '>' : '&gt;', '\\x22' : '&#x22;', '\\x27' : '&#x27;' };\r\n            var escapeHTML = function (string) { return (''+string).replace(/[&<>\\'\\\"]/g, function (_) { return map[_] }) };\r\n            return function (stash) { return func.call(me.context = { escapeHTML: escapeHTML, line: 1, ret : '', stash: stash }) };\r\n        })();\r\n        return data ? me.cache[id](data) : me.cache[id];\r\n    }\r\n\r\n    template.cache = {};\r\n    \r\n\r\n    template.get = function (id) {\r\n        return document.getElementById(id).innerHTML;\r\n    };\r\n\r\n    function rtrim(str) {\r\n        return str.replace(/\\s+$/g, '');\r\n    }\r\n\r\n    // Slugify a string\r\n    function slugify(str) {\r\n        str = str.replace(/^\\s+|\\s+$/g, '');\r\n\r\n        // Make the string lowercase\r\n        str = str.toLowerCase();\r\n\r\n        // Remove accents, swap ñ for n, etc\r\n        var from = \"ÁÄÂÀÃÅČÇĆĎÉĚËÈÊẼĔȆÍÌÎÏŇÑÓÖÒÔÕØŘŔŠŤÚŮÜÙÛÝŸŽáäâàãåčçćďéěëèêẽĕȇíìîïňñóöòôõøðřŕšťúůüùûýÿžþÞĐđßÆa·/_,:;\";\r\n        var to   = \"AAAAAACCCDEEEEEEEEIIIINNOOOOOORRSTUUUUUYYZaaaaaacccdeeeeeeeeiiiinnooooooorrstuuuuuyyzbBDdBAa------\";\r\n        for (var i=0, l=from.length ; i<l ; i++) {\r\n            str = str.replace(new RegExp(from.charAt(i), 'g'), to.charAt(i));\r\n        }\r\n\r\n        // Remove invalid chars\r\n        //str = str.replace(/[^a-z0-9 -]/g, '') \r\n        // Collapse whitespace and replace by -\r\n        str = str.replace(/\\s+/g, '-') \r\n        // Collapse dashes\r\n        .replace(/-+/g, '-'); \r\n\r\n        return str;\r\n    }    \r\n\r\n    // return boolean if string 'true' or string 'false', or if a parsable string which is a number\r\n    // also supports JSON object and/or arrays parsing\r\n    function toType(str) {\r\n        var type = typeof str;\r\n        if (type !== 'string') {\r\n            return str;\r\n        }\r\n        var nb = parseFloat(str);\r\n        if (!isNaN(nb) && isFinite(str)) {\r\n            return nb;\r\n        }\r\n        if (str === 'false') {\r\n            return false;\r\n        }\r\n        if (str === 'true') {\r\n            return true;\r\n        }\r\n\r\n        try {\r\n            str = JSON.parse(str);\r\n        } catch (e) {}\r\n\r\n        return str;\r\n    }\r\n\r\n\treturn skylark.attach(\"langx.strings\",{\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n        dasherize: dasherize,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        escapeHTML : escapeHTML,\r\n\r\n        generateUUID : generateUUID,\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        rtrim : rtrim,\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n\r\n        substitute: substitute,\r\n\r\n        slugify : slugify,\r\n\r\n        template : template,\r\n\r\n        trim: trim,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        }\r\n\t}) ; \r\n\r\n});\ndefine('skylark-langx-strings/main',[\r\n\t\"./strings\"\r\n],function(strings){\r\n\treturn strings;\r\n});\ndefine('skylark-langx-strings', ['skylark-langx-strings/main'], function (main) { return main; });\n\ndefine('skylark-langx/strings',[\r\n    \"skylark-langx-strings\"\r\n],function(strings){\r\n    return strings;\r\n});\ndefine('skylark-net-http/http',[\r\n  \"skylark-langx-ns/ns\",\r\n],function(skylark){\r\n\treturn skylark.attach(\"net.http\",{});\r\n});\ndefine('skylark-net-http/Xhr',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n  \"skylark-langx-funcs\",\r\n  \"skylark-langx-async/Deferred\",\r\n  \"skylark-langx-emitter/Evented\",\r\n  \"./http\"\r\n],function(skylark,types,objects,arrays,funcs,Deferred,Evented,http){\r\n\r\n    var each = objects.each,\r\n        mixin = objects.mixin,\r\n        noop = funcs.noop,\r\n        isArray = types.isArray,\r\n        isFunction = types.isFunction,\r\n        isPlainObject = types.isPlainObject,\r\n        type = types.type;\r\n \r\n     var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n   \r\n    var Xhr = (function(){\r\n        var jsonpID = 0,\r\n            key,\r\n            name,\r\n            rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n            scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n            xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n            jsonType = 'application/json',\r\n            htmlType = 'text/html',\r\n            blankRE = /^\\s*$/;\r\n\r\n        var XhrDefaultOptions = {\r\n            async: true,\r\n\r\n            // Default type of request\r\n            type: 'GET',\r\n            // Callback that is executed before request\r\n            beforeSend: noop,\r\n            // Callback that is executed if the request succeeds\r\n            success: noop,\r\n            // Callback that is executed the the server drops error\r\n            error: noop,\r\n            // Callback that is executed on request complete (both: error and success)\r\n            complete: noop,\r\n            // The context for the callbacks\r\n            context: null,\r\n            // Whether to trigger \"global\" Ajax events\r\n            global: true,\r\n\r\n            // MIME types mapping\r\n            // IIS returns Javascript as \"application/x-javascript\"\r\n            accepts: {\r\n                script: 'text/javascript, application/javascript, application/x-javascript',\r\n                json: 'application/json',\r\n                xml: 'application/xml, text/xml',\r\n                html: 'text/html',\r\n                text: 'text/plain'\r\n            },\r\n            // Whether the request is to another domain\r\n            crossDomain: false,\r\n            // Default timeout\r\n            timeout: 0,\r\n            // Whether data should be serialized to string\r\n            processData: true,\r\n            // Whether the browser should be allowed to cache GET responses\r\n            cache: true,\r\n\r\n            xhrFields : {\r\n                withCredentials : true\r\n            }\r\n        };\r\n\r\n        function mimeToDataType(mime) {\r\n            if (mime) {\r\n                mime = mime.split(';', 2)[0];\r\n            }\r\n            if (mime) {\r\n                if (mime == htmlType) {\r\n                    return \"html\";\r\n                } else if (mime == jsonType) {\r\n                    return \"json\";\r\n                } else if (scriptTypeRE.test(mime)) {\r\n                    return \"script\";\r\n                } else if (xmlTypeRE.test(mime)) {\r\n                    return \"xml\";\r\n                }\r\n            }\r\n            return \"text\";\r\n        }\r\n\r\n        function appendQuery(url, query) {\r\n            if (query == '') return url\r\n            return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n        }\r\n\r\n        // serialize payload and append it to the URL for GET requests\r\n        function serializeData(options) {\r\n            options.data = options.data || options.query;\r\n            if (options.processData && options.data && type(options.data) != \"string\") {\r\n                options.data = param(options.data, options.traditional);\r\n            }\r\n            if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n                options.url = appendQuery(options.url, options.data);\r\n                options.data = undefined;\r\n            }\r\n        }\r\n\r\n        function serialize(params, obj, traditional, scope) {\r\n            var t, array = isArray(obj),\r\n                hash = isPlainObject(obj)\r\n            each(obj, function(key, value) {\r\n                t =type(value);\r\n                if (scope) key = traditional ? scope :\r\n                    scope + '[' + (hash || t == 'object' || t == 'array' ? key : '') + ']'\r\n                // handle data in serializeArray() format\r\n                if (!scope && array) params.add(value.name, value.value)\r\n                // recurse into nested objects\r\n                else if (t == \"array\" || (!traditional && t == \"object\"))\r\n                    serialize(params, value, traditional, key)\r\n                else params.add(key, value)\r\n            })\r\n        }\r\n\r\n        var param = function(obj, traditional) {\r\n            var params = []\r\n            params.add = function(key, value) {\r\n                if (isFunction(value)) {\r\n                  value = value();\r\n                }\r\n                if (value == null) {\r\n                  value = \"\";\r\n                }\r\n                this.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n            };\r\n            serialize(params, obj, traditional)\r\n            return params.join('&').replace(/%20/g, '+')\r\n        };\r\n\r\n        var Xhr = Evented.inherit({\r\n            klassName : \"Xhr\",\r\n\r\n            _request  : function(args) {\r\n                var _ = this._,\r\n                    self = this,\r\n                    options = mixin({},XhrDefaultOptions,_.options,args),\r\n                    xhr = _.xhr = new XMLHttpRequest();\r\n\r\n                serializeData(options)\r\n\r\n                if (options.beforeSend) {\r\n                    options.beforeSend.call(this, xhr, options);\r\n                }                \r\n\r\n                var dataType = options.dataType || options.handleAs,\r\n                    mime = options.mimeType || options.accepts[dataType],\r\n                    headers = options.headers,\r\n                    xhrFields = options.xhrFields,\r\n                    isFormData = options.data && options.data instanceof FormData,\r\n                    basicAuthorizationToken = options.basicAuthorizationToken,\r\n                    type = options.type,\r\n                    url = options.url,\r\n                    async = options.async,\r\n                    user = options.user , \r\n                    password = options.password,\r\n                    deferred = new Deferred(),\r\n                    contentType = isFormData ? false : 'application/x-www-form-urlencoded';\r\n\r\n                if (xhrFields) {\r\n                    for (name in xhrFields) {\r\n                        xhr[name] = xhrFields[name];\r\n                    }\r\n                }\r\n\r\n                if (mime && mime.indexOf(',') > -1) {\r\n                    mime = mime.split(',', 2)[0];\r\n                }\r\n                if (mime && xhr.overrideMimeType) {\r\n                    xhr.overrideMimeType(mime);\r\n                }\r\n\r\n                //if (dataType) {\r\n                //    xhr.responseType = dataType;\r\n                //}\r\n\r\n                var finish = function() {\r\n                    xhr.onloadend = noop;\r\n                    xhr.onabort = noop;\r\n                    xhr.onprogress = noop;\r\n                    xhr.ontimeout = noop;\r\n                    xhr = null;\r\n                }\r\n                var onloadend = function() {\r\n                    var result, error = false\r\n                    if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && getAbsoluteUrl(url).startsWith('file:'))) {\r\n                        dataType = dataType || mimeToDataType(options.mimeType || xhr.getResponseHeader('content-type'));\r\n\r\n                        result = xhr.responseText;\r\n                        try {\r\n                            if (dataType == 'script') {\r\n                                eval(result);\r\n                            } else if (dataType == 'xml') {\r\n                                result = xhr.responseXML;\r\n                            } else if (dataType == 'json') {\r\n                                result = blankRE.test(result) ? null : JSON.parse(result);\r\n                            } else if (dataType == \"blob\") {\r\n                                result = Blob([xhrObj.response]);\r\n                            } else if (dataType == \"arraybuffer\") {\r\n                                result = xhr.reponse;\r\n                            }\r\n                        } catch (e) { \r\n                            error = e;\r\n                        }\r\n\r\n                        if (error) {\r\n                            deferred.reject(error,xhr.status,xhr);\r\n                        } else {\r\n                            deferred.resolve(result,xhr.status,xhr);\r\n                        }\r\n                    } else {\r\n                        deferred.reject(new Error(xhr.statusText),xhr.status,xhr);\r\n                    }\r\n                    finish();\r\n                };\r\n\r\n                var onabort = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"abort\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n \r\n                var ontimeout = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"timeout\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n\r\n                var onprogress = function(evt) {\r\n                    if (deferred) {\r\n                        deferred.notify(evt,xhr.status,xhr);\r\n                    }\r\n                }\r\n\r\n                xhr.onloadend = onloadend;\r\n                xhr.onabort = onabort;\r\n                xhr.ontimeout = ontimeout;\r\n                xhr.onprogress = onprogress;\r\n\r\n                xhr.open(type, url, async, user, password);\r\n               \r\n                if (headers) {\r\n                    for ( var key in headers) {\r\n                        var value = headers[key];\r\n \r\n                        if(key.toLowerCase() === 'content-type'){\r\n                            contentType = headers[hdr];\r\n                        } else {\r\n                           xhr.setRequestHeader(key, value);\r\n                        }\r\n                    }\r\n                }   \r\n\r\n                if  (contentType && contentType !== false){\r\n                    xhr.setRequestHeader('Content-Type', contentType);\r\n                }\r\n\r\n                if(!headers || !('X-Requested-With' in headers)){\r\n                    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n                }\r\n\r\n\r\n                //If basicAuthorizationToken is defined set its value into \"Authorization\" header\r\n                if (basicAuthorizationToken) {\r\n                    xhr.setRequestHeader(\"Authorization\", basicAuthorizationToken);\r\n                }\r\n\r\n                xhr.send(options.data ? options.data : null);\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n\r\n            \"abort\": function() {\r\n                var _ = this._,\r\n                    xhr = _.xhr;\r\n\r\n                if (xhr) {\r\n                    xhr.abort();\r\n                }    \r\n            },\r\n\r\n\r\n            \"request\": function(args) {\r\n                return this._request(args);\r\n            },\r\n\r\n            get : function(args) {\r\n                args = args || {};\r\n                args.type = \"GET\";\r\n                return this._request(args);\r\n            },\r\n\r\n            post : function(args) {\r\n                args = args || {};\r\n                args.type = \"POST\";\r\n                return this._request(args);\r\n            },\r\n\r\n            patch : function(args) {\r\n                args = args || {};\r\n                args.type = \"PATCH\";\r\n                return this._request(args);\r\n            },\r\n\r\n            put : function(args) {\r\n                args = args || {};\r\n                args.type = \"PUT\";\r\n                return this._request(args);\r\n            },\r\n\r\n            del : function(args) {\r\n                args = args || {};\r\n                args.type = \"DELETE\";\r\n                return this._request(args);\r\n            },\r\n\r\n            \"init\": function(options) {\r\n                this._ = {\r\n                    options : options || {}\r\n                };\r\n            }\r\n        });\r\n\r\n        [\"request\",\"get\",\"post\",\"put\",\"del\",\"patch\"].forEach(function(name){\r\n            Xhr[name] = function(url,args) {\r\n                var xhr = new Xhr({\"url\" : url});\r\n                return xhr[name](args);\r\n            };\r\n        });\r\n\r\n        Xhr.defaultOptions = XhrDefaultOptions;\r\n        Xhr.param = param;\r\n\r\n        return Xhr;\r\n    })();\r\n\r\n\treturn http.Xhr = Xhr;\t\r\n});\ndefine('skylark-langx/Xhr',[\r\n    \"skylark-net-http/Xhr\"\r\n],function(Xhr){\r\n    return Xhr;\r\n});\ndefine('skylark-langx/Restful',[\r\n    \"./Evented\",\r\n    \"./objects\",\r\n    \"./strings\",\r\n    \"./Xhr\"\r\n],function(Evented,objects,strings,Xhr){\r\n    var mixin = objects.mixin,\r\n        substitute = strings.substitute;\r\n\r\n    var Restful = Evented.inherit({\r\n        \"klassName\" : \"Restful\",\r\n\r\n        \"idAttribute\": \"id\",\r\n        \r\n        getBaseUrl : function(args) {\r\n            //$$baseEndpoint : \"/files/${fileId}/comments\",\r\n            var baseEndpoint = substitute(this.baseEndpoint,args),\r\n                baseUrl = this.server + this.basePath + baseEndpoint;\r\n            if (args[this.idAttribute]!==undefined) {\r\n                baseUrl = baseUrl + \"/\" + args[this.idAttribute]; \r\n            }\r\n            return baseUrl;\r\n        },\r\n        _head : function(args) {\r\n            //get resource metadata .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n        },\r\n        _get : function(args) {\r\n            //get resource ,one or list .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, null if list\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            return Xhr.get(this.getBaseUrl(args),args);\r\n        },\r\n        _post  : function(args,verb) {\r\n            //create or move resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.post(url, args);\r\n        },\r\n\r\n        _put  : function(args,verb) {\r\n            //update resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.put(url, args);\r\n        },\r\n\r\n        _delete : function(args) {\r\n            //delete resource . \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}         \r\n\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.del(url);\r\n        },\r\n\r\n        _patch : function(args){\r\n            //update resource metadata. \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.patch(url, args);\r\n        },\r\n        query: function(params) {\r\n            \r\n            return this._post(params);\r\n        },\r\n\r\n        retrieve: function(params) {\r\n            return this._get(params);\r\n        },\r\n\r\n        create: function(params) {\r\n            return this._post(params);\r\n        },\r\n\r\n        update: function(params) {\r\n            return this._put(params);\r\n        },\r\n\r\n        delete: function(params) {\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._delete(params);\r\n        },\r\n\r\n        patch: function(params) {\r\n           // HTTP request : PATCH http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._patch(params);\r\n        },\r\n        init: function(params) {\r\n            mixin(this,params);\r\n //           this._xhr = XHRx();\r\n       }\r\n    });\r\n\r\n    return Restful;\r\n});\ndefine('skylark-langx/Stateful',[\r\n\t\"./Evented\",\r\n  \"./strings\",\r\n  \"./objects\"\r\n],function(Evented,strings,objects){\r\n    var isEqual = objects.isEqual,\r\n        mixin = objects.mixin,\r\n        result = objects.result,\r\n        isEmptyObject = objects.isEmptyObject,\r\n        clone = objects.clone,\r\n        uniqueId = strings.uniqueId;\r\n\r\n    var Stateful = Evented.inherit({\r\n        _construct : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n\treturn Stateful;\r\n});\ndefine('skylark-langx-topic/topic',[\r\n\t\"skylark-langx-ns\",\r\n\t\"skylark-langx-emitter/Evented\"\r\n],function(skylark,Evented){\r\n\tvar hub = new Evented();\r\n\r\n\treturn skylark.attach(\"langx.topic\",{\r\n\t    publish: function(name, arg1,argn) {\r\n\t        var data = [].slice.call(arguments, 1);\r\n\r\n\t        return hub.trigger({\r\n\t            type : name,\r\n\t            data : data\r\n\t        });\r\n\t    },\r\n\r\n        subscribe: function(name, listener,ctx) {\r\n        \tvar handler = function(e){\r\n                listener.apply(ctx,e.data);\r\n            };\r\n            hub.on(name, handler);\r\n            return {\r\n            \tremove : function(){\r\n            \t\thub.off(name,handler);\r\n            \t}\r\n            }\r\n\r\n        }\r\n\r\n\t});\r\n});\ndefine('skylark-langx-topic/main',[\r\n\t\"./topic\"\r\n],function(topic){\r\n\treturn topic;\r\n});\ndefine('skylark-langx-topic', ['skylark-langx-topic/main'], function (main) { return main; });\n\ndefine('skylark-langx/topic',[\r\n\t\"skylark-langx-topic\"\r\n],function(topic){\r\n\treturn topic;\r\n});\ndefine('skylark-langx/types',[\r\n    \"skylark-langx-types\"\r\n],function(types){\r\n    return types;\r\n});\ndefine('skylark-langx/langx',[\r\n    \"./skylark\",\r\n    \"./arrays\",\r\n    \"./ArrayStore\",\r\n    \"./aspect\",\r\n    \"./async\",\r\n    \"./datetimes\",\r\n    \"./Deferred\",\r\n    \"./Evented\",\r\n    \"./funcs\",\r\n    \"./hoster\",\r\n    \"./klass\",\r\n    \"./numbers\",\r\n    \"./objects\",\r\n    \"./Restful\",\r\n    \"./Stateful\",\r\n    \"./strings\",\r\n    \"./topic\",\r\n    \"./types\",\r\n    \"./Xhr\"\r\n], function(skylark,arrays,ArrayStore,aspect,async,datetimes,Deferred,Evented,funcs,hoster,klass,numbers,objects,Restful,Stateful,strings,topic,types,Xhr) {\r\n    \"use strict\";\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin,\r\n        isFunction = types.isFunction;\r\n\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n\r\n        return safeMixin(e, props);\r\n    }\r\n    \r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        createEvent : createEvent,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        toPixel: toPixel,\r\n\r\n        uid: uid,\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null\r\n\r\n    });\r\n\r\n\r\n    mixin(langx, arrays,aspect,datetimes,funcs,numbers,objects,strings,types,{\r\n        ArrayStore : ArrayStore,\r\n\r\n        async : async,\r\n        \r\n        Deferred: Deferred,\r\n\r\n        Evented: Evented,\r\n\r\n        hoster : hoster,\r\n\r\n        klass : klass,\r\n\r\n        Restful: Restful,\r\n        \r\n        Stateful: Stateful,\r\n\r\n        topic : topic,\r\n\r\n        Xhr: Xhr\r\n\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\ndefine('skylark-data-collection/collections',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"data.collections\",{});\r\n});\ndefine('skylark-data-collection/Collection',[\r\n    \"skylark-langx/Evented\",\r\n    \"./collections\"\r\n], function(Evented, collections) {\r\n\r\n    var Collection = collections.Collection = Evented.inherit({\r\n\r\n        \"klassName\": \"Collection\",\r\n\r\n        _clear: function() {\r\n            throw new Error('Unimplemented API');\r\n        },\r\n\r\n        \"clear\": function() {\r\n            //desc: \"Removes all items from the Collection\",\r\n            //result: {\r\n            //    type: Collection,\r\n            //    desc: \"this instance for chain call\"\r\n            //},\r\n            //params: [],\r\n            this._clear();\r\n            this.trigger(\"changed:clear\");\r\n            return this;\r\n        },\r\n\r\n        /*\r\n         *@method count\r\n         *@return {Number}\r\n         */\r\n        count : /*Number*/function () {\r\n            var c = 0,\r\n                it = this.iterator();\r\n            while(!it.hasNext()){\r\n                c++;\r\n            }\r\n            return c;\r\n        },\r\n\r\n        \"forEach\": function( /*Function*/ func, /*Object?*/ thisArg) {\r\n            //desc: \"Executes a provided callback function once per collection item.\",\r\n            //result: {\r\n            //    type: Number,\r\n            //    desc: \"the number of items\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"func\",\r\n            //    type: Function,\r\n            //    desc: \"Function to execute for each element.\"\r\n            //}, {\r\n            //    name: \"thisArg\",\r\n            //    type: Object,\r\n            //    desc: \"Value to use as this when executing callback.\"\r\n            //}],\r\n            var it = this.iterator();\r\n            while(it.hasNext()){\r\n                var item = it.next();\r\n                func.call(thisArg || item,item);\r\n            }\r\n            return this;\r\n\r\n        },\r\n\r\n        \"iterator\" : function() {\r\n            throw new Error('Unimplemented API');\r\n        },\r\n\r\n        \"toArray\": function() {\r\n            //desc: \"Returns an array containing all of the items in this collection in proper sequence (from first to last item).\",\r\n            //result: {\r\n            //    type: Array,\r\n            //    desc: \"an array containing all of the elements in this collection in proper sequence\"\r\n            //},\r\n            //params: [],\r\n            var items = [],\r\n                it = this.iterator();\r\n            while(!it.hasNext()){\r\n                items.push(it.next());\r\n            }\r\n            return items;\r\n        }\r\n    });\r\n\r\n    return Collection;\r\n});\r\n\ndefine('skylark-data-collection/List',[\r\n    \"skylark-langx/arrays\",\r\n    \"./collections\",\r\n    \"./Collection\"\r\n], function(arrays,collections, Collection) {\r\n\r\n    var List = collections.List = Collection.inherit({\r\n        \r\n        \"klassName\": \"List\",\r\n\r\n\r\n        _getInnerItems : function() {\r\n            return this._items;\r\n        },\r\n\r\n        _clear : function() {\r\n            this._items = [];\r\n        },\r\n\r\n        \"contains\": function( /*Object*/ item) {\r\n            //desc: \"Determines whether an item is in the Collection.\",\r\n            //result: {\r\n            //    type: Boolean,\r\n            //    desc: \"true if item is found in the Collection; otherwise, false.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"item\",\r\n            //    type: Object,\r\n            //    desc: \"The item to check.\"\r\n            //}],\r\n            var items = this._getInnerItems();\r\n            return items.indexOf(item) >= 0;\r\n        },\r\n\r\n        \"count\": function() {\r\n            //desc: \"Gets the number of items actually contained in the Collection.\",\r\n            //result: {\r\n            //    type: Number,\r\n            //    desc: \"the number of items\"\r\n            //},\r\n            //params: [],\r\n            var items = this._getInnerItems();\r\n            return items.length;\r\n        },\r\n\r\n        \"getAll\": function() {\r\n            //desc: \"Returns all items.\",\r\n            //result: {\r\n            //    type: Object,\r\n            //    desc: \"all items\"\r\n            //},\r\n            //params: [],\r\n            return this._getInnerItems();\r\n        },\r\n\r\n        \"get\": function(index) {\r\n            //desc: \"Returns the item at the specified position in the List.\",\r\n            //result: {\r\n            //    type: Object,\r\n            //    desc: \"The item at the specified position.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"index\",\r\n            //    type: Number,\r\n            //    desc: \"index of the element to return.\"\r\n            //}],\r\n            var items = this._getInnerItems();\r\n            if (index < 0 || index >= items.length) {\r\n                throw new Error(\"Not exist:\" + index);\r\n            }\r\n            return items[index];\r\n        },\r\n\r\n        \"getRange\": function( /*Number*/ index, /*Number*/ count) {\r\n            //desc: \"Returns an Array which represents a subset of the items in the source list.\",\r\n            //result: {\r\n            //    type: Array,\r\n            //    desc: \"An Array which represents a subset of the items in the source list.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"index\",\r\n            //    type: Number,\r\n            //    desc: \"The zero-based list index at which the range starts.\"\r\n            //}, {\r\n            //    name: \"count\",\r\n            //    type: Number,\r\n            //    desc: \"The number of items in the range.\"\r\n            //}],\r\n            var items = this._getInnerItems(),\r\n                a1 = [];\r\n            for (var i = Math.max(index, 0); i < count; i++) {\r\n                if (i >= items.length) {\r\n                    break;\r\n                }\r\n                a1.push(items[i]);\r\n            }\r\n            return a1;\r\n        },\r\n\r\n        \"indexOf\": function( /*Object*/ item) {\r\n            //desc: \"Searches for the specified Object and returns the zero-based index of the first occurrence within the entire list.\",\r\n            //result: {\r\n            //    type: Number,\r\n            //    desc: \"The zero-based index of the first occurrence of value within the entire list,if found; otherwise, -1.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"item\",\r\n            //    type: Object,\r\n            //    desc: \"The Object to locate in the list. The value can be null.\"\r\n            //}],\r\n            var items = this._getInnerItems();\r\n            return items.indexOf(item);\r\n        },\r\n\r\n        \"iterator\" : function() {\r\n            var i =0,\r\n                self = this;\r\n            return {\r\n                hasNext : function() {\r\n                    return i < self._items.length;\r\n                },\r\n                next : function() {\r\n                    return self._items[i++];\r\n                }\r\n            }\r\n        },\r\n\r\n        /*\r\n         *@params {Object}args\r\n         *  a plain object for the initialize arguments.\r\n         */\r\n        init :  function(/*Array*/data){\r\n            if (data) {\r\n                this._items = arrays.makeArray(data);\r\n            } else {\r\n                this._items =  [];\r\n            }\r\n        }\r\n    });\r\n\r\n    return List;\r\n});\r\n\ndefine('skylark-data-collection/ArrayList',[\r\n    \"./collections\",\r\n    \"./List\"\r\n], function(collections, List) {\r\n\r\n    var ArrayList = collections.ArrayList = List.inherit({\r\n        \r\n        \"klassName\": \"ArrayList\",\r\n\r\n        \"add\": function(item) {\r\n            //desc: \"Adds an item to the end of the List.\",\r\n            //result: {\r\n            //    type: List,\r\n            //    desc: \"this instance for chain call\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"item\",\r\n            //    type: Object,\r\n            //    desc: \"The item to be added to the end of the List. \\nThe item can be null.\"\r\n            //}],\r\n\r\n            var items = this._getInnerItems();\r\n            items.push(item);\r\n            this.trigger(\"changed:add\",{\r\n                \"data\" :  [\r\n                    { \"item\" : item, \"index\": items.length - 1, isSingle: true}\r\n                ]\r\n            });\r\n            return this;\r\n        },\r\n\r\n        \"addRange\": function( /*Collection*/ c) {\r\n            //desc: \"Adds the items of a collection into the List at the specified index.\",\r\n            //result: {\r\n            //    type: List,\r\n            //    desc: \"this instance for chain call\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"c\",\r\n            //    type: [Collection, Array],\r\n            //    desc: \"The Collection whose items should be added into the List.\\nThe collection itself cannot be null, but it can contain items that are null.\"\r\n            //}],\r\n            var items = this._getInnerItems();\r\n            var a1 = c.toArray ? c.toArray() : c,\r\n                toAdd = [];\r\n            for (var i = 0; i < a1.length; i++) {\r\n                items.push(a1[i]);\r\n                toAdd.push({\r\n                    \"item\" : a1[i],\r\n                    \"index\" : items.length-1\r\n                });\r\n            }\r\n            this.trigger(\"changed:add\",{\r\n                \"data\" :  toAdd\r\n            });\r\n            return this;\r\n        },\r\n\r\n\r\n        \"clone\": function() {\r\n            //desc: \"Returns a shallow copy of this ArrayList instance. (The items themselves are not copied.)\",\r\n            //result: {\r\n            //    type: ArrayList,\r\n            //   desc: \"a clone of this ArrayList instance.\"\r\n            //},\r\n            //params: [],\r\n\r\n           return new ArrayList({\r\n                \"items\": this._.items\r\n            });\r\n        },\r\n\r\n        \"insert\": function( /*Number*/ index, /*Object*/ item) {\r\n            //desc: \"Inserts an item into the list at the specified index.\",\r\n            //result: {\r\n            //    type: List,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"index\",\r\n            //    type: Number,\r\n            //    desc: \"The zero-based index at which the new item should be inserted.\"\r\n            //}, {\r\n            //    name: \"item\",\r\n            //    type: Object,\r\n            //    desc: \"The item to insert. The value can be null.\"\r\n            //}],\r\n            var items = this._getInnerItems();\r\n            if (index < 0 || index > items.length) {\r\n                throw new Error(\"invalid parameter!\");\r\n            }\r\n            items.splice(index, 0, item);\r\n            this.trigger(\"changed\",{\r\n                \"data\" :  [\r\n                    { \"item\" : item, \"index\" : index}\r\n                ]\r\n            });\r\n            return this;\r\n        },\r\n\r\n        \"insertRange\": function( /*Number*/ index, /*Collection*/ c) {\r\n            //desc: \"Inserts the items of a collection into the list at the specified index.\",\r\n            //result: {\r\n            //    type: List,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"index\",\r\n            //    type: Number,\r\n            //    desc: \"The zero-based index at which the new item should be inserted.\"\r\n            //}, {\r\n            //    name: \"c\",\r\n            //    type: Collection,\r\n            //    desc: \"The Collection whose items should be inserted into the ArrayList. \\nThe collection itself cannot be null, but it can contain items that are null. \"\r\n            //}],\r\n            var items = this._getInnerItems(),\r\n                toAdd = [];\r\n            if (index < 0 || index >= items.length) {\r\n                throw new Error(\"invalid parameter!\");\r\n            }\r\n            var a1 = c.toArray();\r\n            for (var i = 0; i<a1.length - 1; i++) {\r\n                items.splice(index+i, 0, a1[i]);\r\n                toAdd.push({\r\n                    \"item\" : a1[i],\r\n                    \"index\" : index+i\r\n                });\r\n            }\r\n            this.trigger(\"changed:insert\",{\r\n                \"data\" :  toAdd\r\n            });\r\n            return this;\r\n        },\r\n\r\n        \"removeFirstMatch\": function( /*Object*/ item) {\r\n            //desc: \"Removes the first occurrence of a specific item from the list.\",\r\n            //result: {\r\n            //    type: List,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"item\",\r\n            //    type: Object,\r\n            //    desc: \"The item to remove from the list. The value can be null.\"\r\n            //}],\r\n            var items = this._getInnerItems();\r\n            for (var i = 0, len = items.length; i < len; i++) {\r\n                if (items[i] === item) {\r\n                    this.removeAt(i);\r\n                    break;\r\n                }\r\n            }\r\n            return this;\r\n        },\r\n\r\n        \"remove\": function( /*Object*/ item) {\r\n            //desc: \"Removes the all occurrence of a specific item from the list.\",\r\n            //result: {\r\n            //    type: List,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"item\",\r\n            //    type: Object,\r\n            //    desc: \"The item to remove from the list. The value can be null.\"\r\n            //}],\r\n            var items = this._getInnerItems(),\r\n                toRemove = [];\r\n            for (var i = 0, len = items.length; i < len; i++) {\r\n                if (items[i] === item) {\r\n                    Array.removeAt(items, i);\r\n                    toRemove.push({\r\n                        \"item\" : item,\r\n                        \"index\" : i\r\n                    });\r\n                }\r\n            }\r\n            this.trigger(\"changed:remove\",{\r\n                \"data\" :  toRemove\r\n            });\r\n            return this;\r\n        },\r\n\r\n        \"removeAt\": function(index) {\r\n            //desc: \"Removes the item at the specified index of the list.\",\r\n            //result: {\r\n            //    type: List,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"index\",\r\n            //    type: Number,\r\n            //    desc: \"The zero-based index of the item to remove.\"\r\n            //}],\r\n            var items = this._getInnerItems(),\r\n                item = items.splice(index, 1)[0];\r\n            this.trigger(\"changed:remove\",{\r\n                \"data\" :  [\r\n                    { \"item\" : item, \"index\" : index}\r\n                ]\r\n            });\r\n            return this;\r\n        },\r\n\r\n        \"removeRange\": function( /*Number*/ index, /*Number*/ count) {\r\n            //desc: \"Removes a range of items from the list.\",\r\n            //result: {\r\n            //    type: List,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"index\",\r\n            //    type: Number,\r\n            //    desc: \"The zero-based index of the item to remove.\"\r\n            //}, {\r\n            //    name: \"count\",\r\n            //    type: Number,\r\n            //    desc: \"The number of items to remove.\"\r\n            //}],\r\n            var items = this._getInnerItems(),\r\n                toRemove = [];\r\n\r\n            for (var i = index; i<index+count;i++) {\r\n                toRemove.push({\r\n                    \"item\" : items[i],\r\n                    \"index\" : i\r\n                });\r\n            }\r\n            items.splice(index, count);\r\n\r\n            this.trigger(\"changed:remove\",{\r\n                \"data\" : {\r\n                    \"removed\" : toRemove\r\n                }\r\n            });\r\n            return this;\r\n        },\r\n\r\n        \"setByIndex\": function( /*Number*/ index, /*Item*/ item) {\r\n            //desc: \"Replaces the item at the specified position in the list with the specified item.\",\r\n            //result: {\r\n            //    type: List,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"index\",\r\n            //    type: Number,\r\n            //    desc: \"index of the item to replace.\"\r\n            //}, {\r\n            //    name: \"item\",\r\n            //    type: Object,\r\n            //    desc: \"item to be stored at the specified position.\"\r\n            //}],\r\n            var items = this._getInnerItems();\r\n            if (index < 0 || index >= items.length) throw new Error(\"\" + i);\r\n            var old = items[index];\r\n            items[i] = item;\r\n\r\n            this.trigger(\"changed:update\",{\r\n                \"data\" : [\r\n                    { \"item\" : item, \"index\" : index,\"oldItem\":old}\r\n                ]\r\n            });\r\n            return this;\r\n        },\r\n\r\n        \"reset\": function(newItems) {\r\n            //desc: \"Reset the internal array.\",\r\n            //result: {\r\n            //    type: List,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [],\r\n            var items = this._getInnerItems();\r\n            items.length = 0;\r\n            for (var i=0;i<newItems.length;i++){\r\n                items.push(newItems[i]);\r\n            }\r\n            this.trigger(\"changed:reset\");\r\n\r\n            return this;\r\n        },\r\n        \r\n        \"reverse\": function() {\r\n            //desc: \"Reverse the internal array.\",\r\n            //result: {\r\n            //    type: List,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [],\r\n            var items = this._getInnerItems();\r\n            items.reverse();\r\n\r\n            this.trigger(\"changed:reverse\");\r\n            return this;\r\n        },\r\n\r\n        \"sort\": function( /*Function?*/ fn) {\r\n            //desc: \"sort the internal array.\",\r\n            //result: {\r\n            //    type: List,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"fn\",\r\n            //    type: Function,\r\n            //    desc: \"The function for sort\"\r\n            //}],\r\n            var items = this._getInnerItems();\r\n            if (fn) {\r\n                items.sort(fn);\r\n            } else {\r\n                items.sort();\r\n            }\r\n            this.trigger(\"changed:sort\");\r\n            return this;\r\n        }\r\n\r\n    });\r\n\r\n    return ArrayList;\r\n});\r\n\ndefine('skylark-domx-browser/browser',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark,langx) {\r\n    \"use strict\";\r\n\r\n    var browser = langx.hoster.browser;\r\n \r\n    var checkedCssProperties = {\r\n            \"transitionproperty\": \"TransitionProperty\",\r\n        },\r\n        transEndEventNames = {\r\n          WebkitTransition : 'webkitTransitionEnd',\r\n          MozTransition    : 'transitionend',\r\n          OTransition      : 'oTransitionEnd otransitionend',\r\n          transition       : 'transitionend'\r\n        },\r\n        transEndEventName = null;\r\n\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n                          testEl.mozMatchesSelector ||\r\n                          testEl.oMatchesSelector ||\r\n                          testEl.matchesSelector,\r\n\r\n        requestFullScreen = testEl.requestFullscreen || \r\n                            testEl.webkitRequestFullscreen || \r\n                            testEl.mozRequestFullScreen || \r\n                            testEl.msRequestFullscreen,\r\n\r\n        exitFullScreen =  document.exitFullscreen ||\r\n                          document.webkitCancelFullScreen ||\r\n                          document.mozCancelFullScreen ||\r\n                          document.msExitFullscreen,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n            if (transEndEventNames[name]) {\r\n              transEndEventName = transEndEventNames[name];\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!transEndEventName) {\r\n        if (testStyle[\"transition\"] !== undefined) {\r\n            transEndEventName = transEndEventNames[\"transition\"];\r\n        }\r\n    }\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        isIE : !!/msie/i.exec( window.navigator.userAgent ),\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        requestFullScreen : requestFullScreen,\r\n\r\n        exitFullscreen : requestFullScreen,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {\r\n\r\n        }\r\n\r\n    });\r\n\r\n    if  (transEndEventName) {\r\n        browser.support.transition = {\r\n            end : transEndEventName\r\n        };\r\n    }\r\n\r\n    testEl = null;\r\n\r\n    return skylark.attach(\"domx.browser\",browser);\r\n});\r\n\ndefine('skylark-domx-browser/main',[\r\n\t\"./browser\"\r\n],function(browser){\r\n\treturn browser;\r\n});\ndefine('skylark-domx-browser', ['skylark-domx-browser/main'], function (main) { return main; });\n\ndefine('skylark-domx-styler/styler',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} value\r\n     */\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n    function disabled(elm, value ) {\r\n        if (arguments.length < 2) {\r\n            return !!this.dom.disabled;\r\n        }\r\n\r\n        elm.disabled = value;\r\n\r\n        return this;\r\n    }\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getStyles(element).getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n    /*\r\n     * Display the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    /*\r\n     * Hide the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function getStyles( elem ) {\r\n\r\n        // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\r\n        // IE throws on elements created in popups\r\n        // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\r\n        var view = elem.ownerDocument.defaultView;\r\n\r\n        if ( !view || !view.opener ) {\r\n            view = window;\r\n        }\r\n\r\n        return view.getComputedStyle( elem);\r\n    }\r\n\r\n\r\n    /*\r\n     * Get the value of a computed style property for the first element in the set of matched elements or set one or more CSS properties for every matched element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} property\r\n     * @param {Any} value\r\n     */\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getStyles(elm)\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(dasherize(property))\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(dasherize(prop)))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Determine whether any of the matched elements are assigned the given class.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    /*\r\n     * Remove a single class, multiple classes, or all classes from each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm, \"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Add or remove one or more classes from the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     * @param {} when\r\n     */\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks: {\r\n\r\n        },\r\n\r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        disabled : disabled,        \r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.attach(\"domx.styler\", styler);\r\n});\ndefine('skylark-domx-styler/main',[\r\n\t\"./styler\"\r\n],function(styler){\r\n\treturn styler;\r\n});\ndefine('skylark-domx-styler', ['skylark-domx-styler/main'], function (main) { return main; });\n\ndefine('skylark-domx-noder/noder',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-styler\"\r\n], function(skylark, langx, browser, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n\r\n    function activeElement(doc) {\r\n        doc = doc || document;\r\n        var el;\r\n\r\n        // Support: IE 9 only\r\n        // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\r\n        try {\r\n            el = doc.activeElement;\r\n        } catch ( error ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 9 - 11 only\r\n        // IE may return null instead of an element\r\n        // Interestingly, this only seems to occur when NOT in an iframe\r\n        if ( !el ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 11 only\r\n        // IE11 returns a seemingly empty object in some cases when accessing\r\n        // document.activeElement from an <iframe>\r\n        if ( !el.nodeName ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        return el;\r\n    };\r\n\r\n    function enhancePlaceContent(placing,node) {\r\n        if (langx.isFunction(placing)) {\r\n            return placing.apply(node,[]);\r\n        }\r\n        if (langx.isArrayLike(placing)) {\r\n            var neddsFlattern;\r\n            for (var i=0;i<placing.length;i++) {\r\n                if (langx.isFunction(placing[i])) {\r\n                    placing[i] = placing[i].apply(node,[]);\r\n                    if (langx.isArrayLike(placing[i])) {\r\n                        neddsFlattern = true;\r\n                    }\r\n                }\r\n            }\r\n            if (neddsFlattern) {\r\n                placing = langx.flatten(placing);\r\n            }\r\n        }\r\n        return placing;\r\n    }\r\n    function after(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Get the children of the specified node, including text and comment nodes.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    /*   \r\n     * Create a element and set attributes on it.\r\n     * @param {HTMLElement} tag\r\n     * @param {props} props\r\n     * @param } parent\r\n     */\r\n    function createElement(tag, props, parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent, node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /*   \r\n     * Create a DocumentFragment from the HTML fragment.\r\n     * @param {String} html\r\n     */\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    /*   \r\n     * Create a deep copy of the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {Boolean} deep\r\n     */\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node .\r\n     * @param {String} node\r\n     * @param {Node} child\r\n     */\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    /*   \r\n     * Create a new Text node.\r\n     * @param {String} text\r\n     * @param {Node} child\r\n     */\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    /*   \r\n     * Get the current document object.\r\n     */\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    /*   \r\n     * Remove all child nodes of the set of matched elements from the DOM.\r\n     * @param {Object} node\r\n     */\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    var fulledEl = null;\r\n\r\n    function fullScreen(el) {\r\n        if (el === false) {\r\n            browser.exitFullScreen.apply(document);\r\n        } else if (el) {\r\n            browser.requestFullScreen.apply(el);\r\n            fulledEl = el;\r\n        } else {\r\n            return (\r\n                document.fullscreenElement ||\r\n                document.webkitFullscreenElement ||\r\n                document.mozFullScreenElement ||\r\n                document.msFullscreenElement\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    // Selectors\r\n    function focusable( element, hasTabindex ) {\r\n        var map, mapName, img, focusableIfVisible, fieldset,\r\n            nodeName = element.nodeName.toLowerCase();\r\n\r\n        if ( \"area\" === nodeName ) {\r\n            map = element.parentNode;\r\n            mapName = map.name;\r\n            if ( !element.href || !mapName || map.nodeName.toLowerCase() !== \"map\" ) {\r\n                return false;\r\n            }\r\n            img = $( \"img[usemap='#\" + mapName + \"']\" );\r\n            return img.length > 0 && img.is( \":visible\" );\r\n        }\r\n\r\n        if ( /^(input|select|textarea|button|object)$/.test( nodeName ) ) {\r\n            focusableIfVisible = !element.disabled;\r\n\r\n            if ( focusableIfVisible ) {\r\n\r\n                // Form controls within a disabled fieldset are disabled.\r\n                // However, controls within the fieldset's legend do not get disabled.\r\n                // Since controls generally aren't placed inside legends, we skip\r\n                // this portion of the check.\r\n                fieldset = $( element ).closest( \"fieldset\" )[ 0 ];\r\n                if ( fieldset ) {\r\n                    focusableIfVisible = !fieldset.disabled;\r\n                }\r\n            }\r\n        } else if ( \"a\" === nodeName ) {\r\n            focusableIfVisible = element.href || hasTabindex;\r\n        } else {\r\n            focusableIfVisible = hasTabindex;\r\n        }\r\n\r\n        return focusableIfVisible && $( element ).is( \":visible\" ) && visible( $( element ) );\r\n    };\r\n\r\n\r\n   var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi;\r\n \r\n    /*   \r\n     * Get the HTML contents of the first element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} html\r\n     */\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html)) {\r\n                html = html.replace( rxhtmlTag, \"<$1></$2>\" );\r\n            }\r\n            if (langx.isString(html) || langx.isNumber(html)) {               \r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isChildOf(node, parent, directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a document.\r\n     * @param {Node} node\r\n     */\r\n    function isDocument(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is in the document\r\n     * @param {Node} node\r\n     */\r\n    function isInDocument(node) {\r\n      return (node === document.body) ? true : document.body.contains(node);\r\n    }        \r\n\r\n    var blockNodes = [\"div\", \"p\", \"ul\", \"ol\", \"li\", \"blockquote\", \"hr\", \"pre\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"table\"];\r\n\r\n    function isBlockNode(node) {\r\n        if (!node || node.nodeType === 3) {\r\n          return false;\r\n        }\r\n        return new RegExp(\"^(\" + (blockNodes.join('|')) + \")$\").test(node.nodeName.toLowerCase());\r\n    }\r\n\r\n\r\n    /*   \r\n     * Get the owner document object for the specified element.\r\n     * @param {Node} elm\r\n     */\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return doc.defaultView || doc.parentWindow;\r\n    }\r\n\r\n    /*   \r\n     * insert one or more nodes as the first children of the specified node.\r\n     * @param {Node} node\r\n     * @param {Node or ArrayLike} placing\r\n     * @param {Boolean Optional} copyByClone\r\n     */\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     * @param {Node} params\r\n     */\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n    /*   \r\n     * Remove the set of matched elements from the DOM.\r\n     * @param {Node} node\r\n     */\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n                node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\", e);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function removeChild(node,children) {\r\n        if (!langx.isArrayLike(children)) {\r\n            children = [children];\r\n        }\r\n        for (var i=0;i<children.length;i++) {\r\n            node.removeChild(children[i]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollParent( elm, includeHidden ) {\r\n        var position = styler.css(elm,\"position\" ),\r\n            excludeStaticParent = position === \"absolute\",\r\n            overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n            scrollParent = this.parents().filter( function() {\r\n                var parent = $( this );\r\n                if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                    return false;\r\n                }\r\n                return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                    parent.css( \"overflow-x\" ) );\r\n            } ).eq( 0 );\r\n\r\n        return position === \"fixed\" || !scrollParent.length ?\r\n            $( this[ 0 ].ownerDocument || document ) :\r\n            scrollParent;\r\n    };\r\n\r\n\r\n    function reflow(elm) {\r\n        if (el == null) {\r\n          elm = document;\r\n        }\r\n        elm.offsetHeight;\r\n\r\n        return this;      \r\n    }\r\n\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {Node} node\r\n     * @param {Node} oldNode\r\n     */\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {HTMLElement} elm\r\n     * @param {Node} params\r\n     */\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n\r\n            throbber = this.createElement(\"div\", {\r\n                \"class\": params.className || \"throbber\"\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                \"class\": 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                \"class\": \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        if (params.style) {\r\n            styler.css(throbber,params.style);\r\n        }\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n\r\n    /*   \r\n     * traverse the specified node and its descendants, perform the callback function on each\r\n     * @param {Node} node\r\n     * @param {Function} fn\r\n     */\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} node\r\n     */\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around each element in the set of matched elements.\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around the content of each element in the set of matched\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Remove the parents of the set of matched elements from the DOM, leaving the matched\r\n     * @param {Node} node\r\n     */\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        active  : activeElement,\r\n\r\n        blur : function(el) {\r\n            el.blur();\r\n        },\r\n\r\n        body: function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        fullScreen: fullScreen,\r\n\r\n        focusable: focusable,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isInDocument: isInDocument,\r\n\r\n        isWindow: langx.isWindow,\r\n\r\n        nodeName : nodeName,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow: ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        reflow: reflow,\r\n\r\n        remove: remove,\r\n\r\n        removeChild : removeChild,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.attach(\"domx.noder\" , noder);\r\n});\ndefine('skylark-domx-noder/main',[\r\n\t\"./noder\"\r\n],function(noder){\r\n\treturn noder;\r\n});\ndefine('skylark-domx-noder', ['skylark-domx-noder/main'], function (main) { return main; });\n\ndefine('skylark-domx-finder/finder',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-noder\"\r\n], function(skylark, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'focusable': function( elm ) {\r\n            return noder.focusable(elm, elm.tabindex != null );\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function(elem) {\r\n            return rheader.test(elem.nodeName);\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function(elem) {\r\n            return rinputs.test(elem.nodeName);\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        /*   \r\n         * Get the parent of each element in the current set of matched elements.\r\n         * @param {Object} elm\r\n         */\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'tabbable': function(elm) {\r\n            var tabIndex = elm.tabindex,\r\n                hasTabindex = tabIndex != null;\r\n            return ( !hasTabindex || tabIndex >= 0 ) && noder.focusable( element, hasTabindex );\r\n        },\r\n\r\n        'text': function(elm) {\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\", \"eq\", \"last\"].forEach(function(item) {\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for (i in {\r\n        radio: true,\r\n        checkbox: true,\r\n        file: true,\r\n        password: true,\r\n        image: true\r\n    }) {\r\n        pseudos[i] = createInputPseudo(i);\r\n    }\r\n    for (i in {\r\n        submit: true,\r\n        reset: true\r\n    }) {\r\n        pseudos[i] = createButtonPseudo(i);\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value) + \"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            if (tag !== \"*\") {\r\n                nativeSelector = tag.toUpperCase() + nativeSelector;\r\n            }\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes, arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;\r\n        }\r\n\r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node, exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp) {\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes, false);\r\n        });\r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs, true);\r\n        });\r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes, selector);\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes, exp);\r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n\r\n    };\r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, true)\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n    /*\r\n     * Get the nearest ancestor of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the ancestors of the specitied element , optionally filtered by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestors(node, selector, root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (langx.isArrayLike(root)) {\r\n                    if (langx.inArray(node,root)>-1) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n            ret.push(node); // TODO\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Returns a element by its ID.\r\n     * @param {string} id\r\n     */\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    /*\r\n     * Get the children of the specified element , optionally filtered by a selector.\r\n     * @param {string} node\r\n     * @param {String optionlly} selector\r\n     */\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    /*\r\n     * Get the decendant of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the nearest decendent of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the descendants of each element in the current set of matched elements, filtered by a selector, jQuery object, or element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function find(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm, selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the findAll of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function findAll(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the first child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String} first\r\n     */\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the last child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String } last\r\n     */\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Check the specified element against a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm, selector) > -1;\r\n        } else if (langx.isPlainObject(selector)) {\r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Get the nearest next sibing of the specitied element , optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional} adjacent\r\n     */\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the next siblings of the specified element , optional filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Get the parent element of the specified element. if a selector is provided, it retrieves the parent element only if it matches that selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get hte nearest previous sibling of the specified element ,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional } adjacent\r\n     */\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get all preceding siblings of each element in the set of matched elements, optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Selects all sibling elements that follow after the “prev” element, have the same parent, and match the filtering “siblings” selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling,\r\n\r\n        previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.attach(\"domx.finder\", finder);\r\n});\ndefine('skylark-domx-finder/main',[\r\n\t\"./finder\"\r\n],function(finder){\r\n\treturn finder;\r\n});\ndefine('skylark-domx-finder', ['skylark-domx-finder/main'], function (main) { return main; });\n\ndefine('skylark-domx-data/data',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-noder\"\r\n], function(skylark, langx, finder,noder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n\r\n    // Strip and collapse whitespace according to HTML spec\r\n    function stripAndCollapse( value ) {\r\n      var tokens = value.match( /[^\\x20\\t\\r\\n\\f]+/g ) || [];\r\n      return tokens.join( \" \" );\r\n    }\r\n\r\n\r\n    var valHooks = {\r\n      option: {\r\n        get: function( elem ) {\r\n          var val = elem.getAttribute( \"value\" );\r\n          return val != null ?  val :  stripAndCollapse(text( elem ) );\r\n        }\r\n      },\r\n      select: {\r\n        get: function( elem ) {\r\n          var value, option, i,\r\n            options = elem.options,\r\n            index = elem.selectedIndex,\r\n            one = elem.type === \"select-one\",\r\n            values = one ? null : [],\r\n            max = one ? index + 1 : options.length;\r\n\r\n          if ( index < 0 ) {\r\n            i = max;\r\n\r\n          } else {\r\n            i = one ? index : 0;\r\n          }\r\n\r\n          // Loop through all the selected options\r\n          for ( ; i < max; i++ ) {\r\n            option = options[ i ];\r\n\r\n            if ( option.selected &&\r\n\r\n                // Don't return options that are disabled or in a disabled optgroup\r\n                !option.disabled &&\r\n                ( !option.parentNode.disabled ||\r\n                  !noder.nodeName( option.parentNode, \"optgroup\" ) ) ) {\r\n\r\n              // Get the specific value for the option\r\n              value = val(option);\r\n\r\n              // We don't need an array for one selects\r\n              if ( one ) {\r\n                return value;\r\n              }\r\n\r\n              // Multi-Selects return an array\r\n              values.push( value );\r\n            }\r\n          }\r\n\r\n          return values;\r\n        },\r\n\r\n        set: function( elem, value ) {\r\n          var optionSet, option,\r\n            options = elem.options,\r\n            values = langx.makeArray( value ),\r\n            i = options.length;\r\n\r\n          while ( i-- ) {\r\n            option = options[ i ];\r\n\r\n            /* eslint-disable no-cond-assign */\r\n\r\n            if ( option.selected =\r\n              langx.inArray( valHooks.option.get( option ), values ) > -1\r\n            ) {\r\n              optionSet = true;\r\n            }\r\n\r\n            /* eslint-enable no-cond-assign */\r\n          }\r\n\r\n          // Force browsers to behave consistently when non-matching value is set\r\n          if ( !optionSet ) {\r\n            elem.selectedIndex = -1;\r\n          }\r\n          return values;\r\n        }\r\n      }\r\n    };\r\n\r\n\r\n    // Radios and checkboxes getter/setter\r\n    langx.each( [ \"radio\", \"checkbox\" ], function() {\r\n      valHooks[ this ] = {\r\n        set: function( elem, value ) {\r\n          if ( langx.isArray( value ) ) {\r\n            return ( elem.checked = langx.inArray( val(elem), value ) > -1 );\r\n          }\r\n        }\r\n      };\r\n    });\r\n\r\n\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm, name, value) {\r\n        return this.attr(elm, \"aria-\" + name, value);\r\n    }\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute && elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n     *  Read all \"data-*\" attributes from a node\r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    /*\r\n     * xxx\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    } \r\n    /*\r\n     * Remove from the element all items that have not yet been run. \r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Remove a previously-stored piece of data. \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function removeData(elm, names) {\r\n        if (names) {\r\n            if (langx.isString(names)) {\r\n                names = names.split(/\\s+/);\r\n            }\r\n            var store = _store(elm, true);\r\n            names.forEach(function(name) {\r\n                delete store[name];\r\n            });            \r\n        } else {\r\n            cleanData(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * xxx \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Get or set the value of an property for the specified element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * remove Attributes  \r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n\r\n    /*\r\n     * Remove the value of a property for the first element in the set of matched elements or set one or more properties for every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Get the combined text contents of each element in the set of matched elements, including their descendants, or set the text contents of the matched elements.  \r\n     * @param {Object} elm  \r\n     * @param {String} txt\r\n     */\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Get the current value of the first element in the set of matched elements or set the value of every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} value\r\n     */\r\n    function val(elm, value) {\r\n        var hooks = valHooks[ elm.type ] || valHooks[ elm.nodeName.toLowerCase() ];\r\n        if (value === undefined) {\r\n/*\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                if (/input|textarea/i.test(elm.tagName)) {\r\n                  return elm.value;\r\n                }\r\n                return text(elm);\r\n            }\r\n*/\r\n\r\n          if ( hooks &&  \"get\" in hooks &&  ( ret = hooks.get( elm, \"value\" ) ) !== undefined ) {\r\n            return ret;\r\n          }\r\n\r\n          ret = elm.value;\r\n\r\n          // Handle most common string cases\r\n          if ( typeof ret === \"string\" ) {\r\n            return ret.replace( /\\r/g, \"\" );\r\n          }\r\n\r\n          // Handle cases where value is null/undef or number\r\n          return ret == null ? \"\" : ret;\r\n\r\n        } else {\r\n/*          \r\n            if (/input|textarea/i.test(elm.tagName)) {\r\n              elm.value = value;\r\n            } else {\r\n              text(elm,value);\r\n            }\r\n            return this;\r\n*/\r\n          // Treat null/undefined as \"\"; convert numbers to string\r\n          if ( value == null ) {\r\n            value = \"\";\r\n\r\n          } else if ( typeof value === \"number\" ) {\r\n            value += \"\";\r\n\r\n          } else if ( langx.isArray( value ) ) {\r\n            value = langx.map( value, function( value1 ) {\r\n              return value1 == null ? \"\" : value1 + \"\";\r\n            } );\r\n          }\r\n\r\n          // If set returns undefined, fall back to normal setting\r\n          if ( !hooks || !( \"set\" in hooks ) || hooks.set( elm, value, \"value\" ) === undefined ) {\r\n            elm.value = value;\r\n          }\r\n        }      \r\n    }\r\n\r\n\r\n    finder.pseudos.data = function( elem, i, match,dataName ) {\r\n        return !!data( elem, dataName || match[3]);\r\n    };\r\n   \r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n\r\n        attr: attr,\r\n\r\n        cleanData: cleanData,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val,\r\n\r\n        valHooks : valHooks\r\n    });\r\n\r\n    return skylark.attach(\"domx.data\", datax);\r\n});\ndefine('skylark-domx-data/main',[\r\n\t\"./data\"\r\n],function(data){\r\n\treturn data;\r\n});\ndefine('skylark-domx-data', ['skylark-domx-data/main'], function (main) { return main; });\n\ndefine('skylark-domx-eventer/eventer',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"], // 15\r\n                window[\"ClipboardEvent\"] // 16\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 16, // ClipboardEvent\r\n                \"beforecut\": 16, // ClipboardEvent\r\n                \"beforepaste\": 16, // ClipboardEvent\r\n                \"copy\": 16, // ClipboardEvent\r\n                \"cut\": 16, // ClipboardEvent\r\n                \"paste\": 16, // ClipboardEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            };\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src, props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy, props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings, function(idx, binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns) === -1) {\r\n                                return;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    /*\r\n                                        if (event in hover) {\r\n                                            var l = self._listener;\r\n                                            self._listener = function(e) {\r\n                                                var related = e.relatedTarget;\r\n                                                if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                                    return l.apply(this, arguments);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                    */\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    /*   \r\n     * Remove an event handler for one or more events from the specified element.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional } selector\r\n     * @param {Function} callback\r\n     */\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach an event handler function for one or more events to the selected elements.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     * @param {Boolean　Optional} one\r\n     */\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach a handler to an event for the elements. The handler is executed at most once per \r\n     * @param {HTMLElement} elm  \r\n     * @param {String} event\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     */\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Prevents propagation and clobbers the default action of the passed event. The same as calling event.preventDefault() and event.stopPropagation(). \r\n     * @param {String} event\r\n     */\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Execute all handlers and behaviors attached to the matched elements for the given event  \r\n     * @param {String} evented\r\n     * @param {String} type\r\n     * @param {Array or PlainObject } args\r\n     */\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /*   \r\n     * Specify a function to execute when the DOM is fully loaded.  \r\n     * @param {Function} callback\r\n     */\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    if (browser.support.transition) {\r\n        specialEvents.transitionEnd = {\r\n//          handle: function (e) {\r\n//            if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\r\n//          },\r\n          bindType: browser.support.transition.end,\r\n          delegateType: browser.support.transition.end\r\n        }        \r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        keys: keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special: specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return skylark.attach(\"domx.eventer\",eventer);\r\n});\ndefine('skylark-domx-eventer/main',[\r\n\t\"./eventer\"\r\n],function(eventer){\r\n\treturn eventer;\r\n});\ndefine('skylark-domx-eventer', ['skylark-domx-eventer/main'], function (main) { return main; });\n\ndefine('skylark-domx-geom/geom',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-styler\"\r\n], function(skylark, langx, noder, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n    function scrollbarWidth() {\r\n        if (cachedScrollbarWidth !== undefined) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment(\"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\")[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body, div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n\r\n        styler.css(div, \"overflow\", \"scroll\");\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if (w1 === w2) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return (cachedScrollbarWidth = w1 - w2);\r\n    }\r\n    /*\r\n     * Get the widths of each border of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function borderExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth, elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    /*\r\n     * Get or set the viewport position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the viewport rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the height of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the size of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get or set the width of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the rect of the specified element content box.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLDocument} doc\r\n     */\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each margin of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function marginExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function marginRect(elm) {\r\n        var obj = relativeRect(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            left: obj.left,\r\n            top: obj.top,\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n\r\n    function marginSize(elm) {\r\n        var obj = size(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each padding of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function paddingExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the position of the specified element border box , relative to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the rect of the specified element border box , relatived to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Scroll the specified element into view.\r\n     * @param {HTMLElement} elm\r\n     * @param {} align\r\n     */\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get or set the current horizontal position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollLeft(elm, value) {\r\n        if (elm.nodeType === 9) {\r\n            elm = elm.defaultView;\r\n        }\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or the current vertical position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollTop(elm, value) {\r\n        if (elm.nodeType === 9) {\r\n            elm = elm.defaultView;\r\n        }\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject}dimension\r\n     */\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect: marginRect,\r\n\r\n        marginSize: marginSize,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth: scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    ( function() {\r\n        var max = Math.max,\r\n            abs = Math.abs,\r\n            rhorizontal = /left|center|right/,\r\n            rvertical = /top|center|bottom/,\r\n            roffset = /[\\+\\-]\\d+(\\.[\\d]+)?%?/,\r\n            rposition = /^\\w+/,\r\n            rpercent = /%$/;\r\n\r\n        function getOffsets( offsets, width, height ) {\r\n            return [\r\n                parseFloat( offsets[ 0 ] ) * ( rpercent.test( offsets[ 0 ] ) ? width / 100 : 1 ),\r\n                parseFloat( offsets[ 1 ] ) * ( rpercent.test( offsets[ 1 ] ) ? height / 100 : 1 )\r\n            ];\r\n        }\r\n\r\n        function parseCss( element, property ) {\r\n            return parseInt( styler.css( element, property ), 10 ) || 0;\r\n        }\r\n\r\n        function getDimensions( raw ) {\r\n            if ( raw.nodeType === 9 ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { top: 0, left: 0 }\r\n                };\r\n            }\r\n            if ( noder.isWindow( raw ) ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { \r\n                        top: scrollTop(raw), \r\n                        left: scrollLeft(raw) \r\n                    }\r\n                };\r\n            }\r\n            if ( raw.preventDefault ) {\r\n                return {\r\n                    size : {\r\n                        width: 0,\r\n                        height: 0\r\n                    },\r\n                    offset: { \r\n                        top: raw.pageY, \r\n                        left: raw.pageX \r\n                    }\r\n                };\r\n            }\r\n            return {\r\n                size: size(raw),\r\n                offset: pagePosition(raw)\r\n            };\r\n        }\r\n\r\n        function getScrollInfo( within ) {\r\n            var overflowX = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-x\" ),\r\n                overflowY = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-y\" ),\r\n                hasOverflowX = overflowX === \"scroll\" ||\r\n                    ( overflowX === \"auto\" && within.width < scrollWidth(within.element) ),\r\n                hasOverflowY = overflowY === \"scroll\" ||\r\n                    ( overflowY === \"auto\" && within.height < scrollHeight(within.element));\r\n            return {\r\n                width: hasOverflowY ? scrollbarWidth() : 0,\r\n                height: hasOverflowX ? scrollbarWidth() : 0\r\n            };\r\n        }\r\n\r\n        function getWithinInfo( element ) {\r\n            var withinElement = element || window,\r\n                isWindow = noder.isWindow( withinElement),\r\n                isDocument = !!withinElement && withinElement.nodeType === 9,\r\n                hasOffset = !isWindow && !isDocument,\r\n                msize = marginSize(withinElement);\r\n            return {\r\n                element: withinElement,\r\n                isWindow: isWindow,\r\n                isDocument: isDocument,\r\n                offset: hasOffset ? pagePosition(element) : { left: 0, top: 0 },\r\n                scrollLeft: scrollLeft(withinElement),\r\n                scrollTop: scrollTop(withinElement),\r\n                width: msize.width,\r\n                height: msize.height\r\n            };\r\n        }\r\n\r\n        function posit(elm,options ) {\r\n            // Make a copy, we don't want to modify arguments\r\n            options = langx.extend( {}, options );\r\n\r\n            var atOffset, targetWidth, targetHeight, targetOffset, basePosition, dimensions,\r\n                target = options.of,\r\n                within = getWithinInfo( options.within ),\r\n                scrollInfo = getScrollInfo( within ),\r\n                collision = ( options.collision || \"flip\" ).split( \" \" ),\r\n                offsets = {};\r\n\r\n            dimensions = getDimensions( target );\r\n            if ( target.preventDefault ) {\r\n\r\n                // Force left top to allow flipping\r\n                options.at = \"left top\";\r\n            }\r\n            targetWidth = dimensions.size.width;\r\n            targetHeight = dimensions.size.height;\r\n            targetOffset = dimensions.offset;\r\n\r\n            // Clone to reuse original targetOffset later\r\n            basePosition = langx.extend( {}, targetOffset );\r\n\r\n            // Force my and at to have valid horizontal and vertical positions\r\n            // if a value is missing or invalid, it will be converted to center\r\n            langx.each( [ \"my\", \"at\" ], function() {\r\n                var pos = ( options[ this ] || \"\" ).split( \" \" ),\r\n                    horizontalOffset,\r\n                    verticalOffset;\r\n\r\n                if ( pos.length === 1 ) {\r\n                    pos = rhorizontal.test( pos[ 0 ] ) ?\r\n                        pos.concat( [ \"center\" ] ) :\r\n                        rvertical.test( pos[ 0 ] ) ?\r\n                            [ \"center\" ].concat( pos ) :\r\n                            [ \"center\", \"center\" ];\r\n                }\r\n                pos[ 0 ] = rhorizontal.test( pos[ 0 ] ) ? pos[ 0 ] : \"center\";\r\n                pos[ 1 ] = rvertical.test( pos[ 1 ] ) ? pos[ 1 ] : \"center\";\r\n\r\n                // Calculate offsets\r\n                horizontalOffset = roffset.exec( pos[ 0 ] );\r\n                verticalOffset = roffset.exec( pos[ 1 ] );\r\n                offsets[ this ] = [\r\n                    horizontalOffset ? horizontalOffset[ 0 ] : 0,\r\n                    verticalOffset ? verticalOffset[ 0 ] : 0\r\n                ];\r\n\r\n                // Reduce to just the positions without the offsets\r\n                options[ this ] = [\r\n                    rposition.exec( pos[ 0 ] )[ 0 ],\r\n                    rposition.exec( pos[ 1 ] )[ 0 ]\r\n                ];\r\n            } );\r\n\r\n            // Normalize collision option\r\n            if ( collision.length === 1 ) {\r\n                collision[ 1 ] = collision[ 0 ];\r\n            }\r\n\r\n            if ( options.at[ 0 ] === \"right\" ) {\r\n                basePosition.left += targetWidth;\r\n            } else if ( options.at[ 0 ] === \"center\" ) {\r\n                basePosition.left += targetWidth / 2;\r\n            }\r\n\r\n            if ( options.at[ 1 ] === \"bottom\" ) {\r\n                basePosition.top += targetHeight;\r\n            } else if ( options.at[ 1 ] === \"center\" ) {\r\n                basePosition.top += targetHeight / 2;\r\n            }\r\n\r\n            atOffset = getOffsets( offsets.at, targetWidth, targetHeight );\r\n            basePosition.left += atOffset[ 0 ];\r\n            basePosition.top += atOffset[ 1 ];\r\n\r\n            return ( function(elem) {\r\n                var collisionPosition, using,\r\n                    msize = marginSize(elem),\r\n                    elemWidth = msize.width,\r\n                    elemHeight = msize.height,\r\n                    marginLeft = parseCss( elem, \"marginLeft\" ),\r\n                    marginTop = parseCss( elem, \"marginTop\" ),\r\n                    collisionWidth = elemWidth + marginLeft + parseCss( elem, \"marginRight\" ) +\r\n                        scrollInfo.width,\r\n                    collisionHeight = elemHeight + marginTop + parseCss( elem, \"marginBottom\" ) +\r\n                        scrollInfo.height,\r\n                    position = langx.extend( {}, basePosition ),\r\n                    myOffset = getOffsets( offsets.my, msize.width, msize.height);\r\n\r\n                if ( options.my[ 0 ] === \"right\" ) {\r\n                    position.left -= elemWidth;\r\n                } else if ( options.my[ 0 ] === \"center\" ) {\r\n                    position.left -= elemWidth / 2;\r\n                }\r\n\r\n                if ( options.my[ 1 ] === \"bottom\" ) {\r\n                    position.top -= elemHeight;\r\n                } else if ( options.my[ 1 ] === \"center\" ) {\r\n                    position.top -= elemHeight / 2;\r\n                }\r\n\r\n                position.left += myOffset[ 0 ];\r\n                position.top += myOffset[ 1 ];\r\n\r\n                collisionPosition = {\r\n                    marginLeft: marginLeft,\r\n                    marginTop: marginTop\r\n                };\r\n\r\n                langx.each( [ \"left\", \"top\" ], function( i, dir ) {\r\n                    if ( positions[ collision[ i ] ] ) {\r\n                        positions[ collision[ i ] ][ dir ]( position, {\r\n                            targetWidth: targetWidth,\r\n                            targetHeight: targetHeight,\r\n                            elemWidth: elemWidth,\r\n                            elemHeight: elemHeight,\r\n                            collisionPosition: collisionPosition,\r\n                            collisionWidth: collisionWidth,\r\n                            collisionHeight: collisionHeight,\r\n                            offset: [ atOffset[ 0 ] + myOffset[ 0 ], atOffset [ 1 ] + myOffset[ 1 ] ],\r\n                            my: options.my,\r\n                            at: options.at,\r\n                            within: within,\r\n                            elem: elem\r\n                        } );\r\n                    }\r\n                } );\r\n\r\n                if ( options.using ) {\r\n\r\n                    // Adds feedback as second argument to using callback, if present\r\n                    using = function( props ) {\r\n                        var left = targetOffset.left - position.left,\r\n                            right = left + targetWidth - elemWidth,\r\n                            top = targetOffset.top - position.top,\r\n                            bottom = top + targetHeight - elemHeight,\r\n                            feedback = {\r\n                                target: {\r\n                                    element: target,\r\n                                    left: targetOffset.left,\r\n                                    top: targetOffset.top,\r\n                                    width: targetWidth,\r\n                                    height: targetHeight\r\n                                },\r\n                                element: {\r\n                                    element: elem,\r\n                                    left: position.left,\r\n                                    top: position.top,\r\n                                    width: elemWidth,\r\n                                    height: elemHeight\r\n                                },\r\n                                horizontal: right < 0 ? \"left\" : left > 0 ? \"right\" : \"center\",\r\n                                vertical: bottom < 0 ? \"top\" : top > 0 ? \"bottom\" : \"middle\"\r\n                            };\r\n                        if ( targetWidth < elemWidth && abs( left + right ) < targetWidth ) {\r\n                            feedback.horizontal = \"center\";\r\n                        }\r\n                        if ( targetHeight < elemHeight && abs( top + bottom ) < targetHeight ) {\r\n                            feedback.vertical = \"middle\";\r\n                        }\r\n                        if ( max( abs( left ), abs( right ) ) > max( abs( top ), abs( bottom ) ) ) {\r\n                            feedback.important = \"horizontal\";\r\n                        } else {\r\n                            feedback.important = \"vertical\";\r\n                        }\r\n                        options.using.call( this, props, feedback );\r\n                    };\r\n                }\r\n\r\n                pagePosition(elem, langx.extend( position, { using: using } ));\r\n            })(elm);\r\n        }\r\n\r\n        var positions = {\r\n            fit: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        outerWidth = within.width,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = withinOffset - collisionPosLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - withinOffset,\r\n                        newOverRight;\r\n\r\n                    // Element is wider than within\r\n                    if ( data.collisionWidth > outerWidth ) {\r\n\r\n                        // Element is initially over the left side of within\r\n                        if ( overLeft > 0 && overRight <= 0 ) {\r\n                            newOverRight = position.left + overLeft + data.collisionWidth - outerWidth -\r\n                                withinOffset;\r\n                            position.left += overLeft - newOverRight;\r\n\r\n                        // Element is initially over right side of within\r\n                        } else if ( overRight > 0 && overLeft <= 0 ) {\r\n                            position.left = withinOffset;\r\n\r\n                        // Element is initially over both left and right sides of within\r\n                        } else {\r\n                            if ( overLeft > overRight ) {\r\n                                position.left = withinOffset + outerWidth - data.collisionWidth;\r\n                            } else {\r\n                                position.left = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far left -> align with left edge\r\n                    } else if ( overLeft > 0 ) {\r\n                        position.left += overLeft;\r\n\r\n                    // Too far right -> align with right edge\r\n                    } else if ( overRight > 0 ) {\r\n                        position.left -= overRight;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.left = max( position.left - collisionPosLeft, position.left );\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        outerHeight = data.within.height,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = withinOffset - collisionPosTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - withinOffset,\r\n                        newOverBottom;\r\n\r\n                    // Element is taller than within\r\n                    if ( data.collisionHeight > outerHeight ) {\r\n\r\n                        // Element is initially over the top of within\r\n                        if ( overTop > 0 && overBottom <= 0 ) {\r\n                            newOverBottom = position.top + overTop + data.collisionHeight - outerHeight -\r\n                                withinOffset;\r\n                            position.top += overTop - newOverBottom;\r\n\r\n                        // Element is initially over bottom of within\r\n                        } else if ( overBottom > 0 && overTop <= 0 ) {\r\n                            position.top = withinOffset;\r\n\r\n                        // Element is initially over both top and bottom of within\r\n                        } else {\r\n                            if ( overTop > overBottom ) {\r\n                                position.top = withinOffset + outerHeight - data.collisionHeight;\r\n                            } else {\r\n                                position.top = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far up -> align with top\r\n                    } else if ( overTop > 0 ) {\r\n                        position.top += overTop;\r\n\r\n                    // Too far down -> align with bottom edge\r\n                    } else if ( overBottom > 0 ) {\r\n                        position.top -= overBottom;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.top = max( position.top - collisionPosTop, position.top );\r\n                    }\r\n                }\r\n            },\r\n            flip: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.left + within.scrollLeft,\r\n                        outerWidth = within.width,\r\n                        offsetLeft = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = collisionPosLeft - offsetLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - offsetLeft,\r\n                        myOffset = data.my[ 0 ] === \"left\" ?\r\n                            -data.elemWidth :\r\n                            data.my[ 0 ] === \"right\" ?\r\n                                data.elemWidth :\r\n                                0,\r\n                        atOffset = data.at[ 0 ] === \"left\" ?\r\n                            data.targetWidth :\r\n                            data.at[ 0 ] === \"right\" ?\r\n                                -data.targetWidth :\r\n                                0,\r\n                        offset = -2 * data.offset[ 0 ],\r\n                        newOverRight,\r\n                        newOverLeft;\r\n\r\n                    if ( overLeft < 0 ) {\r\n                        newOverRight = position.left + myOffset + atOffset + offset + data.collisionWidth -\r\n                            outerWidth - withinOffset;\r\n                        if ( newOverRight < 0 || newOverRight < abs( overLeft ) ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overRight > 0 ) {\r\n                        newOverLeft = position.left - data.collisionPosition.marginLeft + myOffset +\r\n                            atOffset + offset - offsetLeft;\r\n                        if ( newOverLeft > 0 || abs( newOverLeft ) < overRight ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.top + within.scrollTop,\r\n                        outerHeight = within.height,\r\n                        offsetTop = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = collisionPosTop - offsetTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - offsetTop,\r\n                        top = data.my[ 1 ] === \"top\",\r\n                        myOffset = top ?\r\n                            -data.elemHeight :\r\n                            data.my[ 1 ] === \"bottom\" ?\r\n                                data.elemHeight :\r\n                                0,\r\n                        atOffset = data.at[ 1 ] === \"top\" ?\r\n                            data.targetHeight :\r\n                            data.at[ 1 ] === \"bottom\" ?\r\n                                -data.targetHeight :\r\n                                0,\r\n                        offset = -2 * data.offset[ 1 ],\r\n                        newOverTop,\r\n                        newOverBottom;\r\n                    if ( overTop < 0 ) {\r\n                        newOverBottom = position.top + myOffset + atOffset + offset + data.collisionHeight -\r\n                            outerHeight - withinOffset;\r\n                        if ( newOverBottom < 0 || newOverBottom < abs( overTop ) ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overBottom > 0 ) {\r\n                        newOverTop = position.top - data.collisionPosition.marginTop + myOffset + atOffset +\r\n                            offset - offsetTop;\r\n                        if ( newOverTop > 0 || abs( newOverTop ) < overBottom ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            flipfit: {\r\n                left: function() {\r\n                    positions.flip.left.apply( this, arguments );\r\n                    positions.fit.left.apply( this, arguments );\r\n                },\r\n                top: function() {\r\n                    positions.flip.top.apply( this, arguments );\r\n                    positions.fit.top.apply( this, arguments );\r\n                }\r\n            }\r\n        };\r\n\r\n        geom.posit = posit;\r\n    })();\r\n\r\n    return skylark.attach(\"domx.geom\", geom);\r\n});\ndefine('skylark-domx-geom/main',[\r\n\t\"./geom\"\r\n],function(geom){\r\n\treturn geom;\r\n});\ndefine('skylark-domx-geom', ['skylark-domx-geom/main'], function (main) { return main; });\n\ndefine('skylark-domx-fx/fx',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-eventer\"\r\n], function(skylark, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    /*   \r\n     * Perform a custom animation of a set of CSS properties.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} properties\r\n     * @param {String} ease\r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     * @param {Number or String} delay\r\n     */\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false,\r\n            resetClipAuto = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                var v = properties[key];\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + v + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    if (key == \"clip\" && langx.isPlainObject(v)) {\r\n                        cssValues[key] = \"rect(\" + v.top+\"px,\"+ v.right +\"px,\"+ v.bottom +\"px,\"+ v.left+\"px)\";\r\n                        if (styler.css(elm,\"clip\") == \"auto\") {\r\n                            var size = geom.size(elm);\r\n                            styler.css(elm,\"clip\",\"rect(\"+\"0px,\"+ size.width +\"px,\"+ size.height +\"px,\"+\"0px)\");  \r\n                            resetClipAuto = true;\r\n                        }\r\n\r\n                    } else {\r\n                        cssValues[key] = v;\r\n                    }\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            if (resetClipAuto) {\r\n //               styler.css(elm,\"clip\",\"auto\");\r\n            }\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Hide an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Set the vertical position of the scroll bar for an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} pos\r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Adjust the opacity of an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Number or String} opacity\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display an element by fading them to opaque.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element by fading them to transparent.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            opacity = styler.css(elm,\"opacity\"),\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.css(elm,\"opacity\",opacity);\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element by animating its opacity.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} ceasing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideDown(elm, duration, callback) {\r\n\r\n        // get the element position to restore it then\r\n        var position = styler.css(elm, 'position');\r\n\r\n        // show element if it is hidden\r\n        show(elm);\r\n\r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm, {\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n\r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm, 'margin-top');\r\n        var marginBottom = styler.css(elm, 'margin-bottom');\r\n        var paddingTop = styler.css(elm, 'padding-top');\r\n        var paddingBottom = styler.css(elm, 'padding-bottom');\r\n        var height = styler.css(elm, 'height');\r\n\r\n        // set initial css for animation\r\n        styler.css(elm, {\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n\r\n        // animate to gotten height, margin and padding\r\n        animate(elm, {\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration: duration,\r\n            complete: function() {\r\n                if (callback) {\r\n                    callback.apply(elm);\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideUp(elm, duration, callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n\r\n            // get the element position to restore it then\r\n            var position = styler.css(elm, 'position');\r\n\r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm, 'height');\r\n            var marginTop = styler.css(elm, 'margin-top');\r\n            var marginBottom = styler.css(elm, 'margin-bottom');\r\n            var paddingTop = styler.css(elm, 'padding-top');\r\n            var paddingBottom = styler.css(elm, 'padding-bottom');\r\n\r\n            // set initial css for animation\r\n            styler.css(elm, {\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n\r\n            // animate element height, margin and padding to zero\r\n            animate(elm, {\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, {\r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function() {\r\n                    hide(elm);\r\n                    styler.css(elm, {\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display or hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideToggle(elm, duration, callback) {\r\n\r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm, duration, callback);\r\n        }\r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm, duration, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function emulateTransitionEnd(elm,duration) {\r\n        var called = false;\r\n        eventer.one(elm,'transitionEnd', function () { \r\n            called = true;\r\n        })\r\n        var callback = function () { \r\n            if (!called) {\r\n                eventer.trigger(elm,browser.support.transition.end) \r\n            }\r\n        };\r\n        setTimeout(callback, duration);\r\n        \r\n        return this;\r\n    } \r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate,\r\n        emulateTransitionEnd,\r\n        fadeIn,\r\n        fadeOut,\r\n        fadeTo,\r\n        fadeToggle,\r\n        hide,\r\n        scrollToTop,\r\n\r\n        slideDown,\r\n        slideToggle,\r\n        slideUp,\r\n        show,\r\n        toggle\r\n    });\r\n\r\n    return skylark.attach(\"domx.fx\", fx);\r\n});\ndefine('skylark-domx-fx/main',[\r\n\t\"./fx\"\r\n],function(fx){\r\n\treturn fx;\r\n});\ndefine('skylark-domx-fx', ['skylark-domx-fx/main'], function (main) { return main; });\n\ndefine('skylark-domx-scripter/scripter',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-finder\"\r\n], function(skylark, langx, noder, finder) {\r\n\r\n    var head = document.getElementsByTagName('head')[0],\r\n        scriptsByUrl = {},\r\n        scriptElementsById = {},\r\n        count = 0;\r\n\r\n    var rscriptType = ( /^$|^module$|\\/(?:java|ecma)script/i );\r\n\r\n    function scripter() {\r\n        return scripter;\r\n    }\r\n\r\n\r\n    var preservedScriptAttributes = {\r\n        type: true,\r\n        src: true,\r\n        nonce: true,\r\n        noModule: true\r\n    };\r\n\r\n    function evaluate(code,node, doc ) {\r\n        doc = doc || document;\r\n\r\n        var i, val,\r\n            script = doc.createElement(\"script\");\r\n\r\n        script.text = code;\r\n        if ( node ) {\r\n            for ( i in preservedScriptAttributes ) {\r\n\r\n                // Support: Firefox 64+, Edge 18+\r\n                // Some browsers don't support the \"nonce\" property on scripts.\r\n                // On the other hand, just using `getAttribute` is not enough as\r\n                // the `nonce` attribute is reset to an empty string whenever it\r\n                // becomes browsing-context connected.\r\n                // See https://github.com/whatwg/html/issues/2369\r\n                // See https://html.spec.whatwg.org/#nonce-attributes\r\n                // The `node.getAttribute` check was added for the sake of\r\n                // `jQuery.globalEval` so that it can fake a nonce-containing node\r\n                // via an object.\r\n                val = node[ i ] || node.getAttribute && node.getAttribute( i );\r\n                if ( val ) {\r\n                    script.setAttribute( i, val );\r\n                }\r\n            }\r\n        }\r\n        doc.head.appendChild( script ).parentNode.removeChild( script );\r\n\r\n        return this;\r\n    }\r\n\r\n    langx.mixin(scripter, {\r\n        /*\r\n         * Load a script from a url into the document.\r\n         * @param {} url\r\n         * @param {} loadedCallback\r\n         * @param {} errorCallback\r\n         */\r\n        loadJavaScript: function(url, loadedCallback, errorCallback) {\r\n            var script = scriptsByUrl[url];\r\n            if (!script) {\r\n                script = scriptsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                }\r\n            }\r\n\r\n            script.loadedCallbacks.push(loadedCallback);\r\n            script.errorCallbacks.push(errorCallback);\r\n\r\n            if (script.state === 1) {\r\n                script.node.onload();\r\n            } else if (script.state === -1) {\r\n                script.node.onerror();\r\n            } else {\r\n                var node = script.node = document.createElement(\"script\"),\r\n                    id = script.id = (count++);\r\n\r\n                node.type = \"text/javascript\";\r\n                node.async = false;\r\n                node.defer = false;\r\n                startTime = new Date().getTime();\r\n                head.appendChild(node);\r\n\r\n                node.onload = function() {\r\n                        script.state = 1;\r\n\r\n                        var callbacks = script.loadedCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    },\r\n                    node.onerror = function() {\r\n                        script.state = -1;\r\n                        var callbacks = script.errorCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    };\r\n                node.src = url;\r\n\r\n                scriptElementsById[id] = node;\r\n            }\r\n            return script.id;\r\n        },\r\n        /*\r\n         * Remove the specified script from the document.\r\n         * @param {Number} id\r\n         */\r\n        deleteJavaScript: function(id) {\r\n            var node = scriptElementsById[id];\r\n            if (node) {\r\n                var url = node.src;\r\n                noder.remove(node);\r\n                delete scriptElementsById[id];\r\n                delete scriptsByUrl[url];\r\n            }\r\n        },\r\n\r\n        evaluate : evaluate,\r\n\r\n        html : function(node,value) {\r\n\r\n            var result = noder.html(node,value);\r\n\r\n            if (value !== undefined) {\r\n                var scripts = node.querySelectorAll('script');\r\n\r\n                for (var i =0; i<scripts.length; i++) {\r\n                    var node1 = scripts[i];\r\n                    if (rscriptType.test( node1.type || \"\" ) ) {\r\n                      evaluate(node1.textContent,node1);\r\n                    }\r\n                }       \r\n                return this;         \r\n            } else {\r\n                return result;\r\n            }\r\n\r\n\r\n\r\n        }\r\n    });\r\n\r\n    return skylark.attach(\"domx.scripter\", scripter);\r\n});\ndefine('skylark-domx-scripter/main',[\r\n\t\"./scripter\"\r\n],function(scripter){\r\n\treturn scripter;\r\n});\ndefine('skylark-domx-scripter', ['skylark-domx-scripter/main'], function (main) { return main; });\n\ndefine('skylark-domx-query/query',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-fx\",\r\n    \"skylark-domx-scripter\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx,scripter) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        sort = Array.prototype.sort,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = langx.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return query(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                //if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                //}\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            //if (selector === undefined) { //TODO : needs confirm?\r\n            //    selector = util;\r\n            //    util = undefined;\r\n            //}\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) { // TODO\r\n                //if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                //}\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx,node) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (selector !== window && isArrayLike(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            sort : function() {\r\n                return sort.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            //remove: wrapper_every_act(noder.remove, noder),\r\n            remove : function(selector) {\r\n                if (selector) {\r\n                    return this.find(selector).remove();\r\n                }\r\n                this.each(function(i,node){\r\n                    noder.remove(node);\r\n                });\r\n                return this;\r\n            },\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector) > -1;\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx,node) {\r\n                        if (!selector.call(this, idx,node)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index,node) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index,node) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index,node) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index,node) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSiblings, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(scripter.html, scripter, scripter.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pagePosition, geom, geom.pagePosition),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function(options) {\r\n                if (!this.length) return\r\n\r\n                if (options) {\r\n                    if (options.of && options.of.length) {\r\n                        options = langx.clone(options);\r\n                        options.of = options.of[0];\r\n                    }\r\n                    return this.each( function() {\r\n                        geom.posit(this,options);\r\n                    });\r\n                } else {\r\n                    var elem = this[0];\r\n\r\n                    return geom.relativePosition(elem);\r\n\r\n                }             \r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom)\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        $.fn.clientSize = wrapper_value(geom.clientSize, geom.clientSize);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.clientWidth, geom, geom.clientWidth);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.clientHeight, geom, geom.clientHeight);\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"function\" || argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error transitionEnd').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n        $.fn.emulateTransitionEnd = wrapper_every_act(fx.emulateTransitionEnd, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\r\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\r\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\r\n\r\n        $.fn.scrollParent = function( includeHidden ) {\r\n            var position = this.css( \"position\" ),\r\n                excludeStaticParent = position === \"absolute\",\r\n                overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n                scrollParent = this.parents().filter( function() {\r\n                    var parent = $( this );\r\n                    if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                        return false;\r\n                    }\r\n                    return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                        parent.css( \"overflow-x\" ) );\r\n                } ).eq( 0 );\r\n\r\n            return position === \"fixed\" || !scrollParent.length ?\r\n                $( this[ 0 ].ownerDocument || document ) :\r\n                scrollParent;\r\n        };\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings,prev,prevAll,next,nextAll'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n        $.fn.disableSelection = ( function() {\r\n            var eventType = \"onselectstart\" in document.createElement( \"div\" ) ?\r\n                \"selectstart\" :\r\n                \"mousedown\";\r\n\r\n            return function() {\r\n                return this.on( eventType + \".ui-disableSelection\", function( event ) {\r\n                    event.preventDefault();\r\n                } );\r\n            };\r\n        } )();\r\n\r\n        $.fn.enableSelection = function() {\r\n            return this.off( \".ui-disableSelection\" );\r\n        };\r\n\r\n        $.fn.reflow = function() {\r\n            return noder.flow(this[0]);\r\n        };\r\n\r\n        $.fn.isBlockNode = function() {\r\n            return noder.isBlockNode(this[0]);\r\n        };\r\n       \r\n\r\n    })(query);\r\n\r\n    query.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = plugins.instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n    return skylark.attach(\"domx.query\", query);\r\n\r\n});\ndefine('skylark-domx-query/main',[\r\n\t\"./query\"\r\n],function(query){\r\n\treturn query;\r\n});\ndefine('skylark-domx-query', ['skylark-domx-query/main'], function (main) { return main; });\n\ndefine('skylark-domx-files/files',[\r\n    \"skylark-langx/skylark\"\r\n], function(skylark) {\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','),\r\n            mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]),\r\n            n = bstr.length,\r\n            u8arr = new Uint8Array(n);\r\n        while (n--) {\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], { type: mime });\r\n    }\r\n\r\n\r\n    var files = function() {\r\n        return files;\r\n    };\r\n\r\n    return skylark.attach(\"domx.files\", files);\r\n});\ndefine('skylark-storages-diskfs/diskfs',[\r\n    \"skylark-langx/skylark\"\r\n], function(skylark) {\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','),\r\n            mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]),\r\n            n = bstr.length,\r\n            u8arr = new Uint8Array(n);\r\n        while (n--) {\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], { type: mime });\r\n    }\r\n\r\n\r\n    var diskfs = function() {\r\n        return diskfs;\r\n    };\r\n\r\n    return skylark.attach(\"storages.diskfs\", diskfs);\r\n});\n define('skylark-storages-diskfs/webentry',[\r\n    \"skylark-langx/arrays\",\r\n    \"skylark-langx/Deferred\",\r\n    \"./diskfs\"\r\n],function(arrays,Deferred, diskfs){\r\n    var concat = Array.prototype.concat;\r\n    var webentry = (function() {\r\n        function one(entry, path) {\r\n            var d = new Deferred(),\r\n                onError = function(e) {\r\n                    d.reject(e);\r\n                };\r\n\r\n            path = path || '';\r\n            if (entry.isFile) {\r\n                entry.file(function(file) {\r\n                    file.relativePath = path;\r\n                    d.resolve(file);\r\n                }, onError);\r\n            } else if (entry.isDirectory) {\r\n                var dirReader = entry.createReader();\r\n                dirReader.readEntries(function(entries) {\r\n                    all(\r\n                        entries,\r\n                        path + entry.name + '/'\r\n                    ).then(function(files) {\r\n                        d.resolve(files);\r\n                    }).catch(onError);\r\n                }, onError);\r\n            } else {\r\n                // Return an empy list for file system items\r\n                // other than files or directories:\r\n                d.resolve([]);\r\n            }\r\n            return d.promise;\r\n        }\r\n\r\n        function all(entries, path) {\r\n            return Deferred.all(\r\n                arrays.map(entries, function(entry) {\r\n                    return one(entry, path);\r\n                })\r\n            ).then(function() {\r\n                return concat.apply([], arguments);\r\n            });\r\n        }\r\n\r\n        return {\r\n            one: one,\r\n            all: all\r\n        };\r\n    })();\r\n\r\n    return diskfs.webentry = webentry;\r\n});\n  define('skylark-domx-files/dropzone',[\r\n    \"skylark-langx/arrays\",\r\n    \"skylark-langx/Deferred\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-eventer\",\r\n    \"./files\",\r\n    \"skylark-storages-diskfs/webentry\"\r\n],function(arrays,Deferred, styler, eventer, files, webentry){  /*\r\n     * Make the specified element to could accept HTML5 file drag and drop.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} params\r\n     */\r\n    function dropzone(elm, params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"dropzone\",\r\n            droppedCallback = params.dropped;\r\n\r\n        var enterdCount = 0;\r\n        eventer.on(elm, \"dragenter\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                eventer.stop(e);\r\n                enterdCount++;\r\n                styler.addClass(elm, hoverClass)\r\n            }\r\n        });\r\n\r\n        eventer.on(elm, \"dragover\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                eventer.stop(e);\r\n            }\r\n        });\r\n\r\n        eventer.on(elm, \"dragleave\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                enterdCount--\r\n                if (enterdCount == 0) {\r\n                    styler.removeClass(elm, hoverClass);\r\n                }\r\n            }\r\n        });\r\n\r\n        eventer.on(elm, \"drop\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                styler.removeClass(elm, hoverClass)\r\n                eventer.stop(e);\r\n                if (droppedCallback) {\r\n                    var items = e.dataTransfer.items;\r\n                    if (items && items.length && (items[0].webkitGetAsEntry ||\r\n                            items[0].getAsEntry)) {\r\n                        webentry.all(\r\n                            arrays.map(items, function(item) {\r\n                                if (item.webkitGetAsEntry) {\r\n                                    return item.webkitGetAsEntry();\r\n                                }\r\n                                return item.getAsEntry();\r\n                            })\r\n                        ).then(droppedCallback);\r\n                    } else {\r\n                        droppedCallback(e.dataTransfer.files);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n     return files.dropzone = dropzone;\r\n});\ndefine('skylark-domx-files/pastezone',[\r\n    \"skylark-langx/objects\",\r\n    \"skylark-domx-eventer\",\r\n    \"./files\"\r\n],function(objects, eventer, files){\r\n    function pastezone(elm, params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"pastezone\",\r\n            pastedCallback = params.pasted;\r\n\r\n        eventer.on(elm, \"paste\", function(e) {\r\n            var items = e.originalEvent && e.originalEvent.clipboardData &&\r\n                e.originalEvent.clipboardData.items,\r\n                files = [];\r\n            if (items && items.length) {\r\n                objects.each(items, function(index, item) {\r\n                    var file = item.getAsFile && item.getAsFile();\r\n                    if (file) {\r\n                        files.push(file);\r\n                    }\r\n                });\r\n            }\r\n            if (pastedCallback && files.length) {\r\n                pastedCallback(files);\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    return files.pastezone = pastezone;\r\n\r\n});\r\n\ndefine('skylark-storages-diskfs/select',[\r\n    \"./diskfs\"\r\n],function(diskfs){\r\n    var fileInput,\r\n        fileInputForm,\r\n        fileSelected,\r\n        maxFileSize = 1 / 0;\r\n\r\n    function select(params) {\r\n        params = params || {};\r\n        var directory = params.directory || false,\r\n            multiple = params.multiple || false,\r\n            fileSelected = params.picked;\r\n        if (!fileInput) {\r\n            var input = fileInput = document.createElement(\"input\");\r\n\r\n            function selectFiles(pickedFiles) {\r\n                for (var i = pickedFiles.length; i--;) {\r\n                    if (pickedFiles[i].size > maxFileSize) {\r\n                        pickedFiles.splice(i, 1);\r\n                    }\r\n                }\r\n                fileSelected(pickedFiles);\r\n            }\r\n\r\n            input.type = \"file\";\r\n            input.style.position = \"fixed\";\r\n            input.style.left = 0;\r\n            input.style.top = 0;\r\n            input.style.opacity = .001;\r\n            document.body.appendChild(input);\r\n\r\n            input.onchange = function(e) {\r\n                var entries = e.target.webkitEntries || e.target.entries;\r\n\r\n                if (entries && entries.length) {\r\n                    webentry.all(entries).then(function(files) {\r\n                        selectFiles(files);\r\n                    });\r\n                } else {\r\n                    selectFiles(Array.prototype.slice.call(e.target.files));\r\n                }\r\n                // reset to \"\", so selecting the same file next time still trigger the change handler\r\n                input.value = \"\";\r\n            };\r\n        }\r\n        fileInput.multiple = multiple;\r\n        fileInput.webkitdirectory = directory;\r\n        fileInput.click();\r\n    }\r\n\r\n    return diskfs.select = select;\r\n});\r\n\r\n\ndefine('skylark-domx-files/picker',[\r\n    \"skylark-langx/objects\",\r\n    \"skylark-domx-eventer\",\r\n    \"./files\",\r\n    \"skylark-storages-diskfs/select\"\r\n],function(objects, eventer, files, select){\r\n    /*\r\n     * Make the specified element to pop-up the file selection dialog box when clicked , and read the contents the files selected from client file system by user.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} params\r\n     */\r\n    function picker(elm, params) {\r\n        eventer.on(elm, \"click\", function(e) {\r\n            e.preventDefault();\r\n            select(params);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    return files.picker = picker;\r\n\r\n});\r\n\r\n\r\n\ndefine('skylark-widgets-filer/domx/upload',[\r\n    \"skylark-langx/types\",\r\n    \"skylark-langx/objects\",\r\n    \"skylark-langx/arrays\",\r\n    \"skylark-langx/Deferred\",\r\n    \"skylark-langx/Xhr\"\r\n],function(types, objects, arrays, Deferred,Xhr){\r\n\r\n    function upload(params) {\r\n        var xoptions = objects.mixin({\r\n            contentRange: null, //\r\n\r\n            // The parameter name for the file form data (the request argument name).\r\n            // If undefined or empty, the name property of the file input field is\r\n            // used, or \"files[]\" if the file input name property is also empty,\r\n            // can be a string or an array of strings:\r\n            paramName: undefined,\r\n            // By default, each file of a selection is uploaded using an individual\r\n            // request for XHR type uploads. Set to false to upload file\r\n            // selections in one request each:\r\n            singleFileUploads: true,\r\n            // To limit the number of files uploaded with one XHR request,\r\n            // set the following option to an integer greater than 0:\r\n            limitMultiFileUploads: undefined,\r\n            // The following option limits the number of files uploaded with one\r\n            // XHR request to keep the request size under or equal to the defined\r\n            // limit in bytes:\r\n            limitMultiFileUploadSize: undefined,\r\n            // Multipart file uploads add a number of bytes to each uploaded file,\r\n            // therefore the following option adds an overhead for each file used\r\n            // in the limitMultiFileUploadSize configuration:\r\n            limitMultiFileUploadSizeOverhead: 512,\r\n            // Set the following option to true to issue all file upload requests\r\n            // in a sequential order:\r\n            sequentialUploads: false,\r\n            // To limit the number of concurrent uploads,\r\n            // set the following option to an integer greater than 0:\r\n            limitConcurrentUploads: undefined,\r\n            // By default, XHR file uploads are sent as multipart/form-data.\r\n            // The iframe transport is always using multipart/form-data.\r\n            // Set to false to enable non-multipart XHR uploads:\r\n            multipart: true,\r\n            // To upload large files in smaller chunks, set the following option\r\n            // to a preferred maximum chunk size. If set to 0, null or undefined,\r\n            // or the browser does not support the required Blob API, files will\r\n            // be uploaded as a whole.\r\n            maxChunkSize: undefined,\r\n            // When a non-multipart upload or a chunked multipart upload has been\r\n            // aborted, this option can be used to resume the upload by setting\r\n            // it to the size of the already uploaded bytes. This option is most\r\n            // useful when modifying the options object inside of the \"add\" or\r\n            // \"send\" callbacks, as the options are cloned for each file upload.\r\n            uploadedBytes: undefined,\r\n            // By default, failed (abort or error) file uploads are removed from the\r\n            // global progress calculation. Set the following option to false to\r\n            // prevent recalculating the global progress data:\r\n            recalculateProgress: true,\r\n            // Interval in milliseconds to calculate and trigger progress events:\r\n            progressInterval: 100,\r\n            // Interval in milliseconds to calculate progress bitrate:\r\n            bitrateInterval: 500,\r\n            // By default, uploads are started automatically when adding files:\r\n            autoUpload: true,\r\n\r\n            // Error and info messages:\r\n            messages: {\r\n                uploadedBytes: 'Uploaded bytes exceed file size'\r\n            },\r\n\r\n            // Translation function, gets the message key to be translated\r\n            // and an object with context specific data as arguments:\r\n            i18n: function(message, context) {\r\n                message = this.messages[message] || message.toString();\r\n                if (context) {\r\n                    objects.each(context, function(key, value) {\r\n                        message = message.replace('{' + key + '}', value);\r\n                    });\r\n                }\r\n                return message;\r\n            },\r\n\r\n            // Additional form data to be sent along with the file uploads can be set\r\n            // using this option, which accepts an array of objects with name and\r\n            // value properties, a function returning such an array, a FormData\r\n            // object (for XHR file uploads), or a simple object.\r\n            // The form of the first fileInput is given as parameter to the function:\r\n            formData: function(form) {\r\n                return form.serializeArray();\r\n            },\r\n\r\n            // The add callback is invoked as soon as files are added to the fileupload\r\n            // widget (via file input selection, drag & drop, paste or add API call).\r\n            // If the singleFileUploads option is enabled, this callback will be\r\n            // called once for each file in the selection for XHR file uploads, else\r\n            // once for each file selection.\r\n            //\r\n            // The upload starts when the submit method is invoked on the data parameter.\r\n            // The data object contains a files property holding the added files\r\n            // and allows you to override plugin options as well as define ajax settings.\r\n            //\r\n            // Listeners for this callback can also be bound the following way:\r\n            // .bind('fileuploadadd', func);\r\n            //\r\n            // data.submit() returns a Promise object and allows to attach additional\r\n            // handlers using jQuery's Deferred callbacks:\r\n            // data.submit().done(func).fail(func).always(func);\r\n            add: function(e, data) {\r\n                if (e.isDefaultPrevented()) {\r\n                    return false;\r\n                }\r\n                if (data.autoUpload || (data.autoUpload !== false &&\r\n                        $(this).fileupload('option', 'autoUpload'))) {\r\n                    data.process().done(function() {\r\n                        data.submit();\r\n                    });\r\n                }\r\n            },\r\n\r\n            // Other callbacks:\r\n\r\n            // Callback for the submit event of each file upload:\r\n            // submit: function (e, data) {}, // .bind('fileuploadsubmit', func);\r\n\r\n            // Callback for the start of each file upload request:\r\n            // send: function (e, data) {}, // .bind('fileuploadsend', func);\r\n\r\n            // Callback for successful uploads:\r\n            // done: function (e, data) {}, // .bind('fileuploaddone', func);\r\n\r\n            // Callback for failed (abort or error) uploads:\r\n            // fail: function (e, data) {}, // .bind('fileuploadfail', func);\r\n\r\n            // Callback for completed (success, abort or error) requests:\r\n            // always: function (e, data) {}, // .bind('fileuploadalways', func);\r\n\r\n            // Callback for upload progress events:\r\n            // progress: function (e, data) {}, // .bind('fileuploadprogress', func);\r\n\r\n            // Callback for global upload progress events:\r\n            // progressall: function (e, data) {}, // .bind('fileuploadprogressall', func);\r\n\r\n            // Callback for uploads start, equivalent to the global ajaxStart event:\r\n            // start: function (e) {}, // .bind('fileuploadstart', func);\r\n\r\n            // Callback for uploads stop, equivalent to the global ajaxStop event:\r\n            // stop: function (e) {}, // .bind('fileuploadstop', func);\r\n\r\n            // Callback for change events of the fileInput(s):\r\n            // change: function (e, data) {}, // .bind('fileuploadchange', func);\r\n\r\n            // Callback for paste events to the pasteZone(s):\r\n            // paste: function (e, data) {}, // .bind('fileuploadpaste', func);\r\n\r\n            // Callback for drop events of the dropZone(s):\r\n            // drop: function (e, data) {}, // .bind('fileuploaddrop', func);\r\n\r\n            // Callback for dragover events of the dropZone(s):\r\n            // dragover: function (e) {}, // .bind('fileuploaddragover', func);\r\n\r\n            // Callback for the start of each chunk upload request:\r\n            // chunksend: function (e, data) {}, // .bind('fileuploadchunksend', func);\r\n\r\n            // Callback for successful chunk uploads:\r\n            // chunkdone: function (e, data) {}, // .bind('fileuploadchunkdone', func);\r\n\r\n            // Callback for failed (abort or error) chunk uploads:\r\n            // chunkfail: function (e, data) {}, // .bind('fileuploadchunkfail', func);\r\n\r\n            // Callback for completed (success, abort or error) chunk upload requests:\r\n            // chunkalways: function (e, data) {}, // .bind('fileuploadchunkalways', func);\r\n\r\n            // The plugin options are used as settings object for the ajax calls.\r\n            // The following are jQuery ajax settings required for the file uploads:\r\n            processData: false,\r\n            contentType: false,\r\n            cache: false\r\n        }, params);\r\n\r\n        var blobSlice = function() {\r\n                var slice = Blob.prototype.slice || Blob.prototype.webkitSlice || Blob.prototype.mozSlice;\r\n                return slice.apply(this, arguments);\r\n            },\r\n            ajax = function(data) {\r\n                return Xhr.request(data.url, data);\r\n            };\r\n\r\n        function initDataSettings(o) {\r\n            o.type = o.type || \"POST\";\r\n\r\n            if (!chunkedUpload(o, true)) {\r\n                if (!o.data) {\r\n                    initXHRData(o);\r\n                }\r\n                //initProgressListener(o);\r\n            }\r\n        }\r\n\r\n        function initXHRData(o) {\r\n            var that = this,\r\n                formData,\r\n                file = o.files[0],\r\n                // Ignore non-multipart setting if not supported:\r\n                multipart = o.multipart,\r\n                paramName = types.type(o.paramName) === 'array' ?\r\n                o.paramName[0] : o.paramName;\r\n\r\n            o.headers = objects.mixin({}, o.headers);\r\n            if (o.contentRange) {\r\n                o.headers['Content-Range'] = o.contentRange;\r\n            }\r\n            if (!multipart) {\r\n                o.headers['Content-Disposition'] = 'attachment; filename=\"' +\r\n                    encodeURI(file.name) + '\"';\r\n                o.contentType = file.type || 'application/octet-stream';\r\n                o.data = o.blob || file;\r\n            } else {\r\n                formData = new FormData();\r\n                if (o.blob) {\r\n                    formData.append(paramName, o.blob, file.name);\r\n                } else {\r\n                    objects.each(o.files, function(index, file) {\r\n                        // This check allows the tests to run with\r\n                        // dummy objects:\r\n                        formData.append(\r\n                            (types.type(o.paramName) === 'array' &&\r\n                                o.paramName[index]) || paramName,\r\n                            file,\r\n                            file.uploadName || file.name\r\n                        );\r\n                    });\r\n                }\r\n                o.data = formData;\r\n            }\r\n            // Blob reference is not needed anymore, free memory:\r\n            o.blob = null;\r\n        }\r\n\r\n        function getTotal(files) {\r\n            var total = 0;\r\n            objects.each(files, function(index, file) {\r\n                total += file.size || 1;\r\n            });\r\n            return total;\r\n        }\r\n\r\n        function getUploadedBytes(jqXHR) {\r\n            var range = jqXHR.getResponseHeader('Range'),\r\n                parts = range && range.split('-'),\r\n                upperBytesPos = parts && parts.length > 1 &&\r\n                parseInt(parts[1], 10);\r\n            return upperBytesPos && upperBytesPos + 1;\r\n        }\r\n\r\n        function initProgressObject(obj) {\r\n            var progress = {\r\n                loaded: 0,\r\n                total: 0,\r\n                bitrate: 0\r\n            };\r\n            if (obj._progress) {\r\n                objects.mixin(obj._progress, progress);\r\n            } else {\r\n                obj._progress = progress;\r\n            }\r\n        }\r\n\r\n        function BitrateTimer() {\r\n            this.timestamp = ((Date.now) ? Date.now() : (new Date()).getTime());\r\n            this.loaded = 0;\r\n            this.bitrate = 0;\r\n            this.getBitrate = function(now, loaded, interval) {\r\n                var timeDiff = now - this.timestamp;\r\n                if (!this.bitrate || !interval || timeDiff > interval) {\r\n                    this.bitrate = (loaded - this.loaded) * (1000 / timeDiff) * 8;\r\n                    this.loaded = loaded;\r\n                    this.timestamp = now;\r\n                }\r\n                return this.bitrate;\r\n            };\r\n        }\r\n\r\n        function chunkedUpload(options, testOnly) {\r\n            options.uploadedBytes = options.uploadedBytes || 0;\r\n            var that = this,\r\n                file = options.files[0],\r\n                fs = file.size,\r\n                ub = options.uploadedBytes,\r\n                mcs = options.maxChunkSize || fs,\r\n                slice = blobSlice,\r\n                dfd = new Deferred(),\r\n                promise = dfd.promise,\r\n                jqXHR,\r\n                upload;\r\n            if (!(slice && (ub || mcs < fs)) ||\r\n                options.data) {\r\n                return false;\r\n            }\r\n            if (testOnly) {\r\n                return true;\r\n            }\r\n            if (ub >= fs) {\r\n                file.error = options.i18n('uploadedBytes');\r\n                return this._getXHRPromise(\r\n                    false,\r\n                    options.context, [null, 'error', file.error]\r\n                );\r\n            }\r\n            // The chunk upload method:\r\n            upload = function() {\r\n                // Clone the options object for each chunk upload:\r\n                var o = objects.mixin({}, options),\r\n                    currentLoaded = o._progress.loaded;\r\n                o.blob = slice.call(\r\n                    file,\r\n                    ub,\r\n                    ub + mcs,\r\n                    file.type\r\n                );\r\n                // Store the current chunk size, as the blob itself\r\n                // will be dereferenced after data processing:\r\n                o.chunkSize = o.blob.size;\r\n                // Expose the chunk bytes position range:\r\n                o.contentRange = 'bytes ' + ub + '-' +\r\n                    (ub + o.chunkSize - 1) + '/' + fs;\r\n                // Process the upload data (the blob and potential form data):\r\n                initXHRData(o);\r\n                // Add progress listeners for this chunk upload:\r\n                //initProgressListener(o);\r\n                jqXHR = ajax(o).done(function(result, textStatus, jqXHR) {\r\n                        ub = getUploadedBytes(jqXHR) ||\r\n                            (ub + o.chunkSize);\r\n                        // Create a progress event if no final progress event\r\n                        // with loaded equaling total has been triggered\r\n                        // for this chunk:\r\n                        if (currentLoaded + o.chunkSize - o._progress.loaded) {\r\n                            dfd.progress({\r\n                                lengthComputable: true,\r\n                                loaded: ub - o.uploadedBytes,\r\n                                total: ub - o.uploadedBytes\r\n                            });\r\n                        }\r\n                        options.uploadedBytes = o.uploadedBytes = ub;\r\n                        o.result = result;\r\n                        o.textStatus = textStatus;\r\n                        o.jqXHR = jqXHR;\r\n                        //that._trigger('chunkdone', null, o);\r\n                        //that._trigger('chunkalways', null, o);\r\n                        if (ub < fs) {\r\n                            // File upload not yet complete,\r\n                            // continue with the next chunk:\r\n                            upload();\r\n                        } else {\r\n                            dfd.resolveWith(\r\n                                o.context, [result, textStatus, jqXHR]\r\n                            );\r\n                        }\r\n                    })\r\n                    .fail(function(jqXHR, textStatus, errorThrown) {\r\n                        o.jqXHR = jqXHR;\r\n                        o.textStatus = textStatus;\r\n                        o.errorThrown = errorThrown;\r\n                        //that._trigger('chunkfail', null, o);\r\n                        //that._trigger('chunkalways', null, o);\r\n                        dfd.rejectWith(\r\n                            o.context, [jqXHR, textStatus, errorThrown]\r\n                        );\r\n                    });\r\n            };\r\n            //this._enhancePromise(promise);\r\n            promise.abort = function() {\r\n                return jqXHR.abort();\r\n            };\r\n            upload();\r\n            return promise;\r\n        }\r\n\r\n        initDataSettings(xoptions);\r\n\r\n        xoptions._bitrateTimer = new BitrateTimer();\r\n\r\n        var jqXhr = chunkedUpload(xoptions) || ajax(xoptions);\r\n\r\n        jqXhr.options = xoptions;\r\n\r\n        return jqXhr;\r\n    }\r\n\r\n    return upload;  \r\n});\ndefine('skylark-widgets-filer/domx/uploader',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-query\",\r\n    \"skylark-domx-files/dropzone\",\r\n    \"skylark-domx-files/pastezone\",\r\n    \"skylark-domx-files/picker\",\r\n    \"./upload\"\r\n],function (langx,eventer,$,dropzone,pastezone,picker,upload) {\r\n    'use strict';\r\n\r\n    var Deferred = langx.Deferred;\r\n\r\n\r\n    // The fileupload widget listens for change events on file input fields defined\r\n    // via fileInput setting and paste or drop events of the given dropZone.\r\n    // In addition to the default jQuery Widget methods, the fileupload widget\r\n    // exposes the \"add\" and \"send\" methods, to add or directly send files using\r\n    // the fileupload API.\r\n    // By default, files added via file input selection, paste, drag & drop or\r\n    // \"add\" method are uploaded immediately, but it is possible to override\r\n    // the \"add\" callback option to queue file uploads.\r\n\r\n    var FileUploader = langx.Evented.inherit( {\r\n\r\n        options: {\r\n            // The drop target element(s), by the default the complete document.\r\n            // Set to null to disable drag & drop support:\r\n            dropZone: $(document),\r\n\r\n            // The paste target element(s), by the default the complete document.\r\n            // Set to null to disable paste support:\r\n            pasteZone: $(document),\r\n\r\n            // The file input field(s), that are listened to for change events.\r\n            // If undefined, it is set to the file input fields inside\r\n            // of the widget element on plugin initialization.\r\n            // Set to null to disable the change listener.\r\n            picker: undefined,\r\n\r\n\r\n            // The parameter name for the file form data (the request argument name).\r\n            // If undefined or empty, the name property of the file input field is\r\n            // used, or \"files[]\" if the file input name property is also empty,\r\n            // can be a string or an array of strings:\r\n            paramName: undefined,\r\n            \r\n            // By default, each file of a selection is uploaded using an individual\r\n            // request for XHR type uploads. Set to false to upload file\r\n            // selections in one request each:\r\n            singleFileUploads: true,\r\n            \r\n            // To limit the number of files uploaded with one XHR request,\r\n            // set the following option to an integer greater than 0:\r\n            limitMultiFileUploads: undefined,\r\n            \r\n            // The following option limits the number of files uploaded with one\r\n            // XHR request to keep the request size under or equal to the defined\r\n            // limit in bytes:\r\n            limitMultiFileUploadSize: undefined,\r\n\r\n            // Multipart file uploads add a number of bytes to each uploaded file,\r\n            // therefore the following option adds an overhead for each file used\r\n            // in the limitMultiFileUploadSize configuration:\r\n            limitMultiFileUploadSizeOverhead: 512,\r\n\r\n            // Set the following option to true to issue all file upload requests\r\n            // in a sequential order:\r\n            sequentialUploads: false,\r\n            \r\n            // To limit the number of concurrent uploads,\r\n            // set the following option to an integer greater than 0:\r\n            limitConcurrentUploads: undefined,\r\n\r\n            // Set the following option to the location of a postMessage window,\r\n            // to enable postMessage transport uploads:\r\n            postMessage: undefined,\r\n \r\n            // By default, XHR file uploads are sent as multipart/form-data.\r\n            // The iframe transport is always using multipart/form-data.\r\n            // Set to false to enable non-multipart XHR uploads:\r\n            multipart: true,\r\n \r\n            // To upload large files in smaller chunks, set the following option\r\n            // to a preferred maximum chunk size. If set to 0, null or undefined,\r\n            // or the browser does not support the required Blob API, files will\r\n            // be uploaded as a whole.\r\n            maxChunkSize: undefined,\r\n \r\n            // When a non-multipart upload or a chunked multipart upload has been\r\n            // aborted, this option can be used to resume the upload by setting\r\n            // it to the size of the already uploaded bytes. This option is most\r\n            // useful when modifying the options object inside of the \"add\" or\r\n            // \"send\" callbacks, as the options are cloned for each file upload.\r\n            uploadedBytes: undefined,\r\n \r\n            // By default, failed (abort or error) file uploads are removed from the\r\n            // global progress calculation. Set the following option to false to\r\n            // prevent recalculating the global progress data:\r\n            recalculateProgress: true,\r\n \r\n            // Interval in milliseconds to calculate and trigger progress events:\r\n            progressInterval: 100,\r\n \r\n            // Interval in milliseconds to calculate progress bitrate:\r\n            bitrateInterval: 500,\r\n \r\n            // By default, uploads are started automatically when adding files:\r\n            autoUpload: false,\r\n\r\n            // Error and info messages:\r\n            messages: {\r\n                uploadedBytes: 'Uploaded bytes exceed file size'\r\n            },\r\n\r\n            // Translation function, gets the message key to be translated\r\n            // and an object with context specific data as arguments:\r\n            i18n: function (message, context) {\r\n                message = this.messages[message] || message.toString();\r\n                if (context) {\r\n                    langx.each(context, function (key, value) {\r\n                        message = message.replace('{' + key + '}', value);\r\n                    });\r\n                }\r\n                return message;\r\n            },\r\n\r\n            // Additional form data to be sent along with the file uploads can be set\r\n            // using this option, which accepts an array of objects with name and\r\n            // value properties, a function returning such an array, a FormData\r\n            // object (for XHR file uploads), or a simple object.\r\n            // The form of the first fileInput is given as parameter to the function:\r\n            formData: function (form) {\r\n                return form.serializeArray();\r\n            },\r\n\r\n            // The add callback is invoked as soon as files are added to the fileupload\r\n            // widget (via file input selection, drag & drop, paste or add API call).\r\n            // If the singleFileUploads option is enabled, this callback will be\r\n            // called once for each file in the selection for XHR file uploads, else\r\n            // once for each file selection.\r\n            //\r\n            // The upload starts when the submit method is invoked on the data parameter.\r\n            // The data object contains a files property holding the added files\r\n            // and allows you to override plugin options as well as define ajax settings.\r\n            //\r\n            // Listeners for this callback can also be bound the following way:\r\n            // .bind('fileuploadadd', func);\r\n            //\r\n            // data.submit() returns a Promise object and allows to attach additional\r\n            // handlers using jQuery's Deferred callbacks:\r\n            // data.submit().done(func).fail(func).always(func);\r\n            add: function (e, data) {\r\n                if (e.isDefaultPrevented()) {\r\n                    return false;\r\n                }\r\n                if (data.autoUpload || (data.autoUpload !== false && $(this).fileupload(\"instance\").option('autoUpload') )) {\r\n                    data.process().done(function () {\r\n                        data.submit();\r\n                    });\r\n                }\r\n            },\r\n\r\n            // Other callbacks:\r\n\r\n            // Callback for the submit event of each file upload:\r\n            // submit: function (e, data) {}, // .bind('fileuploadsubmit', func);\r\n\r\n            // Callback for the start of each file upload request:\r\n            // send: function (e, data) {}, // .bind('fileuploadsend', func);\r\n\r\n            // Callback for successful uploads:\r\n            // done: function (e, data) {}, // .bind('fileuploaddone', func);\r\n\r\n            // Callback for failed (abort or error) uploads:\r\n            // fail: function (e, data) {}, // .bind('fileuploadfail', func);\r\n\r\n            // Callback for completed (success, abort or error) requests:\r\n            // always: function (e, data) {}, // .bind('fileuploadalways', func);\r\n\r\n            // Callback for upload progress events:\r\n            // progress: function (e, data) {}, // .bind('fileuploadprogress', func);\r\n\r\n            // Callback for global upload progress events:\r\n            // progressall: function (e, data) {}, // .bind('fileuploadprogressall', func);\r\n\r\n            // Callback for uploads start, equivalent to the global ajaxStart event:\r\n            // start: function (e) {}, // .bind('fileuploadstart', func);\r\n\r\n            // Callback for uploads stop, equivalent to the global ajaxStop event:\r\n            // stop: function (e) {}, // .bind('fileuploadstop', func);\r\n\r\n            // Callback for change events of the fileInput(s):\r\n            // change: function (e, data) {}, // .bind('fileuploadchange', func);\r\n\r\n            // Callback for paste events to the pasteZone(s):\r\n            // paste: function (e, data) {}, // .bind('fileuploadpaste', func);\r\n\r\n            // Callback for drop events of the dropZone(s):\r\n            // drop: function (e, data) {}, // .bind('fileuploaddrop', func);\r\n\r\n            // Callback for dragover events of the dropZone(s):\r\n            // dragover: function (e) {}, // .bind('fileuploaddragover', func);\r\n\r\n            // Callback for the start of each chunk upload request:\r\n            // chunksend: function (e, data) {}, // .bind('fileuploadchunksend', func);\r\n\r\n            // Callback for successful chunk uploads:\r\n            // chunkdone: function (e, data) {}, // .bind('fileuploadchunkdone', func);\r\n\r\n            // Callback for failed (abort or error) chunk uploads:\r\n            // chunkfail: function (e, data) {}, // .bind('fileuploadchunkfail', func);\r\n\r\n            // Callback for completed (success, abort or error) chunk upload requests:\r\n            // chunkalways: function (e, data) {}, // .bind('fileuploadchunkalways', func);\r\n\r\n            // The plugin options are used as settings object for the ajax calls.\r\n            // The following are jQuery ajax settings required for the file uploads:\r\n            processData: false,\r\n            contentType: false,\r\n            cache: false\r\n        },\r\n\r\n        // A list of options that require reinitializing event listeners and/or\r\n        // special initialization code:\r\n        _specialOptions: [\r\n            'picker',\r\n            'dropZone',\r\n            'pasteZone',\r\n            'multipart',\r\n            'filesContainer',\r\n            'uploadTemplateId',\r\n            'downloadTemplateId'            \r\n        ],\r\n\r\n        _BitrateTimer: function () {\r\n            this.timestamp = ((Date.now) ? Date.now() : (new Date()).getTime());\r\n            this.loaded = 0;\r\n            this.bitrate = 0;\r\n            this.getBitrate = function (now, loaded, interval) {\r\n                var timeDiff = now - this.timestamp;\r\n                if (!this.bitrate || !interval || timeDiff > interval) {\r\n                    this.bitrate = (loaded - this.loaded) * (1000 / timeDiff) * 8;\r\n                    this.loaded = loaded;\r\n                    this.timestamp = now;\r\n                }\r\n                return this.bitrate;\r\n            };\r\n        },\r\n\r\n        _getTotal: function (files) {\r\n            var total = 0;\r\n            langx.each(files, function (index, file) {\r\n                total += file.size || 1;\r\n            });\r\n            return total;\r\n        },\r\n\r\n        _initProgressObject: function (obj) {\r\n            var progress = {\r\n                loaded: 0,\r\n                total: 0,\r\n                bitrate: 0\r\n            };\r\n            if (obj._progress) {\r\n                langx.extend(obj._progress, progress);\r\n            } else {\r\n                obj._progress = progress;\r\n            }\r\n        },\r\n\r\n        _initResponseObject: function (obj) {\r\n            var prop;\r\n            if (obj._response) {\r\n                for (prop in obj._response) {\r\n                    if (obj._response.hasOwnProperty(prop)) {\r\n                        delete obj._response[prop];\r\n                    }\r\n                }\r\n            } else {\r\n                obj._response = {};\r\n            }\r\n        },\r\n\r\n        _onProgress: function (e, data) {\r\n            if (e.lengthComputable) {\r\n                var now = ((Date.now) ? Date.now() : (new Date()).getTime()),\r\n                    loaded;\r\n                if (data._time && data.progressInterval &&\r\n                        (now - data._time < data.progressInterval) &&\r\n                        e.loaded !== e.total) {\r\n                    return;\r\n                }\r\n                data._time = now;\r\n                loaded = Math.floor(\r\n                    e.loaded / e.total * (data.chunkSize || data._progress.total)\r\n                ) + (data.uploadedBytes || 0);\r\n                // Add the difference from the previously loaded state\r\n                // to the global loaded counter:\r\n                this._progress.loaded += (loaded - data._progress.loaded);\r\n                this._progress.bitrate = this._bitrateTimer.getBitrate(\r\n                    now,\r\n                    this._progress.loaded,\r\n                    data.bitrateInterval\r\n                );\r\n                data._progress.loaded = data.loaded = loaded;\r\n                data._progress.bitrate = data.bitrate = data._bitrateTimer.getBitrate(\r\n                    now,\r\n                    loaded,\r\n                    data.bitrateInterval\r\n                );\r\n                // Trigger a custom progress event with a total data property set\r\n                // to the file size(s) of the current upload and a loaded data\r\n                // property calculated accordingly:\r\n                this._trigger(\r\n                    'progress',\r\n                    eventer.create('progress', {delegatedEvent: e}),\r\n                    data\r\n                );\r\n                // Trigger a global progress event for all current file uploads,\r\n                // including ajax calls queued for sequential file uploads:\r\n                this._trigger(\r\n                    'progressall',\r\n                    eventer.create('progressall', {delegatedEvent: e}),\r\n                    this._progress\r\n                );\r\n            }\r\n        },\r\n\r\n        _getParamName: function (options) {\r\n            var picker = $(options.picker),\r\n                paramName = options.paramName;\r\n            //if (!paramName) {\r\n            //    paramName = [fileInput.prop('name') || 'files[]'];\r\n            // } else if (!langx.isArray(paramName)) {\r\n\r\n            if (!langx.isArray(paramName)) {\r\n                paramName = [paramName];\r\n            }\r\n            return paramName;\r\n        },\r\n\r\n\r\n        // jQuery 1.6 doesn't provide .state(),\r\n        // while jQuery 1.8+ removed .isRejected() and .isResolved():\r\n        _getDeferredState: function (deferred) {\r\n            if (deferred.state) {\r\n                return deferred.state();\r\n            }\r\n            if (deferred.isResolved()) {\r\n                return 'resolved';\r\n            }\r\n            if (deferred.isRejected()) {\r\n                return 'rejected';\r\n            }\r\n            return 'pending';\r\n        },\r\n\r\n        // Maps jqXHR callbacks to the equivalent\r\n        // methods of the given Promise object:\r\n        _enhancePromise: function (promise) {\r\n            promise.success = promise.done;\r\n            promise.error = promise.fail;\r\n            promise.complete = promise.always;\r\n            return promise;\r\n        },\r\n\r\n        // Creates and returns a Promise object enhanced with\r\n        // the jqXHR methods abort, success, error and complete:\r\n        _getXHRPromise: function (resolveOrReject, context, args) {\r\n            var dfd = new Deferred(),\r\n                promise = dfd.promise;\r\n            context = context || this.options.context || promise;\r\n            if (resolveOrReject === true) {\r\n                dfd.resolveWith(context, args);\r\n            } else if (resolveOrReject === false) {\r\n                dfd.rejectWith(context, args);\r\n            }\r\n            promise.abort = dfd.promise;\r\n            return this._enhancePromise(promise);\r\n        },\r\n\r\n        // Adds convenience methods to the data callback argument:\r\n        _addConvenienceMethods: function (e, data) {\r\n            var that = this,\r\n                getPromise = function (args) {\r\n                    return new Deferred().resolveWith(that, args).promise;\r\n                };\r\n            data.process = function (resolveFunc, rejectFunc) {\r\n                if (resolveFunc || rejectFunc) {\r\n                    data._processQueue = this._processQueue =\r\n                        (this._processQueue || getPromise([this])).pipe(\r\n                            function () {\r\n                                if (data.errorThrown) {\r\n                                    return new Deferred()\r\n                                        .rejectWith(that, [data]).promise;\r\n                                }\r\n                                return getPromise(arguments);\r\n                            }\r\n                        ).pipe(resolveFunc, rejectFunc);\r\n                }\r\n                return this._processQueue || getPromise([this]);\r\n            };\r\n            data.submit = function () {\r\n                if (this.state() !== 'pending') {\r\n                    data.jqXHR = this.jqXHR =\r\n                        (that._trigger(\r\n                            'submit',\r\n                            eventer.create('submit', {delegatedEvent: e}),\r\n                            this\r\n                        ) !== false) && that._onSend(e, this);\r\n                }\r\n                return this.jqXHR || that._getXHRPromise();\r\n            };\r\n            data.abort = function () {\r\n                if (this.jqXHR) {\r\n                    return this.jqXHR.abort();\r\n                }\r\n                this.errorThrown = 'abort';\r\n                that._trigger('fail', null, this);\r\n                return that._getXHRPromise(false);\r\n            };\r\n            data.state = function () {\r\n                if (this.jqXHR) {\r\n                    return that._getDeferredState(this.jqXHR);\r\n                }\r\n                if (this._processQueue) {\r\n                    return that._getDeferredState(this._processQueue);\r\n                }\r\n            };\r\n            data.processing = function () {\r\n                return !this.jqXHR && this._processQueue && that\r\n                    ._getDeferredState(this._processQueue) === 'pending';\r\n            };\r\n            data.progress = function () {\r\n                return this._progress;\r\n            };\r\n            data.response = function () {\r\n                return this._response;\r\n            };\r\n        },\r\n\r\n        _beforeSend: function (e, data) {\r\n            if (this._active === 0) {\r\n                // the start callback is triggered when an upload starts\r\n                // and no other uploads are currently running,\r\n                // equivalent to the global ajaxStart event:\r\n                this._trigger('start');\r\n                // Set timer for global bitrate progress calculation:\r\n                this._bitrateTimer = new this._BitrateTimer();\r\n                // Reset the global progress values:\r\n                this._progress.loaded = this._progress.total = 0;\r\n                this._progress.bitrate = 0;\r\n            }\r\n            // Make sure the container objects for the .response() and\r\n            // .progress() methods on the data object are available\r\n            // and reset to their initial state:\r\n            this._initResponseObject(data);\r\n            this._initProgressObject(data);\r\n            data._progress.loaded = data.loaded = data.uploadedBytes || 0;\r\n            data._progress.total = data.total = this._getTotal(data.files) || 1;\r\n            data._progress.bitrate = data.bitrate = 0;\r\n            this._active += 1;\r\n            // Initialize the global progress values:\r\n            this._progress.loaded += data.loaded;\r\n            this._progress.total += data.total;\r\n        },\r\n\r\n        _onDone: function (result, textStatus, jqXHR, options) {\r\n            var total = options._progress.total,\r\n                response = options._response;\r\n            if (options._progress.loaded < total) {\r\n                // Create a progress event if no final progress event\r\n                // with loaded equaling total has been triggered:\r\n                this._onProgress(eventer.create('progress', {\r\n                    lengthComputable: true,\r\n                    loaded: total,\r\n                    total: total\r\n                }), options);\r\n            }\r\n            response.result = options.result = result;\r\n            response.textStatus = options.textStatus = textStatus;\r\n            response.jqXHR = options.jqXHR = jqXHR;\r\n            this._trigger('done', null, options);\r\n        },\r\n\r\n        _onFail: function (jqXHR, textStatus, errorThrown, options) {\r\n            var response = options._response;\r\n            if (options.recalculateProgress) {\r\n                // Remove the failed (error or abort) file upload from\r\n                // the global progress calculation:\r\n                this._progress.loaded -= options._progress.loaded;\r\n                this._progress.total -= options._progress.total;\r\n            }\r\n            response.jqXHR = options.jqXHR = jqXHR;\r\n            response.textStatus = options.textStatus = textStatus;\r\n            response.errorThrown = options.errorThrown = errorThrown;\r\n            this._trigger('fail', null, options);\r\n        },\r\n\r\n        _trigger : function(type,event,data) {\r\n            var e = eventer.proxy(event);\r\n            e.type = type;\r\n            e.data =data;\r\n            return this.trigger(e,data);\r\n        },\r\n\r\n        _onAlways: function (jqXHRorResult, textStatus, jqXHRorError, options) {\r\n            // jqXHRorResult, textStatus and jqXHRorError are added to the\r\n            // options object via done and fail callbacks\r\n            this._trigger('always', null, options);\r\n        },\r\n\r\n        _onSend: function (e, data) {\r\n            if (!data.submit) {\r\n                this._addConvenienceMethods(e, data);\r\n            }\r\n            var that = this,\r\n                jqXHR,\r\n                aborted,\r\n                slot,\r\n                pipe,\r\n                send = function () {\r\n                    that._sending += 1;\r\n                    data.url = that.options.url;\r\n                    data.dataType = that.options.dataType;\r\n                    data.xhrFields = that.options.xhrFields;\r\n\r\n                    jqXHR = upload(data);\r\n\r\n                    jqXHR.progress(function(e){\r\n                        //var oe = e.originalEvent;\r\n                        // Make sure the progress event properties get copied over:\r\n                        //e.lengthComputable = oe.lengthComputable;\r\n                        //e.loaded = oe.loaded;\r\n                        //e.total = oe.total;\r\n                        that._onProgress(e, jqXHR.options);\r\n\r\n                    }).done(function (result, textStatus) {\r\n                        that._onDone(result, textStatus, jqXHR, jqXHR.options);\r\n                    }).fail(function (e, textStatus) {\r\n                        that._onFail(jqXHR, textStatus,e, jqXHR.options);\r\n                    }).always(function () {\r\n                        that._sending -= 1;\r\n                        that._active -= 1;\r\n                        that._trigger('stop');\r\n                    });\r\n                    return jqXHR;\r\n                };\r\n            this._beforeSend(e, data);\r\n\r\n            return send();\r\n        },\r\n        _onAdd: function (e, data) {\r\n            var that = this,\r\n                result = true,\r\n                options = langx.extend({}, this.options, data),\r\n                files = data.files,\r\n                filesLength = files.length,\r\n                limit = options.limitMultiFileUploads,\r\n                limitSize = options.limitMultiFileUploadSize,\r\n                overhead = options.limitMultiFileUploadSizeOverhead,\r\n                batchSize = 0,\r\n                paramName = this._getParamName(options),\r\n                paramNameSet,\r\n                paramNameSlice,\r\n                fileSet,\r\n                i,\r\n                j = 0;\r\n            if (limitSize && (!filesLength || files[0].size === undefined)) {\r\n                limitSize = undefined;\r\n            }\r\n            if (!(options.singleFileUploads || limit || limitSize)) {\r\n                fileSet = [files];\r\n                paramNameSet = [paramName];\r\n            } else if (!(options.singleFileUploads || limitSize) && limit) {\r\n                fileSet = [];\r\n                paramNameSet = [];\r\n                for (i = 0; i < filesLength; i += limit) {\r\n                    fileSet.push(files.slice(i, i + limit));\r\n                    paramNameSlice = paramName.slice(i, i + limit);\r\n                    if (!paramNameSlice.length) {\r\n                        paramNameSlice = paramName;\r\n                    }\r\n                    paramNameSet.push(paramNameSlice);\r\n                }\r\n            } else if (!options.singleFileUploads && limitSize) {\r\n                fileSet = [];\r\n                paramNameSet = [];\r\n                for (i = 0; i < filesLength; i = i + 1) {\r\n                    batchSize += files[i].size + overhead;\r\n                    if (i + 1 === filesLength ||\r\n                            ((batchSize + files[i + 1].size + overhead) > limitSize) ||\r\n                            (limit && i + 1 - j >= limit)) {\r\n                        fileSet.push(files.slice(j, i + 1));\r\n                        paramNameSlice = paramName.slice(j, i + 1);\r\n                        if (!paramNameSlice.length) {\r\n                            paramNameSlice = paramName;\r\n                        }\r\n                        paramNameSet.push(paramNameSlice);\r\n                        j = i + 1;\r\n                        batchSize = 0;\r\n                    }\r\n                }\r\n            } else {\r\n                paramNameSet = paramName;\r\n            }\r\n            data.originalFiles = files;\r\n            langx.each(fileSet || files, function (index, element) {\r\n                var newData = langx.extend({}, data);\r\n                newData.files = fileSet ? element : [element];\r\n                newData.paramName = paramNameSet[index];\r\n                that._initResponseObject(newData);\r\n                that._initProgressObject(newData);\r\n                that._addConvenienceMethods(e, newData);\r\n                result = that._trigger(\r\n                    'add',\r\n                    eventer.create('add', {delegatedEvent: e}),\r\n                    newData\r\n                );\r\n                return result;\r\n            });\r\n            return result;\r\n        },\r\n\r\n        _initEventHandlers: function () {\r\n            var that = this;\r\n\r\n            dropzone(this.options.dropZone[0],{\r\n                dropped : function (files) {\r\n                    var data = {};\r\n                    data.files = files;\r\n                    that._onAdd(null, data);\r\n                }\r\n            });\r\n\r\n            pastezone(this.options.pasteZone[0],{\r\n                pasted : function (files) {\r\n                    var data = {};\r\n                    data.files = files;\r\n                    that._onAdd(null, data);\r\n                }\r\n            });\r\n\r\n            picker(this.options.picker[0],{\r\n                multiple: true,\r\n                picked : function (files) {\r\n                    var data = {};\r\n                    data.files = files;\r\n                    that._onAdd(null, data);\r\n                }\r\n            });\r\n        },\r\n\r\n        _destroyEventHandlers: function () {\r\n            //this._off(this.options.dropZone, 'dragover drop');\r\n            //this._off(this.options.pasteZone, 'paste');\r\n            //this._off(this.options.picker, 'change');\r\n        },\r\n\r\n        _setOption: function (key, value) {\r\n            var reinit = langx.inArray(key, this._specialOptions) !== -1;\r\n            if (reinit) {\r\n                this._destroyEventHandlers();\r\n            }\r\n            this._super(key, value);\r\n            if (reinit) {\r\n                this._initSpecialOptions();\r\n                this._initEventHandlers();\r\n            }\r\n        },\r\n\r\n        _initSpecialOptions: function () {\r\n            var options = this.options;\r\n            //if (options.fileInput === undefined) {\r\n            //    //options.fileInput = this.element.is('input[type=\"file\"]') ?\r\n            //    //        this.element : this.element.find('input[type=\"file\"]');\r\n            //    options.fileInput = this.element.find('.fileinput-button');\r\n            \r\n            if (options.picker) {\r\n                if (!(options.picker instanceof $)) {\r\n                    options.picker = $(options.picker,this._elm);\r\n                }                \r\n            }\r\n\r\n            if (options.dropZone) {\r\n                if (!(options.dropZone instanceof $)) {\r\n                    options.dropZone = $(options.dropZone,this._elm);\r\n                }\r\n            }\r\n\r\n            if (options.pasteZone) {\r\n                if (!(options.pasteZone instanceof $)) {\r\n                    options.pasteZone = $(options.pasteZone,this._elm);\r\n                }                \r\n            }\r\n        },\r\n\r\n        _getRegExp: function (str) {\r\n            var parts = str.split('/'),\r\n                modifiers = parts.pop();\r\n            parts.shift();\r\n            return new RegExp(parts.join('/'), modifiers);\r\n        },\r\n\r\n        _isRegExpOption: function (key, value) {\r\n            return key !== 'url' && langx.type(value) === 'string' &&\r\n                /^\\/.*\\/[igm]{0,3}$/.test(value);\r\n        },\r\n\r\n        _construct: function (elm,options) {\r\n            this._elm = elm;\r\n            this.options = langx.mixin({},this.options,options);\r\n            this._initSpecialOptions();\r\n            this._slots = [];\r\n            this._sequence = this._getXHRPromise(true);\r\n            this._sending = this._active = 0;\r\n            this._initProgressObject(this);\r\n            this._initEventHandlers();\r\n        },\r\n\r\n        // This method is exposed to the widget API and allows to query\r\n        // the number of active uploads:\r\n        active: function () {\r\n            return this._active;\r\n        },\r\n\r\n        // This method is exposed to the widget API and allows to query\r\n        // the widget upload progress.\r\n        // It returns an object with loaded, total and bitrate properties\r\n        // for the running uploads:\r\n        progress: function () {\r\n            return this._progress;\r\n        },\r\n\r\n        // This method is exposed to the widget API and allows adding files\r\n        // using the fileupload API. The data parameter accepts an object which\r\n        // must have a files property and can contain additional options:\r\n        // .fileupload('add', {files: filesList});\r\n        add: function (data) {\r\n            var that = this;\r\n            if (!data || this.options.disabled) {\r\n                return;\r\n            }\r\n            data.files = langx.makeArray(data.files);\r\n            this._onAdd(null, data);\r\n        },\r\n\r\n        // This method is exposed to the widget API and allows sending files\r\n        // using the fileupload API. The data parameter accepts an object which\r\n        // must have a files or fileInput property and can contain additional options:\r\n        // .fileupload('send', {files: filesList});\r\n        // The method returns a Promise object for the file upload call.\r\n        send: function (data) {\r\n            if (data && !this.options.disabled) {\r\n                data.files = langx.makeArray(data.files);\r\n                if (data.files.length) {\r\n                    return this._onSend(null, data);\r\n                }\r\n            }\r\n            return this._getXHRPromise(false, data && data.context);\r\n        }\r\n\r\n    });\r\n\r\n\r\n    function uploader(elm,options) {\r\n        var fuInst = new FileUploader(elm,options);\r\n        fuInst.on(\"all\",function(evt,data){\r\n            var typ = evt.type;\r\n            if (langx.isFunction(options[typ])) {\r\n                options[typ].call(fuInst._elm,evt,data);\r\n            }\r\n        });\r\n        return fuInst;\r\n    }\r\n\r\n    return uploader;\r\n\r\n});\r\n\ndefine('skylark-domx-velm/velm',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-fx\",\r\n    \"skylark-domx-query\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx, $) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n    /*\r\n     * VisualElement is a skylark class type wrapping a visule dom node,\r\n     * provides a number of prototype methods and supports chain calls.\r\n     */\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"_construct\": function(node) {\r\n            if (langx.isString(node)) {\r\n                if (node.charAt(0) === \"<\") {\r\n                    //html\r\n                    node = noder.createFragment(node)[0];\r\n                } else {\r\n                    // id\r\n                    node = document.getElementById(node);\r\n                }\r\n            }\r\n            this._elm = node;\r\n        }\r\n    });\r\n\r\n    VisualElement.prototype.$ = VisualElement.prototype.query = function(selector) {\r\n        return $(selector,this._elm);\r\n    };\r\n\r\n    VisualElement.prototype.elm = function() {\r\n        return this._elm;\r\n    };\r\n\r\n    /*\r\n     * the VisualElement object wrapping document.body\r\n     */\r\n    var root = new VisualElement(document.body),\r\n        elmx = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n    /*\r\n     * Extend VisualElement prototype with wrapping the specified methods.\r\n     * @param {ArrayLike} fn\r\n     * @param {Object} context\r\n     */\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self._elm,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(el);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(elmx, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : elmx(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial: function(name, fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    elmx.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./eventer\r\n    elmx.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./finder\r\n    elmx.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    /*\r\n     * find a dom element matched by the specified selector.\r\n     * @param {String} selector\r\n     */\r\n    elmx.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n    // from ./fx\r\n    elmx.delegate([\r\n        \"animate\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n\r\n    // from ./geom\r\n    elmx.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./noder\r\n    elmx.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"isDocument\",\r\n        \"isInDocument\",\r\n        \"isWindow\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"removeChild\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    elmx.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n\r\n    // properties\r\n\r\n    var properties = [ 'position', 'left', 'top', 'right', 'bottom', 'width', 'height', 'border', 'borderLeft',\r\n    'borderTop', 'borderRight', 'borderBottom', 'borderColor', 'display', 'overflow', 'margin', 'marginLeft', 'marginTop', 'marginRight', 'marginBottom', 'padding', 'paddingLeft', 'paddingTop', 'paddingRight', 'paddingBottom', 'color',\r\n    'background', 'backgroundColor', 'opacity', 'fontSize', 'fontWeight', 'textAlign', 'textDecoration', 'textTransform', 'cursor', 'zIndex' ];\r\n\r\n    properties.forEach( function ( property ) {\r\n\r\n        var method = property;\r\n\r\n        VisualElement.prototype[method ] = function (value) {\r\n\r\n            this.css( property, value );\r\n\r\n            return this;\r\n\r\n        };\r\n\r\n    });\r\n\r\n    // events\r\n    var events = [ 'keyUp', 'keyDown', 'mouseOver', 'mouseOut', 'click', 'dblClick', 'change' ];\r\n\r\n    events.forEach( function ( event ) {\r\n\r\n        var method = event;\r\n\r\n        VisualElement.prototype[method ] = function ( callback ) {\r\n\r\n            this.on( event.toLowerCase(), callback);\r\n\r\n            return this;\r\n        };\r\n\r\n    });\r\n\r\n\r\n    return skylark.attach(\"domx.elmx\", elmx);\r\n});\ndefine('skylark-domx-velm/main',[\r\n\t\"./velm\"\r\n],function(velm){\r\n\treturn velm;\r\n});\ndefine('skylark-domx-velm', ['skylark-domx-velm/main'], function (main) { return main; });\n\ndefine('skylark-domx-plugins/plugins',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-fx\",\r\n    \"skylark-domx-query\",\r\n    \"skylark-domx-velm\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx, $, elmx) {\r\n    \"use strict\";\r\n\r\n    var slice = Array.prototype.slice,\r\n        concat = Array.prototype.concat,\r\n        pluginKlasses = {},\r\n        shortcuts = {};\r\n\r\n    /*\r\n     * Create or get or destory a plugin instance assocated with the element.\r\n     */\r\n    function instantiate(elm,pluginName,options) {\r\n        var pair = pluginName.split(\":\"),\r\n            instanceDataName = pair[1];\r\n        pluginName = pair[0];\r\n\r\n        if (!instanceDataName) {\r\n            instanceDataName = pluginName;\r\n        }\r\n\r\n        var pluginInstance = datax.data( elm, instanceDataName );\r\n\r\n        if (options === \"instance\") {\r\n            return pluginInstance;\r\n        } else if (options === \"destroy\") {\r\n            if (!pluginInstance) {\r\n                throw new Error (\"The plugin instance is not existed\");\r\n            }\r\n            pluginInstance.destroy();\r\n            datax.removeData( elm, pluginName);\r\n            pluginInstance = undefined;\r\n        } else {\r\n            if (!pluginInstance) {\r\n                if (options !== undefined && typeof options !== \"object\") {\r\n                    throw new Error (\"The options must be a plain object\");\r\n                }\r\n                var pluginKlass = pluginKlasses[pluginName]; \r\n                pluginInstance = new pluginKlass(elm,options);\r\n                datax.data( elm, instanceDataName,pluginInstance );\r\n            } else if (options) {\r\n                pluginInstance.reset(options);\r\n            }\r\n        }\r\n\r\n        return pluginInstance;\r\n    }\r\n\r\n    function shortcutter(pluginName,extfn) {\r\n       /*\r\n        * Create or get or destory a plugin instance assocated with the element,\r\n        * and also you can execute the plugin method directory;\r\n        */\r\n        return function (elm,options) {\r\n            var  plugin = instantiate(elm, pluginName,\"instance\");\r\n            if ( options === \"instance\" ) {\r\n              return plugin || null;\r\n            }\r\n            if (!plugin) {\r\n                plugin = instantiate(elm, pluginName,typeof options == 'object' && options || {});\r\n            } else  if (options) {\r\n                var args = slice.call(arguments,1); //2\r\n                if (extfn) {\r\n                    return extfn.apply(plugin,args);\r\n                } else {\r\n                    if (typeof options == 'string') {\r\n                        var methodName = options;\r\n\r\n                        if ( !plugin ) {\r\n                            throw new Error( \"cannot call methods on \" + pluginName +\r\n                                \" prior to initialization; \" +\r\n                                \"attempted to call method '\" + methodName + \"'\" );\r\n                        }\r\n\r\n                        if ( !langx.isFunction( plugin[ methodName ] ) || methodName.charAt( 0 ) === \"_\" ) {\r\n                            throw new Error( \"no such method '\" + methodName + \"' for \" + pluginName +\r\n                                \" plugin instance\" );\r\n                        }\r\n\r\n                        return plugin[methodName].apply(plugin,args);\r\n                    }                \r\n                }                \r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Register a plugin type\r\n     */\r\n    function register( pluginKlass,shortcutName,instanceDataName,extfn) {\r\n        var pluginName = pluginKlass.prototype.pluginName;\r\n        \r\n        pluginKlasses[pluginName] = pluginKlass;\r\n\r\n        if (shortcutName) {\r\n            if (instanceDataName && langx.isFunction(instanceDataName)) {\r\n                extfn = instanceDataName;\r\n                instanceDataName = null;\r\n            } \r\n            if (instanceDataName) {\r\n                pluginName = pluginName + \":\" + instanceDataName;\r\n            }\r\n\r\n            var shortcut = shortcuts[shortcutName] = shortcutter(pluginName,extfn);\r\n                \r\n            $.fn[shortcutName] = function(options) {\r\n                var returnValue = this;\r\n\r\n                if ( !this.length && options === \"instance\" ) {\r\n                  returnValue = undefined;\r\n                } else {\r\n                  var args = slice.call(arguments);\r\n                  this.each(function () {\r\n                    var args2 = slice.call(args);\r\n                    args2.unshift(this);\r\n                    var  ret  = shortcut.apply(null,args2);\r\n                    if (ret !== undefined) {\r\n                        returnValue = ret;\r\n                        return false;\r\n                    }\r\n                  });\r\n                }\r\n\r\n                return returnValue;\r\n            };\r\n\r\n            elmx.partial(shortcutName,function(options) {\r\n                var  ret  = shortcut(this._elm,options);\r\n                if (ret === undefined) {\r\n                    ret = this;\r\n                }\r\n                return ret;\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n \r\n    var Plugin =   langx.Evented.inherit({\r\n        klassName: \"Plugin\",\r\n\r\n        _construct : function(elm,options) {\r\n           this._elm = elm;\r\n           this._initOptions(options);\r\n        },\r\n\r\n        _initOptions : function(options) {\r\n          var ctor = this.constructor,\r\n              cache = ctor.cache = ctor.cache || {},\r\n              defaults = cache.defaults;\r\n          if (!defaults) {\r\n            var  ctors = [];\r\n            do {\r\n              ctors.unshift(ctor);\r\n              if (ctor === Plugin) {\r\n                break;\r\n              }\r\n              ctor = ctor.superclass;\r\n            } while (ctor);\r\n\r\n            defaults = cache.defaults = {};\r\n            for (var i=0;i<ctors.length;i++) {\r\n              ctor = ctors[i];\r\n              if (ctor.prototype.hasOwnProperty(\"options\")) {\r\n                langx.mixin(defaults,ctor.prototype.options);\r\n              }\r\n              if (ctor.hasOwnProperty(\"options\")) {\r\n                langx.mixin(defaults,ctor.options);\r\n              }\r\n            }\r\n          }\r\n          Object.defineProperty(this,\"options\",{\r\n            value :langx.mixin({},defaults,options)\r\n          });\r\n\r\n          //return this.options = langx.mixin({},defaults,options);\r\n          return this.options;\r\n        },\r\n\r\n\r\n        destroy: function() {\r\n            var that = this;\r\n\r\n            this._destroy();\r\n            // We can probably remove the unbind calls in 2.0\r\n            // all event bindings should go through this._on()\r\n            datax.removeData(this._elm,this.pluginName );\r\n        },\r\n\r\n        _destroy: langx.noop,\r\n\r\n        _delay: function( handler, delay ) {\r\n            function handlerProxy() {\r\n                return ( typeof handler === \"string\" ? instance[ handler ] : handler )\r\n                    .apply( instance, arguments );\r\n            }\r\n            var instance = this;\r\n            return setTimeout( handlerProxy, delay || 0 );\r\n        },\r\n\r\n        option: function( key, value ) {\r\n            var options = key;\r\n            var parts;\r\n            var curOption;\r\n            var i;\r\n\r\n            if ( arguments.length === 0 ) {\r\n\r\n                // Don't return a reference to the internal hash\r\n                return langx.mixin( {}, this.options );\r\n            }\r\n\r\n            if ( typeof key === \"string\" ) {\r\n\r\n                // Handle nested keys, e.g., \"foo.bar\" => { foo: { bar: ___ } }\r\n                options = {};\r\n                parts = key.split( \".\" );\r\n                key = parts.shift();\r\n                if ( parts.length ) {\r\n                    curOption = options[ key ] = langx.mixin( {}, this.options[ key ] );\r\n                    for ( i = 0; i < parts.length - 1; i++ ) {\r\n                        curOption[ parts[ i ] ] = curOption[ parts[ i ] ] || {};\r\n                        curOption = curOption[ parts[ i ] ];\r\n                    }\r\n                    key = parts.pop();\r\n                    if ( arguments.length === 1 ) {\r\n                        return curOption[ key ] === undefined ? null : curOption[ key ];\r\n                    }\r\n                    curOption[ key ] = value;\r\n                } else {\r\n                    if ( arguments.length === 1 ) {\r\n                        return this.options[ key ] === undefined ? null : this.options[ key ];\r\n                    }\r\n                    options[ key ] = value;\r\n                }\r\n            }\r\n\r\n            this._setOptions( options );\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOptions: function( options ) {\r\n            var key;\r\n\r\n            for ( key in options ) {\r\n                this._setOption( key, options[ key ] );\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOption: function( key, value ) {\r\n\r\n            this.options[ key ] = value;\r\n\r\n            return this;\r\n        },\r\n\r\n        elm : function() {\r\n            return this._elm;\r\n        }\r\n\r\n    });\r\n\r\n    $.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n    elmx.partial(\"plugin\",function(name,options) {\r\n        var args = slice.call( arguments, 1 );\r\n        return instantiate.apply(this,[this.domNode,name].concat(args));\r\n    }); \r\n\r\n\r\n    function plugins() {\r\n        return plugins;\r\n    }\r\n     \r\n    langx.mixin(plugins, {\r\n        instantiate,\r\n        Plugin,\r\n        register,\r\n        shortcuts\r\n    });\r\n\r\n    return  skylark.attach(\"domx.plugins\",plugins);\r\n});\ndefine('skylark-domx-plugins/main',[\r\n\t\"./plugins\"\r\n],function(plugins){\r\n\treturn plugins;\r\n});\ndefine('skylark-domx-plugins', ['skylark-domx-plugins/main'], function (main) { return main; });\n\n\r\ndefine('skylark-data-collection/Map',[\r\n    \"./collections\",\r\n    \"./Collection\"\r\n], function( collections, Collection) {\r\n\r\n    var Map = collections.Map = Collection.inherit({\r\n\r\n        \"klassName\": \"Map\",\r\n\r\n        _getInnerItems : function() {\r\n            return this._items;\r\n        },\r\n\r\n        _clear : function() {\r\n            this._items = [];\r\n        },\r\n\r\n        _findKeyByRegExp: function(regExp, callback) {\r\n            var items = this._getInnerItems();\r\n            return items.filter(function(key) {\r\n                if (key.match(regExp)) {\r\n                    if (callback) callback(key);\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n\r\n        \"get\":  function(strKey, silent) {\r\n            //desc: \"Returns the item at the specified key in the Hashtable.\",\r\n            //result: {\r\n            //    type: Object,\r\n            //    desc: \"The item at the specified key.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"strKey\",\r\n            //    type: String,\r\n            //    desc: \"The key of the item to return.\"\r\n            //}, {\r\n            //    name: \"silent\",\r\n            //    type: Boolean,\r\n            //    desc: \"the silent flag.\",\r\n            //    optional: true\r\n            //}],\r\n            if (typeof(strKey) != \"string\") {\r\n                throw \"hash key is not string!\";\r\n            }\r\n            /*\r\n            if (!silent && !this.contains(strKey)) {\r\n                throw \"hash key is not  existed\";\r\n            }\r\n            */\r\n            var items = this._getInnerItems();\r\n            return items[strKey];\r\n        },\r\n\r\n        \"iterator\" : function() {\r\n            var i =0;\r\n            return {\r\n                hasNext : function() {\r\n                    return i < this._items.length;\r\n                },\r\n                next : function() {\r\n                    var key =  this._items[i++];\r\n                    return [this._items[key],key];\r\n                }\r\n            }\r\n        },\r\n\r\n        \"set\": function( /*String*/ strKey, /*Object*/ value) {\r\n            //desc: \"Replaces the item at the specified key in the Hashtable with the specified item.\",\r\n            //result: {\r\n            //    type: Map,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"strKey\",\r\n            //    type: String,\r\n            //    desc: \"key of the item to replace.\"\r\n            //}, {\r\n            //    name: \"value\",\r\n            //    type: Object,\r\n            //    desc: \"item to be stored at the specified position.\"\r\n            //}],\r\n            if (typeof(strKey) != \"string\") {\r\n                throw \"hash key is not string!\";\r\n            }\r\n\r\n            /*\r\n            if (!this.contains(strKey)) {\r\n                throw \"hash key is not existed\";\r\n            }\r\n            */\r\n\r\n            var items = this._getInnerItems();\r\n            if (items.indexOf(strKey) == -1) {\r\n                items.push(strKey);\r\n            }\r\n            var oldValue = items[strKey];\r\n            if (oldValue !== value) {\r\n                items[strKey] = value;\r\n                var updated = {};\r\n                updated[strKey] = {\r\n                    name : strKey,\r\n                    value : value,\r\n                    oldValue : oldValue\r\n                };\r\n                this.trigger(\"changed\" ,{ //TODO: \"changed:\"+ strKey\r\n                    data : updated\r\n                });\r\n            }\r\n            return this;\r\n        },\r\n\r\n\r\n        \"remove\": function( /*String*/ strKey) {\r\n            //desc: \"Removes the first occurrence of a specific item from the Hashtable\",\r\n            //result: {\r\n            //    type: Map,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"strKey\",\r\n            //    type: String,\r\n            //    desc: \"The key for The item to remove from the Hashtable.\"\r\n            //}],\r\n            if (typeof(strKey) != \"string\") {\r\n                throw \"hash key is not string!\";\r\n            }\r\n            var items = this._getInnerItems();\r\n            var idx = items.indexOf(strKey);\r\n            if (idx >= 0) {\r\n                delete items[strKey];\r\n                delete items[idx];\r\n            }\r\n        },\r\n\r\n        findByRegExp: function( /*String*/ regExp, callback) {\r\n            //desc: \"find regExp items\",\r\n            //result: {\r\n            //    type: Map,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"regExp\",\r\n            //    type: String,\r\n            //    desc: \"The key for The item to remove from the Hashtable.\"\r\n            //}, {\r\n            //    name: \"callback\",\r\n            //    type: Function,\r\n            //    desc: \"the callback method\"\r\n            //}],\r\n            var items = [],\r\n                self = this;\r\n            this._findKeyByRegExp(regExp, function(key) {\r\n                var item = self.get(key);\r\n                if (callback) callback(item);\r\n                items.push(item);\r\n            });\r\n            return items;\r\n        },\r\n\r\n        removeByRegExp: function( /*String*/ regExp) {\r\n            //desc: \"Removes regExp items\",\r\n            //result: {\r\n            //    type: Map,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"regExp\",\r\n            //    type: String,\r\n            //    desc: \"The key for The item to remove from the Hashtable.\"\r\n            //}],\r\n            var self = this;\r\n            this._findKeyByRegExp(regExp, function(key) {\r\n                self.remove(key);\r\n            });\r\n        },\r\n\r\n        \"toPlain\": function() {\r\n            //desc: \"Returns a plain object containing all of the items in this Hashable.\",\r\n            //result: {\r\n            //    type: Object,\r\n            //    desc: \"a plain object containing all of the items in this Hashtable.\"\r\n            //},\r\n            //params: [],\r\n            var items = this._getInnerItems(); \r\n\r\n            for (var i = 0; i < items.length; i++) {\r\n                var key = items[i];\r\n                plain[key] = items[key];\r\n            }\r\n            return plain;\r\n        },\r\n\r\n        \"toString\": function( /*String?*/ delim) {\r\n            //desc: \"implementation of toString, follows [].toString().\",\r\n            //result: {\r\n            //    type: String,\r\n            //   desc: \"The string.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"delim\",\r\n            //    type: String,\r\n            //    desc: \"The delim \",\r\n            //    optional: true\r\n            //}],\r\n            var items = this._getInnerItems();\r\n\r\n            return items.join((delim || \",\"));\r\n        },\r\n\r\n        \"init\": function( /*Object*/ data) {\r\n            var items = this._items = [];\r\n            for (var name in data) {\r\n                items.push(name);\r\n                items[name]= data[name];\r\n            }\r\n        }\r\n       \r\n    });\r\n    return Map;\r\n});\r\n\n\r\ndefine('skylark-data-collection/HashMap',[\r\n    \"./collections\",\r\n\t\"./Map\"\r\n],function(collections,_Map) {\r\n\r\n\tvar HashMap = collections.HashMap = _Map.inherit({\r\n\t});\r\n\r\n\treturn HashMap;\r\n});\ndefine('skylark-widgets-base/base',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"widgets.base\",{});\r\n});\ndefine('skylark-widgets-base/Widget',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-data\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-plugins\",\r\n  \"skylark-data-collection/HashMap\",\r\n  \"./base\"\r\n],function(skylark,langx,browser,datax,eventer,noder,geom,elmx,$,plugins,HashMap,base){\r\n\r\n/*---------------------------------------------------------------------------------*/\r\n\r\n\tvar Widget = plugins.Plugin.inherit({\r\n    klassName: \"Widget\",\r\n\r\n    _elmx : elmx,\r\n\r\n    _construct : function(elm,options) {\r\n        if (langx.isHtmlNode(elm)) {\r\n          options = this._parse(elm,options);\r\n        } else {\r\n          options = elm;\r\n          elm = null;\r\n        }\r\n        this.overrided(elm,options);\r\n\r\n        if (!elm) {\r\n          this._velm = this._create();\r\n          this._elm = this._velm.elm();\r\n        } else {\r\n          this._velm = elmx(this._elm);\r\n        }\r\n        \r\n        Object.defineProperty(this,\"state\",{\r\n          value :this.options.state || new HashMap()\r\n        });\r\n\r\n        //this.state = this.options.state || new Map();\r\n        this._init();\r\n\r\n        var addonCategoryOptions = this.options.addons;\r\n        if (addonCategoryOptions) {\r\n          var widgetCtor = this.constructor,\r\n              addons = widgetCtor.addons;\r\n          for (var categoryName in addonCategoryOptions) {\r\n              for (var i =0;i < addonCategoryOptions[categoryName].length; i++ ) {\r\n                var addonOption = addonCategoryOptions[categoryName][i];\r\n                if (langx.isString(addonOption)) {\r\n                  var addonName = addonOption,\r\n                      addonSetting = addons[categoryName][addonName],\r\n                      addonCtor = addonSetting.ctor ? addonSetting.ctor : addonSetting;\r\n\r\n                  this.addon(addonCtor,addonSetting.options);\r\n\r\n                }\r\n\r\n              }\r\n          }\r\n\r\n\r\n        }\r\n\r\n\r\n     },\r\n\r\n    /**\r\n     * Parses widget options from attached element.\r\n     * This is a callback method called by constructor when attached element is specified.\r\n     * @method _parse\r\n     * @return {Object} options.\r\n     */\r\n    _parse : function(elm,options) {\r\n      var optionsAttr = datax.data(elm,\"options\");\r\n      if (optionsAttr) {\r\n         var options1 = JSON.parse(\"{\" + optionsAttr + \"}\");\r\n         options = langx.mixin(options1,options); \r\n      }\r\n      return options || {};\r\n    },\r\n\r\n\r\n    /**\r\n     * Create html element for this widget.\r\n     * This is a callback method called by constructor when attached element is not specified.\r\n     * @method _create\r\n     */\r\n    _create : function() {\r\n        var template = this.options.template;\r\n        if (template) {\r\n          return this._elmx(template);\r\n        } else {\r\n          throw new Error(\"The template is not existed in options!\");\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Init widget.\r\n     * This is a callback method called by constructor.\r\n     * @method _init\r\n     */\r\n    _init : function() {\r\n      var self = this;\r\n      if (this.widgetClass) {\r\n        this._velm.addClass(this.widgetClass);\r\n      }\r\n      this.state.on(\"changed\",function(e,args) {\r\n        self._refresh(args.data);\r\n      });\r\n    },\r\n\r\n\r\n    /**\r\n     * Startup widget.\r\n     * This is a callback method called when widget element is added into dom.\r\n     * @method _post\r\n     */\r\n    _startup : function() {\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * Refresh widget.\r\n     * This is a callback method called when widget state is changed.\r\n     * @method _refresh\r\n     */\r\n    _refresh : function(updates) {\r\n      /*\r\n      var _ = this._,\r\n          model = _.model,\r\n          dom = _.dom,\r\n          props = {\r\n\r\n          };\r\n      updates = updates || {};\r\n      for (var attrName in updates){\r\n          var v = updates[attrName].value;\r\n          if (v && v.toCss) {\r\n              v.toCss(props);\r\n              updates[attrName].processed = true;\r\n          }\r\n\r\n      };\r\n\r\n      this.css(props);\r\n\r\n      if (updates[\"disabled\"]) {\r\n          var v = updates[\"disabled\"].value;\r\n          dom.aria('disabled', v);\r\n          self.classes.toggle('disabled', v);\r\n      }\r\n      */\r\n    },                \r\n\r\n    mapping : {\r\n      \"events\" : {\r\n  //       'mousedown .title':  'edit',\r\n  //       'click .button':     'save',\r\n  //       'click .open':       function(e) { ... }            \r\n      },\r\n\r\n      \"attributs\" : {\r\n\r\n      },\r\n\r\n      \"properties\" : {\r\n\r\n      },\r\n\r\n      \"styles\" : {\r\n\r\n      }\r\n    },\r\n\r\n    addon : function(ctor,setting) {\r\n      var categoryName = ctor.categoryName,\r\n          addonName = ctor.addonName;\r\n\r\n      this._addons = this.addons || {};\r\n      var category = this._addons[categoryName] = this._addons[categoryName] || {};\r\n      category[addonName] = new ctor(this,setting);\r\n      return this;\r\n    },\r\n\r\n    addons : function(categoryName,settings) {\r\n      this._addons = this.addons || {};\r\n      var category = this._addons[categoryName] = this._addons[categoryName] || {};\r\n\r\n      if (settings == undefined) {\r\n        return langx.clone(category || null);\r\n      } else {\r\n        langx.mixin(category,settings);\r\n      }\r\n    },\r\n\r\n\r\n    /**\r\n     * Returns a html element representing the widget.\r\n     *\r\n     * @method render\r\n     * @return {HtmlElement} HTML element representing the widget.\r\n     */\r\n    render: function() {\r\n      return this._elm;\r\n    },\r\n\r\n\r\n\r\n    /**\r\n     * Returns a parent widget  enclosing this widgets, or null if not exist.\r\n     *\r\n     * @method getEnclosing\r\n     * @return {Widget} The enclosing parent widget, or null if not exist.\r\n     */\r\n    getEnclosing : function(selector) {\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Returns a widget collection with all enclosed child widgets.\r\n     *\r\n     * @method getEnclosed\r\n     * @return {List} Collection with all enclosed child widgets..\r\n     */\r\n    getEnclosed : function() {\r\n      var self = this;\r\n          children = new ArrayList();\r\n      return children;\r\n    },\r\n\r\n    /**\r\n     * Sets the visible state to true.\r\n     *\r\n     * @method show\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n\r\n    show : function() {\r\n      this._velm.show();\r\n    },\r\n\r\n    /**\r\n     * Sets the visible state to false.\r\n     *\r\n     * @method hide\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    hide : function() {\r\n      this._velm.hide();\r\n    },\r\n\r\n    /**\r\n     * Focuses the current widget.\r\n     *\r\n     * @method focus\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    focus :function() {\r\n      try {\r\n        this._velm.focus();\r\n      } catch (ex) {\r\n        // Ignore IE error\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Blurs the current widget.\r\n     *\r\n     * @method blur\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    blur : function() {\r\n      this._velm.blur();\r\n\r\n      return this;\r\n    },\r\n\r\n    enable: function () {\r\n      this.state.set('disabled',false);\r\n      return this;\r\n    },\r\n\r\n    disable: function () {\r\n      this.state.set('disabled',true);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the specified aria property.\r\n     *\r\n     * @method aria\r\n     * @param {String} name Name of the aria property to set.\r\n     * @param {String} value Value of the aria property.\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    aria : function(name, value) {\r\n      const self = this, elm = self.getEl(self.ariaTarget);\r\n\r\n      if (typeof value === 'undefined') {\r\n        return self._aria[name];\r\n      }\r\n\r\n      self._aria[name] = value;\r\n\r\n      if (self.state.get('rendered')) {\r\n        elm.setAttribute(name === 'role' ? name : 'aria-' + name, value);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    attr: function (name,value) {\r\n        var velm = this._velm,\r\n            ret = velm.attr(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    css: function (name, value) {\r\n        var velm = this._velm,\r\n            ret = velm.css(name, value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    data: function (name, value) {\r\n        var velm = this._velm,\r\n            ret = velm.data(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    prop: function (name,value) {\r\n        var velm = this._velm,\r\n            ret = velm.prop(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    throb: function(params) {\r\n      return noder.throb(this._elm,params);\r\n    },\r\n\r\n\r\n    /**\r\n     *  Attach the current widget element to dom document.\r\n     *\r\n     * @method attach\r\n     * @return {Widget} This Widget.\r\n     */\r\n    attach : function(target,position){\r\n        var elm = target;\r\n        if (!position || position==\"child\") {\r\n            noder.append(elm,this._elm);\r\n        } else  if (position == \"before\") {\r\n            noder.before(elm,this._elm);\r\n        } else if (position == \"after\") {\r\n            noder.after(elm,this._elm);\r\n        }\r\n        this._startup();\r\n    },\r\n\r\n    /**\r\n     *  Detach the current widget element from dom document.\r\n     *\r\n     * @method html\r\n     * @return {HtmlElement} HTML element representing the widget.\r\n     */\r\n    detach : function() {\r\n      this._velm.remove();\r\n    }\r\n  });\r\n\r\n  Widget.inherit = function(meta) {\r\n    var ctor = plugins.Plugin.inherit.apply(this,arguments);\r\n\r\n    function addStatePropMethod(name) {\r\n        ctor.prototype[name] = function(value) {\r\n          if (value !== undefined) {\r\n            this.state.set(name,value);\r\n            return this;\r\n          } else {\r\n            return this.state.get(name);\r\n          }\r\n        };\r\n    }\r\n    if (meta.state) {\r\n      for (var name in meta.state) {\r\n          addStatePropMethod(name);\r\n      }\r\n    }\r\n\r\n    if (meta.pluginName) {\r\n      plugins.register(ctor,meta.pluginName);\r\n    }\r\n    return ctor;\r\n  };\r\n\r\n  Widget.register = function(ctor,widgetName) {\r\n    var meta = ctor.prototype,\r\n        pluginName = widgetName || meta.pluginName;\r\n\r\n    function addStatePropMethod(name) {\r\n        ctor.prototype[name] = function(value) {\r\n          if (value !== undefined) {\r\n            this.state.set(name,value);\r\n            return this;\r\n          } else {\r\n            return this.state.get(name);\r\n          }\r\n        };\r\n    }\r\n    if (meta.state) {\r\n      for (var name in meta.state) {\r\n          addStatePropMethod(name);\r\n      }\r\n    }\r\n\r\n    if (pluginName) {\r\n      plugins.register(ctor,pluginName);\r\n    }\r\n    return ctor;\r\n  };\r\n\r\n\treturn base.Widget = Widget;\r\n});\r\n\ndefine('skylark-widgets-filer/Uploader',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-data-collection/ArrayList\",\r\n  \"./domx/uploader\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-widgets-base/Widget\",\r\n  \"./filer\"\r\n]  ,function(langx,ArrayList,uploader, $, Widget,filer){\r\n\r\n    function displaySize(bytes) {\r\n        var sizes = ['B', 'KB', 'MB', 'GB', 'TB'];\r\n        if (bytes == 0) return '0 B';\r\n        var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\r\n        return (bytes / Math.pow(1024, i)).toFixed(2) + ' ' + sizes[i];\r\n    }\r\n    function displayDate(timestamp) {\r\n        return new Date(timestamp).toLocaleString();\r\n    }\r\n    /**\r\n     * This model represents a file.\r\n     *\r\n     */\r\n    var FileItem = langx.Stateful.inherit({\r\n        state: \"pending\",\r\n\r\n        /**\r\n         * Start upload.\r\n         *\r\n         */\r\n        start: function ()  {\r\n            if (this.isPending()) {\r\n                this.get('processor').submit();\r\n                this.state = \"running\";\r\n\r\n                // Dispatch event\r\n                this.trigger('filestarted', this);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Cancel a file upload.\r\n         *\r\n         */\r\n        cancel: function () {\r\n            this.get('processor').abort();\r\n            this.destroy();\r\n\r\n            // Dispatch event\r\n            this.state = \"canceled\";\r\n            this.trigger('filecanceled', this);\r\n        },\r\n\r\n        /**\r\n         * Notify file that progress updated.\r\n         *\r\n         */\r\n        progress: function (data)  {\r\n            // Dispatch event\r\n            this.trigger('fileprogress', this.get('processor').progress());\r\n        },\r\n\r\n        /**\r\n         * Notify file that upload failed.\r\n         *\r\n         */\r\n        fail: function (error)  {\r\n            // Dispatch event\r\n            this.state = \"error\";\r\n            this.trigger('filefailed', error);\r\n        },\r\n\r\n        /**\r\n         * Notify file that upload is done.\r\n         *\r\n         */\r\n        done: function (result)  {\r\n            // Dispatch event\r\n            this.state = \"error\";\r\n            this.trigger('filedone', result);\r\n        },\r\n\r\n        /**\r\n         * Is this file pending to be uploaded ?\r\n         *\r\n         */\r\n        isPending: function ()  {\r\n            return this.getState() == \"pending\";\r\n        },\r\n\r\n        /**\r\n         * Is this file currently uploading ?\r\n         *\r\n         */\r\n        isRunning: function () {\r\n            return this.getState() == \"running\";\r\n        },\r\n\r\n        /**\r\n         * Is this file uploaded ?\r\n         *\r\n         */\r\n        isDone: function () {\r\n            return this.getState() == \"done\";\r\n        },\r\n\r\n        /**\r\n         * Is this upload in error ?\r\n         *\r\n         */\r\n        isError: function () {\r\n            return this.getState() == \"error\" || this.getState == \"canceled\";\r\n        },\r\n\r\n        /**\r\n         * Get the file state.\r\n         *\r\n         */\r\n        getState: function () {\r\n            return this.state;\r\n        }\r\n    });\r\n\r\n    /**\r\n     * This is a file collection, used to manage the selected\r\n     * and processing files.\r\n     *\r\n     */\r\n    var FileItemCollection = ArrayList.inherit({\r\n        item: FileItem\r\n    });\r\n\r\n    /**\r\n     * A file view, which is the view that manage a single file\r\n     * process in the upload manager.\r\n     *\r\n     */\r\n    var FileItemWidget = Widget.inherit({\r\n        className: 'upload-manager-file row',\r\n\r\n        options : {\r\n          selectors : {\r\n            fileName : \".name\",\r\n            fileSize : \".size\",\r\n            cancel : \".cancel\",\r\n            clear : \".clear\",\r\n            progress : \".progress\",\r\n            message : \".message\"\r\n          }\r\n        },\r\n\r\n        state : {\r\n          fileName : String,\r\n          fileSize : Number\r\n        },\r\n\r\n        _init: function () {\r\n            this.processUploadMsg = this.options.processUploadMsg;\r\n            this.doneMsg = this.options.doneMsg;\r\n\r\n            this.model = this.options.model;\r\n\r\n            this.fileName(this.options.fileName);\r\n            this.fileSize(this.options.fileSize);\r\n\r\n            // Bind model events\r\n            this.model.on('destroy', this.close, this);\r\n            this.model.on('fileprogress', this.updateProgress, this);\r\n            this.model.on('filefailed', this.hasFailed, this);\r\n            this.model.on('filedone', this.hasDone, this);\r\n\r\n            // In each case, update view\r\n            this.model.on('all', this.update, this);\r\n\r\n            // Bind events\r\n            //this.bindEvents();\r\n\r\n            // Update elements\r\n            this.update();            \r\n        },\r\n\r\n        _refresh : function(updates) {\r\n\r\n        },\r\n\r\n        /**\r\n         * Update upload progress.\r\n         *\r\n         */\r\n        updateProgress: function (progress) {\r\n            var percent = parseInt(progress.loaded / progress.total * 100, 10);\r\n            var progressHTML = displaySize(progress.loaded)+' of '+ displaySize(progress.total);\r\n            if (percent >= 100 && this.processUploadMsg) { progressHTML = this.processUploadMsg; }\r\n\r\n            this._velm.$('.progress')\r\n                .find('.bar')\r\n                .css('width', percent+'%')\r\n                .parent()\r\n                .find('.progress-label')\r\n                .html(progressHTML);\r\n        },\r\n\r\n        /**\r\n         * File upload has failed.\r\n         *\r\n         */\r\n        hasFailed: function (error){\r\n            this._velm.$('.message').html('<i class=\"icon-error\"></i> '+error);\r\n        },\r\n\r\n        /**\r\n         * File upload is done.\r\n         *\r\n         */\r\n        hasDone: function (result){\r\n            this._velm.$('.message').html('<i class=\"icon-success\"></i> ' + (this.doneMsg || 'Uploaded'));\r\n        },\r\n\r\n        /**\r\n         * Update view without complete rendering.\r\n         *\r\n         */\r\n        update: function () {\r\n            var selectors = this.options.selectors,\r\n                when_pending = this._velm.$(selectors.size + \",\" + selectors.cancel),\r\n                when_running = this._velm.$(selectors.progress + \",\" + selectors.cancel),\r\n                when_done = this._velm.$(selectors.message + \",\" + selectors.clear);\r\n\r\n            if (this.model.isPending()) {\r\n                when_running.add(when_done).addClass('hidden');\r\n                when_pending.removeClass('hidden');\r\n            } else if (this.model.isRunning()) {\r\n                when_pending.add(when_done).addClass('hidden');\r\n                when_running.removeClass('hidden');\r\n            } else if (this.model.isDone() || this.model.isError()) {\r\n                when_pending.add(when_running).addClass('hidden');\r\n                when_done.removeClass('hidden');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Startup widget with binding events\r\n         * @override\r\n         *\r\n         */\r\n        _startup: function () {\r\n            var self = this;\r\n\r\n            // DOM events\r\n            this._velm.$(this.options.selectors.cancel).click(function(){\r\n                self.model.cancel();\r\n                self.collection.remove(self.model);\r\n            });\r\n            this._velm.$(this.options.selectors.clear).click(function(){\r\n                self.model.destroy();\r\n                self.collection.remove(self.model);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Compute data to be passed to the view.\r\n         *\r\n         */\r\n        computeData: function () {\r\n            return $.extend({\r\n              displaySize : displaySize,\r\n              displayDate : displayDate\r\n            }, this.model.get('data'));\r\n        }\r\n    });\r\n\r\n\r\n    var Uploader =  Widget.inherit({\r\n        klassName : \"Uploader\",\r\n        pluginName : \"lark.uploader\",\r\n\r\n        options: {\r\n\r\n            uploadUrl: '/upload',\r\n            autoUpload: false,\r\n            selectors : {\r\n              fileList : '.file-list',\r\n              nodata : \".file-list .no-data\",\r\n              pickFiles: '.file-picker',\r\n              startUploads: '.start-uploads',\r\n              cancelUploads: '.cancel-uploads',\r\n            },\r\n\r\n            dataType: 'json',\r\n\r\n            fileItem : {\r\n            \tselectors : {\r\n\r\n            \t},\r\n\r\n            \ttemplate : null\r\n            }\r\n        },\r\n\r\n        state : {\r\n        },\r\n\r\n        /**\r\n         * Render the main part of upload manager.\r\n         *\r\n         */\r\n        _init: function () {\r\n            var self = this;\r\n\r\n\r\n            // Create the file list\r\n            var files = this._files = new FileItemCollection();\r\n\r\n            // Add add files handler\r\n            var filePicker = this._velm.$(this.options.selectors.pickFiles), self = this;\r\n\r\n            this.uploadProcess =  uploader(this._elm,{  //$.$(this.el).fileupload({\r\n                dataType: this.options.dataType,\r\n                url: this.options.uploadUrl,\r\n                formData: this.options.formData,\r\n                autoUpload: this.options.autoUpload,\r\n                singleFileUploads: true,\r\n                picker : filePicker,\r\n\r\n                'add' : function (e, data) {\r\n                    // Create an array in which the file objects\r\n                    // will be stored.\r\n                    data.uploadManagerFiles = [];\r\n\r\n                    // A file is added, process for each file.\r\n                    // Note: every times, the data.files array length is 1 because\r\n                    //       of \"singleFileUploads\" option.\r\n                    langx.each(data.files, function (index, file_data) {\r\n                        // Create the file object\r\n                        file_data.id = self.file_id++;\r\n                        var file = new FileItem({\r\n                            data: file_data,\r\n                            processor: data\r\n                        });\r\n\r\n                        // Add file in data\r\n                        data.uploadManagerFiles.push(file);\r\n\r\n                        // Trigger event\r\n                        //self.trigger('fileadd', file);\r\n                        // Add it to current list\r\n                        self._files.add(file);\r\n\r\n                        // Create the view\r\n                        self.renderFile(file);\r\n\r\n                    });\r\n                },\r\n                'progress' : function (e, data) {\r\n                    langx.each(data.uploadManagerFiles, function (index, file) {\r\n                        //self.trigger('fileprogress', file, data);\r\n\r\n                        file.progress(data);\r\n                    });\r\n                },\r\n\r\n                'fail' : function (e, data) {\r\n                    langx.each(data.uploadManagerFiles, function (index, file) {\r\n                        var error = \"Unknown error\";\r\n                        if (typeof data.errorThrown == \"string\") {\r\n                            error = data.errorThrown;\r\n                        } else if (typeof data.errorThrown == \"object\") {\r\n                            error = data.errorThrown.message;\r\n                        } else if (data.result) {\r\n                            if (data.result.error) {\r\n                                error = data.result.error;\r\n                            } else if (data.result.files && data.result.files[index] && data.result.files[index].error) {\r\n                                error = data.result.files[index].error;\r\n                            } else {\r\n                                error = \"Unknown remote error\";\r\n                            }\r\n                        }\r\n\r\n                        //self.trigger('filefail', file, error);\r\n                        file.fail(error);\r\n                    });\r\n                },\r\n\r\n                'done' : function (e, data) {\r\n                    langx.each(data.uploadManagerFiles, function (index, file) {\r\n                        //self.trigger('filedone', file, data);\r\n                        file.done(data.result);\r\n                    });\r\n                }\r\n\r\n            });\r\n\r\n            // Add upload process events handlers\r\n            this.bindProcessEvents();\r\n\r\n            // Add cancel all handler\r\n            this._velm.$(this.options.selectors.cancelUploads).click(function(){\r\n                while (self._files.length) {\r\n                    self._files.at(0).cancel();\r\n                }\r\n            });\r\n\r\n            // Add start uploads handler\r\n            this._velm.$(this.options.selectors.startUploads).click(function(){\r\n                self._files.forEach(function(file){\r\n                    file.start();\r\n                });\r\n            });\r\n\r\n            // Render current files\r\n            /*\r\n            this.files.forEach(function (file) {\r\n                self.renderFile(file);\r\n            });\r\n            */\r\n\r\n            this._refresh({files:true});\r\n        \r\n\r\n            this._files.on('all', function(){\r\n              self._refresh({files:true});\r\n            });\r\n\r\n        },\r\n\r\n        _refresh : function(updates) {\r\n            var self = this;\r\n            function updateFileList()  {\r\n                var selectors = self.options.selectors,\r\n                    files = self._files;\r\n                var with_files_elements = self._velm.$(selectors.cancelUploads + ',' + selectors.startUploads);\r\n                var without_files_elements = self._velm.$(selectors.nodata);\r\n                if (files.count() > 0) {\r\n                    with_files_elements.removeClass('hidden');\r\n                    without_files_elements.addClass('hidden');\r\n                } else {\r\n                    with_files_elements.addClass('hidden');\r\n                    without_files_elements.removeClass('hidden');\r\n                }\r\n            }\r\n\r\n            if (updates[\"files\"]) {\r\n              updateFileList();\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * Render a file.\r\n         *\r\n         */\r\n        renderFile: function (file) {\r\n            var file_view = new FileItemWidget(\r\n              $(langx.template(this.options.fileItem.template,file.get(\"data\")))[0],\r\n              {\r\n                model: file,\r\n                template : this.options.fileItem.template\r\n            });\r\n            //this._velm.$(this.options.selectors.fileList).append(file_view.render());\r\n            file_view.render();\r\n            file_view.attach(this._velm.$(this.options.selectors.fileList)[0]);\r\n        },\r\n\r\n        /**\r\n         * Bind events on the upload processor.\r\n         *\r\n         */\r\n        bindProcessEvents: function () {\r\n        }\r\n    });\r\n\r\n    return filer.Uploader = Uploader;\r\n});\r\n\ndefine('skylark-widgets-filer/main',[\r\n\t\"./filer\",\r\n\t\"./Uploader\"\r\n],function(filer){\r\n\treturn filer;\r\n});\ndefine('skylark-widgets-filer', ['skylark-widgets-filer/main'], function (main) { return main; });\n\n"]}